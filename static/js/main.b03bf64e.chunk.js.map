{"version":3,"sources":["Component/Header.js","Events.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Oauth2","activeClassName","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","ready","setAppState","param","then","client","request","res","Loading","Cerner","provider","log","state","Page","State","Value","Table","Display","Pages","Keys","KeysUsed","entry","map","index","Object","keys","resource","key","includes","isNaN","push","DisplayIndex","DisplayCount","i","length","string","resourceType","text","forEach","name","use","dose","num","Date","toDateString","reference","split","undefined","display","page","onClick","SetAppState","Main","this","MainArray","MainIndex","item","value","onChange","event","target","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Account","AccountArray","AccountIndex","App","bind","setState","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAkCeA,EAhCA,SAACC,GAEZ,OAAO,yBAAQC,UAAU,aAAlB,UACH,cAAC,IAAD,CACIC,GAAG,IACHD,UAAU,cAFd,wBAICD,EAAMG,OACH,qBAAKF,UAAU,gBAAf,SACI,cAAC,IAAD,CACIC,GAAG,WACHD,UAAU,cACVG,gBAAgB,qBAHpB,uBAOJ,sBAAKH,UAAU,gBAAf,UACI,cAAC,IAAD,CACIC,GAAG,kBACHD,UAAU,cACVG,gBAAgB,qBAHpB,qBAKA,cAAC,IAAD,CACIF,GAAG,mBACHD,UAAU,cACVG,gBAAgB,qBAHpB,6B,yBCtBVC,EAAS,CAGfA,QAAiB,IAEjBA,EAAOC,QAAQC,OAAS,SAACP,GACrBQ,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,2UACPC,IAAK,8EACLC,YAAa,8CACdC,MAAMC,QAAQC,QAGrBZ,EAAOC,QAAQY,MAAQ,SAACC,EAAaC,GACjCZ,IAAKC,OAAOS,QACPG,MAAK,SAAAC,GACFA,EAAOhB,QAAQiB,QAAQH,GAClBC,MAAK,SAAAG,GAAG,OAAIL,EAAY,CAAEM,SAAS,EAAOtB,OAAQmB,EAAQI,OAAQF,OAClET,OAAM,kBAAMI,EAAY,CAAEM,SAAS,UACzCV,OAAM,kBAAMI,EAAY,CAAEM,SAAS,QAI9CpB,EAAOsB,SAAW,GAElBtB,EAAOsB,SAASpB,OAAS,SAACP,GACtBQ,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,oFACPE,YAAa,8CACdO,KAAKL,QAAQY,KAAKb,MAAMC,QAAQC,QAGvCZ,EAAOsB,SAAST,MAAQ,SAACC,GACrBX,IAAKC,OAAOS,QACPG,MAAK,SAAAC,GAAM,OAAIA,EAAOC,QAAQ,eAC9BF,MAAK,SAAAG,GAAG,OAAKL,EAAY,CAAEM,SAAS,EAAOC,OAAQF,OACnDT,OAAM,kBAAMI,EAAY,CAAEM,SAAS,QAI5CpB,EAAOiB,OAAS,GAShBjB,EAAOiB,OAAOC,QAAU,SAACpB,EAAQgB,EAAanB,GAC3BQ,IAAKc,OAAOnB,EAAO0B,OAE3BvB,QAAQiB,QAAQvB,EAAM8B,MACxBT,MAAK,SAAAG,GAAG,aAAIL,GAAW,GAAGO,OAAQF,GAAX,cAAiBxB,EAAM+B,MAAQ/B,EAAMgC,OAArC,6BAA0D,GAA1D,OACvBjB,MAAMC,QAAQC,QAGRZ,QC2EA4B,EAxID,SAACjC,GACX,IAAMkC,EAAU,GACZC,EAAQ,GACRC,EAAO,GACPC,EAAW,CAAC,UAAW,SAAU,SAAU,WAAY,OAAQ,UAAW,iBAAkB,qBAAsB,oBAAqB,mBAAoB,gBAAiB,4BAA6B,SAAU,cAAe,YAAa,cAAe,OAAQ,YAAa,SAAU,gBAAiB,UAElTrC,EAAM0B,OAAOY,MAAMC,KAAI,SAACD,EAAOE,GAc3B,GAbgBC,OAAOC,KAAKJ,EAAMK,UAC1BJ,KAAI,SAAAK,GACR,QAAO,GACH,KAAMR,EAAKS,SAASD,GAChB,OACJ,KAAOE,MAAMF,GACT,OAAOR,EAAKW,KAAKH,GACrB,KAAOP,EAASQ,SAASD,GACrB,OACJ,QACI,OAAOR,EAAKW,KAAKH,SAGzBJ,EAAQxC,EAAMgD,cAAgBR,EAAQxC,EAAMgD,aAAehD,EAAMiD,cACrE,OAAOf,EAAQa,KAAKT,MAGxB,IAAK,IAAIY,EAAI,EAAGA,EAAIlD,EAAM0B,OAAOY,MAAMa,OAAQD,IACvCA,EAAIlD,EAAMiD,eAAiB,GAAGd,EAAMY,KAAKZ,EAAMgB,QAOvD,OAJAnC,QAAQY,IAAI,SAAUO,GACtBnB,QAAQY,IAAI,gBAAiB5B,EAAMiD,cACnCjC,QAAQY,IAAI,gBAAiB5B,EAAMgD,cAE5B,kCACH,gCACI,6BACKZ,EAAKG,KAAI,SAACK,EAAKJ,GACZ,OAAQI,GACJ,IAAK,cACD,OAAO,sCAASJ,GACpB,QACI,OAAO,6BAAiBI,GAARJ,WAKpC,gCACKN,EAAQK,KAAI,SAACD,EAAOE,GACjB,OAAO,6BACFJ,EAAKG,KAAI,SAACK,EAAKM,GACZ,IAAIE,EAAS,GACb,QAAQ,GACJ,IAAc,SAARR,EACF,OAAQN,EAAMK,SAASU,cACnB,IAAK,gBACD,OAAO,6BAAaf,EAAMK,SAASC,GAAKU,MAAxBJ,GACpB,QAII,OAHAZ,EAAMK,SAASC,GAAKW,SAAQ,SAAAC,GACP,aAAbA,EAAKC,MAAoBL,EAASI,EAAKF,SAExC,6BAAaF,GAAJF,GAE5B,IAAc,WAARN,EAWF,OAVAN,EAAMK,SAASC,GAAKW,SAAQ,SAACG,EAAMC,GAC/B,QAAQ,GACJ,KAAMA,IAAQrB,EAAMK,SAASC,GAAKO,OAAS,EACvCC,GAAUM,EAAKJ,KACf,MACJ,QACIF,GAAUM,EAAKJ,KAAO,SAI3B,6BAAaF,GAAJF,GACpB,IAAc,cAARN,EACN,IAAc,WAARA,EAEF,OADAQ,EAAS,IAAIQ,KAAKtB,EAAMK,SAASC,IAC1B,6BAAaQ,EAAOS,gBAAXX,GACpB,IAAc,YAARN,EACF,OAAKN,EAAMK,SAASC,GAAKkB,UAClB,6BAAaxB,EAAMK,SAASC,GAAKkB,UAAUC,MAAM,KAAK,IAA7Cb,GAD2B,sBAASA,GAExD,IAAc,kBAARN,EACN,IAAc,cAARA,EACN,IAAc,8BAARA,EACN,IAAc,SAARA,EACN,IAAc,aAARA,EACF,QAAQ,GACJ,IAAqC,kBAAxBN,EAAMK,SAASC,GACxB,OAAO,6BAAaN,EAAMK,SAASC,IAAnBM,GACpB,IAAsC,YAAhCZ,EAAMK,SAASU,mBAAsDW,IAAxB1B,EAAMK,SAASC,GAClE,IAAsC,uBAAhCN,EAAMK,SAASU,mBAAiEW,IAAxB1B,EAAMK,SAASC,GAC7E,IAAsC,wBAAhCN,EAAMK,SAASU,mBAAkEW,IAAxB1B,EAAMK,SAASC,GAC9E,IAAsC,gBAAhCN,EAAMK,SAASU,mBAA0DW,IAAxB1B,EAAMK,SAASC,GAClE,OAAO,6BAAaN,EAAMK,SAASC,GAAKU,MAAxBJ,GACpB,QACI,OAAO,sBAASA,GAE5B,IAAc,YAARN,EACF,OAAKN,EAAMK,SAASC,GAAKqB,QAClB,6BAAa3B,EAAMK,SAASC,GAAKqB,SAAxBf,GADyB,sBAASA,GAEtD,IAAc,gBAARN,EAIF,OAFIQ,EADAd,EAAMK,SAASC,GACN,YACG,QACT,6BAAaQ,GAAJF,GAUpB,QACI,MAAmC,kBAAxBZ,EAAMK,SAASC,GAA0B,0CAASM,GACtD,6BAAaZ,EAAMK,SAASC,IAAnBM,QApEhBV,QA0EvBL,EAAMgB,OAAS,EACZ,gCACI,6BACKhB,EAAMI,KAAI,SAAC2B,EAAM1B,GACd,OAAO,oBAEH2B,QAAS,kBAAMnE,EAAMoE,YAAY,CAAEpB,aAAchD,EAAMiD,aAAeiB,KAFnE,SAGLA,EAAO,GAFA1B,UAMrB,SChIS6B,E,4JAEnB,WACE,MAQIC,KAAKtE,MAPPG,EADF,EACEA,OACAuB,EAFF,EAEEA,OACA6C,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAvB,EALF,EAKEA,aACAD,EANF,EAMEA,aACAoB,EAPF,EAOEA,YAGF,OAAO1C,EACL,sBAAKzB,UAAU,WAAf,UACE,qBAAIA,UAAU,WAAd,UACGsE,EAAUhC,KAAI,SAACkC,EAAMvB,GACpB,OAAIsB,IAActB,EAAU,oBAC1BjD,UAAU,qCACVkE,QAAS,kBAAM9D,EAAOiB,OAAOC,QAAQpB,EAAQiE,EAAa,CACxDtC,KAAM2C,EACN1C,MAAO,YACPC,MAAOkB,KALiB,SAO1BuB,GAPmCvB,GAQ9B,oBACLjD,UAAU,gBACVkE,QAAS,kBAAM9D,EAAOiB,OAAOC,QAAQpB,EAAQiE,EAAa,CACxDtC,KAAM2C,EACN1C,MAAO,YACPC,MAAOkB,KALJ,SAOLuB,GAPcvB,MASlB,6BACE,6CAEE,yBAAQwB,MAAOzB,EAAc0B,SAAU,SAAAC,GAAK,OAAIR,EAAY,CAAEnB,aAAc2B,EAAMC,OAAOH,SAAzF,UACE,wBAAQA,MAAO,IAAf,iBACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,2BAKR,cAAC,EAAD,CACChD,OAAQA,EACRuB,aAAcA,EACdD,aAAcA,EACdoB,YAAaA,OAIhB,qBAAKnE,UAAU,WAAf,SACE,4E,GAtD0B6E,IAAMC,WCSzBC,EAFWC,aARV,WAGZ,OADA5E,EAAOC,QAAQC,SACR,qBAAKN,UAAU,aAAf,SACH,qDCMOiF,EAFYD,aARV,WAGb,OADA5E,EAAOsB,SAASpB,SACT,qBAAKN,UAAU,aAAf,SACH,qDCHakF,E,4JAEjB,WACI,MAQIb,KAAKtE,MAPLG,EADJ,EACIA,OACAuB,EAFJ,EAEIA,OACA0D,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,aACApC,EALJ,EAKIA,aACAD,EANJ,EAMIA,aACAoB,EAPJ,EAOIA,YAGJ,OAAO,sBAAKnE,UAAU,cAAf,UACH,oBAAIA,UAAU,cAAd,SACKmF,EAAa7C,KAAI,SAACkC,EAAMvB,GACrB,OAAImC,IAAiBnC,EAAU,oBAC3BjD,UAAU,2CACVkE,QAAS,kBAAM9D,EAAOiB,OAAOC,QAAQpB,EAAQiE,EAAa,CACtDtC,KAAM2C,EACN1C,MAAO,eACPC,MAAOkB,KALgB,SAO7BuB,GAPsCvB,GAQjC,oBACHjD,UAAU,mBACVkE,QAAS,kBAAM9D,EAAOiB,OAAOC,QAAQpB,EAAQiE,EAAa,CACtDtC,KAAM2C,EACN1C,MAAO,eACPC,MAAOkB,KALR,SAOLuB,GAPcvB,QAUxB,6BACI,6CAEI,yBAAQwB,MAAOzB,EAAc0B,SAAU,SAAAC,GAAK,OAAIR,EAAY,CAAEnB,aAAc2B,EAAMC,OAAOH,SAAzF,UACI,wBAAQA,MAAO,IAAf,iBACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,wBAIZ,cAAC,EAAD,CACIhD,OAAQA,EACRuB,aAAcA,EACdD,aAAcA,EACdoB,YAAaA,W,GAhDQU,IAAMC,WCUtBO,G,yDACnB,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,MAAQ,CACXJ,SAAS,EACTtB,OAAQ,KACRuB,OAAQ,KACR6C,UAAW,CAAE,cAAe,YAAa,sBAAuB,sBAChEC,UAAW,EACXY,aAAc,CAAC,UAAW,SAAU,gBAAiB,YACrDC,aAAc,EACdpC,aAAc,IACdD,aAAc,GAEhB,EAAK7B,YAAc,EAAKA,YAAYoE,KAAjB,gBAbF,E,+CAgBnB,SAAYX,GACVN,KAAKkB,SAASZ,K,+BAGhB,WACE,MAAyCN,KAAKzC,MAAtCH,EAAR,EAAQA,OAAQ6C,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,UACtB9C,IACHrB,EAAOC,QAAQY,MAAMoD,KAAKnD,YAAaoD,EAAUC,IACjDnE,EAAOsB,SAAST,MAAMoD,KAAKnD,aAC3BmD,KAAKkB,SAAS,CAAE/D,SAAS,O,oBAI7B,WACE,MAUI6C,KAAKzC,MATPJ,EADF,EACEA,QACAtB,EAFF,EAEEA,OACAuB,EAHF,EAGEA,OACA6C,EAJF,EAIEA,UACAC,EALF,EAKEA,UACAY,EANF,EAMEA,aACAC,EAPF,EAOEA,aACApC,EARF,EAQEA,aACAD,EATF,EASEA,aAGF,OAAO,qBAAK/C,UAAU,MAAf,SACL,eAAC,IAAD,CAAQwF,SAAS,UAAjB,UACGhE,EAAU,KACT,cAAC,EAAD,CACEtB,OAAQA,IAGZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,IAAlB,SACGlE,EACC,qBAAKxB,UAAU,WAAf,SACE,kDAGF,cAAC,EAAD,CACEE,OAAQA,EACRuB,OAAQA,EACR6C,UAAWA,EACXC,UAAWA,EACXvB,aAAcA,EACdD,aAAcA,EACdoB,YAAaE,KAAKnD,gBAIxB,cAAC,IAAD,CAAOwE,KAAK,WAAZ,SACE,cAAC,EAAD,CACExF,OAAQA,EACRuB,OAAQA,EACR0D,aAAcA,EACdC,aAAcA,EACdpC,aAAcA,EACdD,aAAcA,EACdoB,YAAaE,KAAKnD,gBAGtB,cAAC,IAAD,CAAOwE,KAAK,kBAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAACE,EAAD,kB,GAnFqBf,IAAMC,YCFxBe,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b03bf64e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Account</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState, param) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(param)\n                .then(res => setAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(() => setAppState({ Loading: false }));\n        }).catch(() => setAppState({ Loading: false }));\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(console.log).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => client.request(\"Provider\"))\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(() => setAppState({ Loading: false }));\n}\n\n// Client Events\nEvents.client = {};\n\n// Events.client.refresh = (Oauth2, setComponentState) => {\n//     const client = FHIR.client(Oauth2.state);\n\n//     client.refreshIfNeeded()\n//         .then(console.log, console.error);\n// }\n\nEvents.client.request = (Oauth2, setAppState, props) => {\n    const client = FHIR.client(Oauth2.state);\n\n    client.patient.request(props.Page)\n        .then(res => setAppState({ Cerner: res, [props.State]: props.Value, DisplayIndex: 0 }))\n        .catch(console.error);\n}\n\nexport default Events;","const Table = (props) => {\n    const Display = [],\n        Pages = [],\n        Keys = [],\n        KeysUsed = [\"subject\", \"issued\", \"status\", \"category\", \"code\", \"patient\", \"clinicalStatus\", \"verificationStatus\", \"abatementDateTime\", \"abatementBoolean\", \"onsetDateTime\", \"medicationCodeableConcept\", \"dosage\", \"wasNotTaken\", \"substance\", \"criticality\", \"name\", \"birthDate\", \"gender\", \"maritalStatus\", \"active\"];\n\n    props.Cerner.entry.map((entry, index) => {\n        const AllKeys = Object.keys(entry.resource);\n        AllKeys.map(key => {\n            switch(true) {\n                case (Keys.includes(key)):\n                    return\n                case (!isNaN(key)):\n                    return Keys.push(key);\n                case (!KeysUsed.includes(key)):\n                    return \n                default:\n                    return Keys.push(key);\n            }\n        });\n        if (index < props.DisplayIndex || index > props.DisplayIndex + props.DisplayCount) return\n        return Display.push(entry);\n    });\n\n    for (let i = 0; i < props.Cerner.entry.length; i++) {\n        if (i % props.DisplayCount === 0) Pages.push(Pages.length);\n    }\n\n    console.log(\"Pages:\", Pages);\n    console.log(\"DisplayCount:\", props.DisplayCount);\n    console.log(\"DisplayIndex:\", props.DisplayIndex);\n\n    return <table>\n        <thead>\n            <tr>\n                {Keys.map((key, index) => {\n                    switch (key) {\n                        case \"wasNotTaken\":\n                            return <th key={index}>Taken</th>\n                        default:\n                            return <th key={index}>{key}</th>\n                    }\n                })}\n            </tr>\n        </thead>\n        <tbody>\n            {Display.map((entry, index) => {\n                return <tr key={index}>\n                    {Keys.map((key, i) => {\n                        let string = '';\n                        switch (true) {\n                            case (key === \"name\"):\n                                switch (entry.resource.resourceType) {\n                                    case \"RelatedPerson\":\n                                        return <td key={i}>{entry.resource[key].text}</td>\n                                    default:\n                                        entry.resource[key].forEach(name => {\n                                            if (name.use === 'official') string = name.text;\n                                        });\n                                        return <td key={i}>{string}</td>\n                                }\n                            case (key === \"dosage\"):\n                                entry.resource[key].forEach((dose, num) => {\n                                    switch (true) {\n                                        case (num === entry.resource[key].length - 1):\n                                            string += dose.text;\n                                            break;\n                                        default:\n                                            string += dose.text + '/n';\n                                            break;\n                                    }\n                                });\n                                return <td key={i}>{string}</td>\n                            case (key === \"birthDate\"):\n                            case (key === \"issued\"):\n                                string = new Date(entry.resource[key]);\n                                return <td key={i}>{string.toDateString()}</td>\n                            case (key === \"subject\"):\n                                if (!entry.resource[key].reference) return <td key={i}></td>\n                                return <td key={i}>{entry.resource[key].reference.split('/')[1]}</td>\n                            case (key === \"maritalStatus\"):\n                            case (key === \"substance\"):\n                            case (key === \"medicationCodeableConcept\"):\n                            case (key === \"code\"):\n                            case (key === \"category\"):\n                                switch (true) {\n                                    case (typeof entry.resource[key] === 'string'):\n                                        return <td key={i}>{entry.resource[key]}</td>\n                                    case (entry.resource.resourceType === \"Patient\" && entry.resource[key] !== undefined):\n                                    case (entry.resource.resourceType === \"AllergyIntolerance\" && entry.resource[key] !== undefined):\n                                    case (entry.resource.resourceType === \"MedicationStatement\" && entry.resource[key] !== undefined):\n                                    case (entry.resource.resourceType === \"Observation\" && entry.resource[key] !== undefined):\n                                        return <td key={i}>{entry.resource[key].text}</td>\n                                    default:\n                                        return <td key={i}></td>\n                                }\n                            case (key === \"patient\"):\n                                if (!entry.resource[key].display) return <td key={i}></td>\n                                return <td key={i}>{entry.resource[key].display}</td>\n                            case (key === \"wasNotTaken\"):\n                                if (entry.resource[key]) {\n                                    string = \"Not Taken\";\n                                } else string = \"Taken\";\n                                return <td key={i}>{string}</td>\n                            // case (key === \"active\"):\n                            // case (key === \"gender\"):\n                            // case (key === \"criticality\"):\n                            // case (key === \"onsetDateTime\"):\n                            // case (key === \"abatementBoolean\"):\n                            // case (key === \"abatementDateTime\"):\n                            // case (key === \"verificationStatus\"):\n                            // case (key === \"clinicalStatus\"):\n                            // case (key === \"status\"):\n                            default:\n                                if (typeof entry.resource[key] !== 'string') return <td key={i}>NonString</td>\n                                return <td key={i}>{entry.resource[key]}</td>\n                        }\n                    })}\n                </tr>\n            })}\n        </tbody>\n        {Pages.length > 1 ? (\n            <tfoot>\n                <tr>\n                    {Pages.map((page, index) => {\n                        return <td \n                            key={index}\n                            onClick={() => props.SetAppState({ DisplayIndex: props.DisplayCount * page })}\n                        >{page + 1}</td>\n                    })}\n                </tr>\n            </tfoot>\n        ) : null }\n    </table>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props;\n\n    return Cerner ? (\n      <div className=\"App-Main\">\n        <ul className=\"Main-Nav\">\n          {MainArray.map((item, i) => {\n            if (MainIndex === i) return <li key={i} \n              className=\"Main-Nav-Link Main-Nav-Link-Active\" \n              onClick={() => Events.client.request(Oauth2, SetAppState, {\n                Page: item,\n                State: \"MainIndex\",\n                Value: i\n              })}\n            >{item}</li>\n            return <li key={i} \n              className=\"Main-Nav-Link\" \n              onClick={() => Events.client.request(Oauth2, SetAppState, {\n                Page: item,\n                State: \"MainIndex\",\n                Value: i\n              })}\n            >{item}</li>\n          })}\n          <li>\n            <label>\n              Display:\n              <select value={DisplayCount} onChange={event => SetAppState({ DisplayCount: event.target.value })}>\n                <option value={100}>100</option>\n                <option value={50}>50</option>\n                <option value={25}>25</option>\n              </select>\n            </label>\n          </li>\n        </ul>\n        <Table\n         Cerner={Cerner}\n         DisplayCount={DisplayCount}\n         DisplayIndex={DisplayIndex}\n         SetAppState={SetAppState}\n        />\n      </div>\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Account extends React.Component {\n\n    render() {\n        const {\n            Oauth2,\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            DisplayCount,\n            DisplayIndex,\n            SetAppState\n        } = this.props;\n\n        return <div className=\"App-Account\">\n            <ul className=\"Account-Nav\">\n                {AccountArray.map((item, i) => {\n                    if (AccountIndex === i) return <li key={i} \n                        className=\"Account-Nav-Link Account-Nav-Link-Active\" \n                        onClick={() => Events.client.request(Oauth2, SetAppState, {\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                    return <li key={i} \n                        className=\"Account-Nav-Link\" \n                        onClick={() => Events.client.request(Oauth2, SetAppState, {\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                })}\n            </ul>\n            <li>\n                <label>\n                    Display:\n                    <select value={DisplayCount} onChange={event => SetAppState({ DisplayCount: event.target.value })}>\n                        <option value={100}>100</option>\n                        <option value={50}>50</option>\n                        <option value={25}>25</option>\n                    </select>\n                </label>\n            </li>\n            <Table\n                Cerner={Cerner}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={SetAppState}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [ \"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      MainIndex: 0,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      AccountIndex: 0,\n      DisplayCount: 100,\n      DisplayIndex: 0\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner, MainArray, MainIndex } = this.state;\n    if (!Cerner) {\n      Events.patient.ready(this.setAppState, MainArray[MainIndex]);\n      Events.provider.ready(this.setAppState);\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      AccountArray,\n      AccountIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Main\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                Cerner={Cerner}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={this.setAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Oauth2={Oauth2}\n              Cerner={Cerner}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              DisplayCount={DisplayCount}\n              DisplayIndex={DisplayIndex}\n              SetAppState={this.setAppState}\n            />\n          </Route>\n          <Route path=\"/launch-patient\">\n            <LaunchPatient />\n          </Route>\n          <Route path=\"/launch-provider\">\n            <LaunchProvider />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}