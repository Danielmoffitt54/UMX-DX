{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Table.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Events","getFormatedDate","string","str","split","push","splice","join","getPatientName","name","entry","find","nameRecord","use","given","family","getSystemValue","array","system","out","checkSys","c","display","patient","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","Property","Value","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","report","getPath","additional","additionalQty","absentReport","toDateString","category","index","recorded","dateRecorded","onset","onsetDateTime","abatement","clinicalStatus","medication","taken","start","end","allergy","criticality","maritalStatus","birthDate","id","gender","SubHeader","className","map","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","i","PageIndex","path","activeClassName","value","PageType","label","onChange","event","parseInt","target","CurrentPage","Header","Dropdown","onMouseOver","AllOptions","Cards","RedirectRoute","TableFooter","disabled","type","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","toLowerCase","log","SetParentState","PatientWithRouter","withRouter","ProviderWithRouter","App","MainArray","AccountArray","bind","this","setState","MainLabels","AccountLabels","concat","basename","GetHeader","exact","LaunchPatient","LaunchProvider","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56dece76.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 });\n        }).catch(() => props.SetAppState({ Loading: false, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 }));\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Report</th>\n        <th>Context</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Recorded</th>\n        <th>Dates</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Recorder</th>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n        <th>Dates</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Recorder</th>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = getSystemValue(getPath(props.entry, \"code.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"code.text\") || \"Report Error\"),\n        additional = getSystemValue(getPath(props.entry ,\"valueCodeableConcept.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"valueCodeableConcept.text\") || \"N/A\"),\n        additionalQty = getPath(props.entry, \"valueQuantity.value\") || \"N/A\",\n        absentReport = getSystemValue(getPath(props.entry, \"dataAbsentReason.coding\"), \"http://hl7.org/fhir/data-absent-reason\", getPath(props.entry, \"dataAbsentReason.text\") || \"Absent Report\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.absentReport ? absentReport : report }</td>\n        <td>{additional !== \"N/A\" ? additional : additionalQty }</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const recorded = new Date(getFormatedDate(props.entry.dateRecorded)),\n        onset = new Date(getFormatedDate(props.entry.onsetDateTime)),\n        abatement = new Date(getFormatedDate(props.entry.onsetDateTime));\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{recorded.toDateString() || \"N/A\"}</td>\n        <td>{abatement === \"Invalid Date\" ? `${onset.toDateString()} - Present` : `${onset.toDateString()} - ${abatement.toDateString()}` || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", getPath(props.entry, \"medicationCodeableConcept.text\") || \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\",\n        start = new Date(getPath(props.entry, \"effectivePeriod.start\")),\n        end = new Date(getPath(props.entry, \"effectivePeriod.end\"));\n\n    return <tr key={props.index}>\n        <td>{getPath(props.entry, \"informationSource.display\") || \"N/A\"}</td>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n        <td>{end === \"Invalid Date\" ? `${start.toDateString()} - Present` : `${start.toDateString()} - ${end.toDateString()}` || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"None\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"recorder.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{props.entry.category || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\nfunction getFormatedDate(string) {\n    if (typeof string !== 'string') return string\n    let str = string.split('-');\n    str = str.push(str[0]);\n    str = str.splice(0, 1);\n    return str.join('-');\n}\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <header id=\"Header\" className=\"App-Header\">\n        {!props.Oauth2 ? (\n            <div className=\"Header-Main\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</NavLink>\n                <div className=\"Header-Nav\">\n                    <button\n                        className=\"Header-Link\"\n                        onClick={() => props.SetAppState({ Dropdown: null })}\n                        onMouseOver={() => props.SetAppState({ Dropdown: 'Header-Nav' })}\n                    >Login</button>\n                    {props.Dropdown === 'Header-Nav' ? (\n                        <div className=\"Header-Nav-Dropdown\">\n                            <NavLink \n                                to=\"/launch-patient\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                activeClassName=\"Header-Nav-Dropdown-Link-Active\"\n                                onClick={() => props.SetAppState({ Dropdown: null })}\n                            >Patient</NavLink>\n                            <NavLink \n                                to=\"/launch-provider\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                activeClassName=\"Header-Nav-Dropdown-Link-Active\"\n                                onClick={() => props.SetAppState({ Dropdown: null })}\n                            >Provider</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            </div>\n        ) : (\n            <div className=\"Header-Main\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</NavLink>\n                <div className=\"Header-Nav\">\n                    <button\n                        className=\"Header-Link\"\n                        onClick={() => props.SetAppState({ Dropdown: null })}\n                        onMouseOver={() => props.SetAppState({ Dropdown: 'Header-Nav' })}\n                    >Menu</button>\n                    {props.Dropdown === 'Header-Nav' ? (\n                        <div className=\"Header-Nav-Dropdown\">\n                            {props.AllOptions.map((option, i) => {\n                                return <NavLink key={i}\n                                    to={option.path}\n                                    className=\"Header-Nav-Dropdown-Link\"\n                                    activeClassName=\"Header-Nav-Dropdown-Link-Active\"\n                                    onClick={() => {\n                                        props.SetAppState({ Loading: true, Dropdown: null });\n                                        Events.client.request({\n                                            Oauth2: props.Oauth2,\n                                            Page: option.value,\n                                            Property: `${props.PageType}Index`,\n                                            Value: i,\n                                            SetAppState: props.SetAppState\n                                        });\n                                    }}\n                                >{option.label}</NavLink>\n                            })}\n                            <NavLink \n                                to=\"/\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                onClick={() => props.SetAppState({\n                                    Dropdown: null,\n                                    Oauth2: null,\n                                    Patient: null,\n                                    Cerner: null,\n                                    MainIndex: 0,\n                                    AccountIndex: 0,\n                                    DisplayCount: 25,\n                                    DisplayIndex: 0\n                                })}\n                            >Log Out</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            </div>\n        )}\n        {SubHeader(props)}\n    </header>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    return <div className=\"Header-Subheader\">\n        {props.Patient ? (\n            <table>\n                <thead>\n                    {Events.thead.patient()}\n                </thead>\n                <tbody>\n                    {props.Patient.map((entry, index) => {\n                        return Events.tbody.patient({\n                            index: index,\n                            entry: entry\n                        });\n                    })}\n                </tbody>\n            </table>\n        ) : null }\n        {props.Cerner ? (\n            <div className=\"Subheader-Nav\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Subheader-Nav-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Back</NavLink>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <NavLink key={i} \n                        to={option.path}\n                        className=\"Subheader-Nav-Link\"\n                        activeClassName=\"Subheader-Nav-Link-Active\"\n                        onClick={() => {\n                            props.SetAppState({ Loading: true });\n                            Events.client.request({\n                                Oauth2: props.Oauth2,\n                                Page: option.value,\n                                Property: `${props.PageType}Index`,\n                                Value: i,\n                                SetAppState: props.SetAppState\n                            });\n                        }}\n                    >{option.label}</NavLink>\n                    return <NavLink key={i} \n                        to={option.path}\n                        className=\"Subheader-Nav-Link\"\n                        activeClassName=\"Subheader-Nav-Link-Active\"\n                        onClick={() => {\n                            props.SetAppState({ Loading: true });\n                            Events.client.request({\n                                Oauth2: props.Oauth2,\n                                Page: option.value,\n                                Property: `${props.PageType}Index`,\n                                Value: i,\n                                SetAppState: props.SetAppState\n                            });\n                        }}\n                    >{option.label}</NavLink>\n                })}\n                <div className=\"Subheader-Nav-Link\">\n                    <label className=\"Subheader-Label\">\n                        Count:\n                        <select \n                            className=\"Subheader-Select\"\n                            value={props.DisplayCount} \n                            onChange={event => props.SetAppState({ DisplayCount: parseInt(event.target.value), CurrentPage: 1, DisplayIndex: 0 })}\n                        >\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={100}>100</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n        ) : null }\n    </div>\n\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\n\nconst Cards = (props) => {\n\n    return <div className=\"App-Cards\">\n        {props.AllOptions.map((option, i) => {\n            return <NavLink key={i} \n                to={option.path}\n                className=\"Card\"\n                onClick={() => props.RedirectRoute({\n                    option: option,\n                    index: i\n                })}\n            >{option.label}</NavLink>\n        })}\n    </div>\n}\n\nexport default Cards;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <div className=\"App-Table\">\n        <table className=\"Table\">\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: 1, DisplayIndex: 0 })}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage - 1, DisplayIndex: props.DisplayIndex - props.DisplayCount })}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetAppState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetAppState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetAppState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage + 1, DisplayIndex: props.DisplayIndex + props.DisplayCount })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.Pages, DisplayIndex: props.DisplayCount * (props.Pages - 1) })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Table from './Component/Table';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        { \n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        } , {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        } , {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        } , {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        { \n          label: \"Account\",\n          value: \"Patient\",\n          path: \"/account\"\n        } , {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        } , {\n          label: \"Care Plan\",\n          value: \"CarePlan\",\n          path: \"/care-plan\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n    this.RedirectRoute = this.RedirectRoute.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  RedirectRoute(props) {\n    const MainLabels = [],\n      AccountLabels = [],\n      { Oauth2, MainArray, AccountArray } = this.state;\n\n    MainArray.forEach(option => MainLabels.push(option.label));\n    AccountArray.forEach(option => AccountLabels.push(option.label));\n\n    this.setState({ Loading: true });\n    if (AccountLabels.includes(props.option.label)) {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"AccountIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    } else {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"MainIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    }\n    <Redirect to={props.option.path}/>\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllOptions = MainArray.concat(AccountArray);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader \n          AllOptions={AllOptions}\n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Cerner}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please Login to Continue</h1>\n                </div>\n              ) : null\n            )}\n          </Route>\n          {AllOptions.map((option, index) => {\n            return <Route key={index} path={option.path}>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n              ) : (\n                <Table\n                  Cerner={Cerner}\n                  DisplayCount={DisplayCount}\n                  DisplayIndex={DisplayIndex}\n                  CurrentPage={CurrentPage}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n              <Route path=\"/launch-provider\">\n                <LaunchProvider />\n              </Route> \n            </>\n          ) : null }\n        </Switch>\n        {!Loading && Oauth2 ? (\n          <Cards \n            AllOptions={AllOptions}\n            RedirectRoute={this.RedirectRoute}\n          />\n        ) : null }\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  const MainLabels = [],\n    AccountLabels = [];\n  let includedAccount = false;\n\n  props.MainArray.forEach(option => MainLabels.push(option.label));\n  props.AccountArray.forEach(option => {\n    if (props.Cerner && option.value === props.Cerner[0].resourceType) includedAccount = true;\n    AccountLabels.push(option.label)\n  });\n\n  switch (true) {\n    case includedAccount:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}