{"version":3,"sources":["Component/Header.js","Component/Main.js","Events.js","Component/Launch/LaunchPatient.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Oauth2","activeClassName","Main","state","setMainState","bind","event","this","setState","Cerner","React","Component","MainWithRouter","withRouter","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","ready","setAppState","then","client","request","res","log","Loading","err","provider","PatientWithRouter","Account","user","entry","resource","name","text","RouterSwitch","exact","path","SetAppState","LaunchPatient","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f32be3.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Account</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Patient</NavLink>\n                {/* <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Provider</NavLink> */}\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.setMainState = this.setMainState.bind(this);\n  }\n\n  setMainState(event) {\n    this.setState(event);\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner\n    } = this.props;\n\n    return <div className=\"App-Main\">\n      {Oauth2 ? (\n        Cerner ? (\n          <h1>Authorized</h1>\n        ) : (\n          <h1>Unauthorized</h1>\n        )\n      ) : (\n        <h1>Please select account type to Log-In</h1>\n      )}\n    </div>\n  }\n}\n\nconst MainWithRouter = withRouter(Main);\n\nexport default MainWithRouter","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"patient/Patient.read patient/Observation.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            setAppState({ Oauth2: client });\n            client.request(\"Patient\");\n        }).then(res =>  {\n            console.log(\"res:\", res);\n            setAppState({ Loading: false, Cerner: res })\n        }).catch(err => {\n            console.log(err);\n            setAppState({ Loading: false });\n        });\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(console.log).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            setAppState({ Oauth2: client });\n            client.request(\"Provider\");\n        })\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(err => {\n            console.log(err);\n            setAppState({ Loading: false });\n        });\n}\n\nexport default Events;","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","const Account = (props) => {\n    const user = props.Cerner.entry[0];\n\n    return <div className=\"App-Account\">\n        <h1>You are logged in as {user.resource.name[0].text}.</h1>\n    </div>\n}\n\nexport default Account","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // useLocation\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\n// import LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\n// function UseQuery() {\n//     return new URLSearchParams(useLocation().search);\n// }\n\nfunction RouterSwitch(props) {\n  // let code = false, state = false;\n  // const Query = [...UseQuery().entries()];\n\n  // Query.forEach(entry => {\n  //   if (entry[1] === 'code') {\n  //     code = true;\n  //   } else if (entry[1] === 'state') state = true;\n  // });\n\n  // if (code && state) {\n  //   props.setAppState({ LoggedIn: true });\n  // }\n\n  return <Switch>\n    <Route exact path='/'>\n      {props.Loading ? (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      ) : (\n        <Main \n          Oauth2={props.Oauth2}\n          Cerner={props.Cerner}\n          SetAppState={props.SetAppState}\n        />\n      )}\n    </Route>\n    <Route path=\"/launch-patient\">\n      <LaunchPatient />\n    </Route>\n    {/* <Route path=\"/launch-provider\">\n      <LaunchProvider />\n    </Route> */}\n    <Route path=\"/account\">\n      <Account \n        Cerner={props.Cerner}/>\n    </Route>\n  </Switch>\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    Events.patient.ready(this.setAppState);\n    this.setState({ Loading: true });\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner\n    } = this.state;\n\n    if (Oauth2) console.log(\"Oauth2:\", Oauth2);\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? (\n          <header className=\"App-Header\"></header>\n        ) : (\n          <Header \n            Oauth2={Oauth2}\n          />\n        )}\n        <RouterSwitch \n          Loading={Loading}\n          Oauth2={Oauth2}\n          Cerner={Cerner}\n          SetAppState={this.setAppState}\n        />\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}