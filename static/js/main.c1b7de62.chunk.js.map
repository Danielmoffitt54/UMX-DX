{"version":3,"sources":["Component/Header.js","Events.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Oauth2","activeClassName","onClick","SetAppState","Cerner","MainIndex","AccountIndex","DisplayCount","DisplayIndex","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","ready","then","client","request","Page","id","pageLimit","flat","res","Loading","provider","state","State","Value","routeChange","newPage","entry","forEach","PrevScope","includes","resource","resourceType","Table","Display","Pages","Keys","KeysUsed","map","index","Object","keys","key","isNaN","push","i","length","string","Date","toDateString","reference","split","undefined","text","display","page","Main","this","AccountArray","MainArray","item","value","onChange","event","target","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Account","App","setAppState","bind","setState","log","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b7de62.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Account</NavLink>\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Oauth2: null,\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Log Out</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.request(`/${props.Page}?patient=${client.patient.id}`, {\n                pageLimit: 0,\n                flat: true\n            })\n                .then(res => props.SetAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider.ready = (props) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.request(`/${props.Page}?patient=${client.patient.id}`, {\n                pageLimit: 0,\n                flat: true\n            })\n                .then(res => props.SetAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\n// Client Events\nEvents.client = {};\n\n// Events.client.refresh = (Oauth2, setComponentState) => {\n//     const client = FHIR.client(Oauth2.state);\n\n//     client.refreshIfNeeded()\n//         .then(console.log, console.error);\n// }\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.request(`/${props.Page}?patient=${client.patient.id}`, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(res => props.SetAppState({ Cerner: res, [props.State]: props.Value, DisplayIndex: 0 }))\n        .catch(console.error);\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.entry.forEach(entry => {\n        if (props.PrevScope.includes(entry.resource.resourceType)) newPage = true;\n    });\n    if (newPage) Events.client.request(props);\n}\n\nexport default Events;","const Table = (props) => {\n    const Display = [],\n        Pages = [],\n        Keys = [],\n        KeysUsed = [\"subject\", \"issued\", \"status\", \"category\", \"code\", \"patient\", \"clinicalStatus\", \"verificationStatus\", \"abatementDateTime\", \"abatementBoolean\", \"onsetDateTime\", \"medicationCodeableConcept\", \"dosage\", \"wasNotTaken\", \"substance\", \"criticality\", \"name\", \"birthDate\", \"gender\", \"maritalStatus\", \"active\"];\n\n    props.Cerner.map((entry, index) => {\n        const AllKeys = Object.keys(entry);\n        AllKeys.map(key => {\n            switch(true) {\n                case (Keys.includes(key)):\n                    return\n                case (!isNaN(key)):\n                    return Keys.push(key);\n                case (!KeysUsed.includes(key)):\n                    return \n                default:\n                    return Keys.push(key);\n            }\n        });\n        // if (index < props.DisplayIndex || index > props.DisplayIndex + props.DisplayCount) return\n        // return Display.push(entry);\n    });\n\n    for (let i = 0; i < props.Cerner.length; i++) {\n        if (i % props.DisplayCount === 0) Pages.push(Pages.length);\n        if (i >= props.DisplayIndex && i < (props.DisplayIndex + props.DisplayCount)) Display.push(props.Cerner[i]);\n    }\n\n    // console.log(\"Pages:\", Pages);\n    // console.log(\"DisplayCount:\", props.DisplayCount);\n    // console.log(\"DisplayIndex:\", props.DisplayIndex );\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                <tr>\n                    {Keys.map((key, index) => {\n                        switch (key) {\n                            case \"wasNotTaken\":\n                                return <th key={index}>Taken</th>\n                            default:\n                                return <th key={index}>{key}</th>\n                        }\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return <tr key={index}>\n                        {Keys.map((key, i) => {\n                            if (!entry[key]) return <td key={i}></td>\n                            let string = '';\n                            switch (true) {\n                                // case (key === \"name\"):\n                                //     if (entry.resourceType === \"RelatedPerson\") {\n                                //         return <td key={i}>{entry[key].text}</td>\n                                //     } \n                                //     entry[key].forEach(name => {\n                                //         if (name.use === 'official') string = name.text;\n                                //     });\n                                //     return <td key={i}>{string}</td>\n                                // case (key === \"dosage\"):\n                                //     entry[key].forEach((dose, num) => {\n                                //         if (num === entry[key].length - 1) {\n                                //             string += dose.text;\n                                //         } else string += dose.text + '/n';\n                                //     });\n                                //     return <td key={i}>{string}</td>\n                                case (key === \"birthDate\"):\n                                case (key === \"issued\"):\n                                    string = new Date(entry[key]);\n                                    return <td key={i}>{string.toDateString()}</td>\n                                case (key === \"subject\"):\n                                    if (!entry[key].reference) return <td key={i}></td>\n                                    return <td key={i}>{entry[key].reference.split('/')[1]}</td>\n                                case (key === \"maritalStatus\"):\n                                case (key === \"substance\"):\n                                case (key === \"medicationCodeableConcept\"):\n                                case (key === \"code\"):\n                                case (key === \"category\"):\n                                    switch (true) {\n                                        case (typeof entry[key] === 'string'):\n                                            return <td key={i}>{entry[key]}</td>\n                                        case (entry.resourceType === \"Patient\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"AllergyIntolerance\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"MedicationStatement\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"Observation\" && entry[key] !== undefined):\n                                            return <td key={i}>{entry[key].text}</td>\n                                        default:\n                                            return <td key={i}></td>\n                                    }\n                                case (key === \"patient\"):\n                                    if (!entry[key].display) return <td key={i}></td>\n                                    return <td key={i}>{entry[key].display}</td>\n                                case (key === \"wasNotTaken\"):\n                                    if (entry[key]) {\n                                        string = \"Not Taken\";\n                                    } else string = \"Taken\";\n                                    return <td key={i}>{string}</td>\n                                // case (key === \"active\"):\n                                // case (key === \"gender\"):\n                                // case (key === \"criticality\"):\n                                // case (key === \"onsetDateTime\"):\n                                // case (key === \"abatementBoolean\"):\n                                // case (key === \"abatementDateTime\"):\n                                // case (key === \"verificationStatus\"):\n                                // case (key === \"clinicalStatus\"):\n                                // case (key === \"status\"):\n                                default:\n                                    if (typeof entry[key] !== 'string') return <td key={i}>NonString</td>\n                                    return <td key={i}>{entry[key]}</td>\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n        {Pages.length > 1 ? (\n            <ul className=\"Footer-Nav\">\n                {Pages.map((page, index) => {\n                    if (props.DisplayIndex === props.DisplayCount * page) return <li \n                        key={index}\n                        className=\"Footer-Nav-Link Footer-Nav-Link-Active\"\n                        onClick={() => props.SetAppState({ DisplayIndex: props.DisplayCount * page })}\n                    >{page + 1}</li>\n                    return <li \n                        key={index}\n                        className=\"Footer-Nav-Link\"\n                        onClick={() => props.SetAppState({ DisplayIndex: props.DisplayCount * page })}\n                    >{page + 1}</li>\n                })}\n            </ul>\n        ) : null}\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n\n  componentDidMount() {\n    const { Oauth2, Cerner, AccountArray, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        PrevScope: AccountArray,\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        SetAppState: SetAppState,\n        Page: MainArray[MainIndex],\n        State: \"MainIndex\",\n        Value: MainIndex\n      });\n    }\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props;\n\n    return Oauth2 ? (\n      Cerner ? (\n        <div className=\"App-Main\">\n          <ul className=\"Subheader-Nav\">\n            {MainArray.map((item, i) => {\n              if (MainIndex === i) return <li key={i} \n                className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  SetAppState: SetAppState,\n                  Page: item,\n                  State: \"MainIndex\",\n                  Value: i\n                })}\n              >{item}</li>\n              return <li key={i} \n                className=\"Subheader-Nav-Link\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  SetAppState: SetAppState,\n                  Page: item,\n                  State: \"MainIndex\",\n                  Value: i\n                })}\n              >{item}</li>\n            })}\n            <li className=\"Subheader-Nav-Link\">\n              <label className=\"Subheader-Count\">\n                Count:\n                <select \n                  value={DisplayCount} \n                  onChange={event => SetAppState({ \n                    DisplayCount: event.target.value,\n                    DisplayIndex: 0\n                  })}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n              </label>\n            </li>\n          </ul>\n          <Table\n           Cerner={Cerner}\n           DisplayCount={DisplayCount}\n           DisplayIndex={DisplayIndex}\n           SetAppState={SetAppState}\n          />\n        </div>\n      ) : (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Account extends React.Component {\n\n    componentDidMount() {\n      const { Oauth2, Cerner, MainArray, AccountArray, AccountIndex, SetAppState } = this.props;\n      if (Cerner) {\n        Events.client.routeChange({\n          PrevScope: MainArray,\n          Oauth2: Oauth2,\n          Cerner: Cerner,\n          SetAppState: SetAppState,\n          Page: AccountArray[AccountIndex],\n          State: \"AccountIndex\",\n          Value: AccountIndex\n        });\n      }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            DisplayCount,\n            DisplayIndex,\n            SetAppState\n        } = this.props;\n\n        return <div className=\"App-Account\">\n            <ul className=\"Subheader-Nav\">\n                {AccountArray.map((item, i) => {\n                    if (AccountIndex === i) return <li key={i} \n                        className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                        onClick={() => Events.client.request({\n                            Oauth2: Oauth2,\n                            SetAppState: SetAppState,\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                    return <li key={i} \n                        className=\"Subheader-Nav-Link\" \n                        onClick={() => Events.client.request({\n                            Oauth2: Oauth2,\n                            SetAppState: SetAppState,\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                })}\n                <li className=\"Subheader-Nav-Link\">\n                    <label className=\"Subheader-Count\">\n                        Count:\n                        <select \n                            value={DisplayCount} \n                            onChange={event => SetAppState({ \n                                DisplayCount: event.target.value,\n                                DisplayIndex: 0\n                            })}\n                        >\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={100}>100</option>\n                        </select>\n                    </label>\n                </li>\n            </ul>\n            <Table\n                Cerner={Cerner}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={SetAppState}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      MainIndex: 0,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      AccountIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner, MainArray, MainIndex } = this.state;\n    if (!Cerner) {\n      Events.patient.ready({\n        SetAppState: this.setAppState, \n        Page: MainArray[MainIndex]\n      });\n      Events.provider.ready({\n        SetAppState: this.setAppState, \n        Page: MainArray[MainIndex]\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      AccountArray,\n      AccountIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            SetAppState={this.setAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Main\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                Cerner={Cerner}\n                AccountArray={AccountArray}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={this.setAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Oauth2={Oauth2}\n              Cerner={Cerner}\n              MainArray={MainArray}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              DisplayCount={DisplayCount}\n              DisplayIndex={DisplayIndex}\n              SetAppState={this.setAppState}\n            />\n          </Route>\n          <Route path=\"/launch-patient\">\n            <LaunchPatient />\n          </Route>\n          <Route path=\"/launch-provider\">\n            <LaunchProvider />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}