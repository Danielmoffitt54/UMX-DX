{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","route","string","match","toLowerCase","patient","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","SetAppState","Loading","Oauth2","routeChange","Cerner","resourceType","Page","request","state","pageLimit","flat","response","newRes","addEntry","forEach","res","verificationStatus","code","text","push","MainIndex","Value","DisplayIndex","err","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","toDateString","subject","reference","split","category","status","index","onset","onsetDateTime","abatement","clinicalStatus","medication","getPath","taken","allergy","substance","criticality","maritalStatus","birthDate","id","gender","Header","dropdown","this","MainArray","className","to","onClick","setState","prevState","map","title","titleRoute","activeClassName","RedirectRoute","DisplayCount","React","Component","Cards","CardArray","TableFooter","SetParentState","CurrentPage","disabled","type","value","onChange","event","target","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","i","log","Main","SetMainState","bind","parseInt","PatientWithRouter","withRouter","ProviderWithRouter","App","HomeRedirect","basename","exact","path","from","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAGMA,EAAS,GAiOf,SAASC,IAA2B,IAAZC,EAAW,uDAAJ,GACvBC,EAAQD,EAAKE,MAAK,SAAAC,GAAU,MAAuB,aAAnBA,EAAWC,QAAuBJ,EAAK,GAC3E,GAAIC,EAAO,OAAOA,EAAMI,MAAMC,KAAK,KAAO,IAAML,EAAMM,OAI1D,SAASC,IAAyC,IAA1BC,EAAyB,uDAAjB,GAAIC,EAAa,uCAALC,EAAK,uCACzCC,EAAMD,EACJE,EAAWJ,EAAMP,MAAK,SAAAY,GAAC,OAAIA,EAAEJ,SAAWA,KAI9C,OAHIG,GAAYA,EAASE,UACrBH,EAAMC,EAASE,SAEZH,EA1OXd,EAAOkB,MAAQ,SAACC,GACZ,IAAIN,EAAMM,EAAOC,MAAM,gBAEvB,OADAP,EAAMA,EAAIL,KAAK,MACJa,eAIfrB,EAAOsB,QAAU,SAACC,GACdC,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,2UACPC,IAAK,8EACLC,YAAa,8CACdC,MAAMC,QAAQC,QAGrBjC,EAAOkC,SAAW,SAACX,GACfC,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,oFACPC,IAAK,8EACLC,YAAa,8CACdC,MAAMC,QAAQC,QAIrBjC,EAAOmC,OAAS,GAEhBnC,EAAOmC,OAAOC,MAAQ,SAACb,GAGnBC,IAAKC,OAAOW,QACPC,MAAK,SAAAF,GAAM,OAAIZ,EAAMe,YAAY,CAAEC,SAAS,EAAOC,OAAQL,OAC3DJ,OAAM,kBAAMR,EAAMe,YAAY,CAAEC,SAAS,QAGlDvC,EAAOmC,OAAOM,YAAc,SAAClB,GAGrBA,EAAMmB,OAAO,GAAGC,eAAiBpB,EAAMqB,OACvCrB,EAAMe,YAAY,CAAEC,SAAS,IAC7BvC,EAAOmC,OAAOU,QAAQtB,KAI9BvB,EAAOmC,OAAOU,QAAU,SAACtB,GAGNC,IAAKW,OAAOZ,EAAMiB,OAAOM,OACjCxB,QAAQuB,QAAQtB,EAAMqB,KAAM,CAC/BG,UAAW,EACXC,MAAM,IAELX,MAAK,SAAAY,GACF,IAAMC,EAAS,GACXC,GAAW,EACfF,EAASG,SAAQ,SAAAC,GACb,QAAQ,GACJ,QACIF,GAAW,EACX,MACJ,KAAME,EAAIC,oBAAiD,qBAA3BD,EAAIC,mBACpC,KAAMD,EAAIE,MAA0B,qBAAlBF,EAAIE,KAAKC,KACvBL,GAAW,EAGfA,GAAUD,EAAOO,KAAKJ,MAE9B9B,EAAMe,YAAY,CAAEC,SAAS,EAAOG,OAAQQ,EAAQQ,UAAWnC,EAAMoC,MAAOC,aAAc,OAC3F7B,OAAM,SAAA8B,GACLtC,EAAMe,YAAY,CAAEC,SAAS,EAAOmB,UAAWnC,EAAMoC,MAAOC,aAAc,QAKtF5D,EAAO8D,MAAQ,GAEf9D,EAAO8D,MAAMC,YAAc,WACvB,OAAO,+BACH,6CACA,yCACA,wCACA,0CACA,4CAIR/D,EAAO8D,MAAME,UAAY,WACrB,OAAO,+BACH,yCACA,0CACA,wCACA,8CACA,qDACA,iDACA,oDAIRhE,EAAO8D,MAAMG,oBAAsB,WAC/B,OAAO,+BACH,yCACA,4CACA,wCACA,wCACA,2CAIRjE,EAAO8D,MAAMI,mBAAqB,WAC9B,OAAO,+BACH,yCACA,0CACA,2CACA,6CACA,4CAIRlE,EAAO8D,MAAMxC,QAAU,WACnB,OAAO,+BACH,oCACA,sCACA,wCACA,4CACA,oDAIRtB,EAAO8D,MAAMK,cAAgB,WACzB,OAAO,+BACH,yCACA,wCACA,wCACA,gDAKRnE,EAAOoE,MAAQ,GAEfpE,EAAOoE,MAAML,YAAc,SAACxC,GACxB,IAAM8C,EAAS,IAAIC,KAAK/C,EAAMpB,MAAMkE,QAIpC,OAAO,+BACH,6BAAKA,EAAOE,gBAAkB,QAC9B,6BAAKhD,EAAMpB,MAAMqE,QAAQC,UAAUC,MAAM,KAAK,IAAM,QACpD,6BANS,QAOT,6BAAKnD,EAAMpB,MAAMwE,SAASnB,MAAQ,QAClC,6BAAKjC,EAAMpB,MAAMyE,QAAU,UALfrD,EAAMsD,QAS1B7E,EAAOoE,MAAMJ,UAAY,SAACzC,GACtB,IAAMuD,EAAQ,IAAIR,KAAK/C,EAAMpB,MAAM4E,eAC/BC,EAAY,IAAIV,KAAK/C,EAAMpB,MAAM4E,eAErC,OAAO,+BACH,6BAAKxD,EAAMpB,MAAMmB,QAAQL,SAAW,QACpC,6BAAKM,EAAMpB,MAAMwE,SAASnB,MAAQ,QAClC,6BAAKjC,EAAMpB,MAAMoD,KAAKC,MAAQ,QAC9B,6BAAKsB,EAAMP,gBAAkB,QAC7B,6BAAKhD,EAAMpB,MAAMmD,oBAAsB,QACvC,6BAAK/B,EAAMpB,MAAM8E,gBAAkB,QACnC,6BAAKD,EAAUT,gBAAkB,UAPrBhD,EAAMsD,QAW1B7E,EAAOoE,MAAMH,oBAAsB,SAAC1C,GAChC,IAAM2D,EAAaxE,EAAeyE,kBAAQ5D,EAAMpB,MAAO,qCAAuCgF,kBAAQ5D,EAAMpB,MAAO,yCAA0C,8CAA+C,0BACxMiF,EAAQD,kBAAQ5D,EAAMpB,MAAO,eAAiB,KAAO,MAEzD,OAAO,+BACH,6BAAKoB,EAAMpB,MAAMmB,QAAQL,SAAW,QACpC,6BAAKiE,GAAc,QACnB,6BAAKC,kBAAQ5D,EAAMpB,MAAO,6BAA+B,QACzD,6BAAKoB,EAAMpB,MAAMyE,QAAU,QAC3B,6BAAKQ,GAAS,UALF7D,EAAMsD,QAS1B7E,EAAOoE,MAAMF,mBAAqB,SAAC3C,GAC/B,IAAM8D,EAAU3E,EAAeyE,kBAAQ5D,EAAMpB,MAAO,qBAAuBgF,kBAAQ5D,EAAMpB,MAAO,yBAA0B,yBAA0BoB,EAAMpB,MAAMmF,UAAU9B,MAAQ,mBAC9K+B,EAA0C,UAA5BhE,EAAMpB,MAAMoF,YAA0B,YAAc,IAEtE,OAAO,+BACH,6BAAKJ,kBAAQ5D,EAAMpB,MAAO,oBAAsB,QAChD,6BAAKgF,kBAAQ5D,EAAMpB,MAAO,aAAe,QACzC,6BAAKkF,GAAW,QAChB,6BAAKE,GAAe,QACpB,6BAAKhE,EAAMpB,MAAMyE,QAAU,YAInC5E,EAAOoE,MAAM9C,QAAU,SAACC,GACpB,IAAMiE,EAAgB9E,EAAeyE,kBAAQ5D,EAAMpB,MAAO,yBAA2BgF,kBAAQ5D,EAAMpB,MAAO,6BAA8B,iCAAkCoB,EAAMpB,MAAMqF,cAAchC,MAAQ,eACxMiC,EAAY,IAAInB,KAAK/C,EAAMpB,MAAMsF,WAErC,OAAO,+BACH,6BAAKlE,EAAMpB,MAAMuF,IAAM,QACvB,6BAAKzF,EAAesB,EAAMpB,MAAMD,OAAS,QACzC,6BAAKqB,EAAMpB,MAAMwF,QAAU,QAC3B,6BAAKF,EAAUlB,gBAAkB,QACjC,6BAAKiB,GAAiB,UALVjE,EAAMsD,QAS1B7E,EAAOoE,MAAMD,cAAgB,SAAC5C,GAC1B,IAAMkE,EAAY,IAAInB,KAAK/C,EAAMpB,MAAMsF,WAEvC,OAAO,+BACH,6BAAKlE,EAAMpB,MAAMmB,QAAQL,SAAW,QACpC,6BAAKM,EAAMpB,MAAMD,KAAKsD,MAAQ,QAC9B,6BAAKjC,EAAMpB,MAAMwF,QAAU,QAC3B,6BAAKF,EAAUlB,gBAAkB,UAJrBhD,EAAMsD,QAyBX7E,QC/OM4F,E,kDACjB,WAAYrE,GAAQ,IAAD,8BACf,cAAMA,IACDuB,MAAQ,CACT+C,UAAU,GAHC,E,0CAOnB,WAAU,IAAD,OACL,EAIIC,KAAKvE,MAHLiB,EADJ,EACIA,OACAuD,EAFJ,EAEIA,UACAzD,EAHJ,EAGIA,YAEAuD,EACAC,KAAKhD,MADL+C,SAGJ,OAAO,yBAAQG,UAAU,aAAlB,UACH,cAAC,IAAD,CACIC,GAAG,IACHD,UAAU,cACVE,QAAS,kBAAM5D,EAAY,CAAEI,OAAQ,QAHzC,wBAKCF,EACG,sBAAKwD,UAAU,gBAAf,UACI,wBACIA,UAAU,uBACVE,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEP,UAAWO,EAAUP,cAFtE,kBAICA,EACG,sBAAKG,UAAU,qBAAf,UACKD,EAAUM,KAAI,SAACC,EAAOzB,GACnB,IAAM0B,EAAU,WAAOvG,EAAOkB,MAAMoF,IACpC,OAAO,cAAC,IAAD,CACHL,GAAE,WAAMjG,EAAOkB,MAAMoF,IACrBN,UAAU,qBACVQ,gBAAgB,4BAChBN,QAAS,WACL,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAE7D,SAAS,EAAMkE,cAAeF,EAAYV,UAAWO,EAAUP,aAC7F7F,EAAOmC,OAAOU,QAAQ,CAClBL,OAAQA,EACRI,KAAM0D,EACN3C,MAAOkB,EACPvC,YAAaA,KAVlB,SAaLgE,GAbmBzB,MAezB,cAAC,IAAD,CACIoB,GAAG,IACHD,UAAU,qBACVE,QAAS,WACL,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEP,UAAWO,EAAUP,aACnDvD,EAAY,CACRE,OAAQ,KACRE,OAAQ,KACRgB,UAAW,EACXgD,aAAc,GACd9C,aAAc,KAV1B,wBAeJ,QAGR,sBAAKoC,UAAU,gBAAf,UACI,wBACIA,UAAU,uBACVE,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEP,UAAWO,EAAUP,cAFtE,oBAICA,EACG,sBAAKG,UAAU,qBAAf,UACI,cAAC,IAAD,CACIC,GAAG,kBACHD,UAAU,qBACVE,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEP,UAAWO,EAAUP,cAHtE,qBAKA,cAAC,IAAD,CACII,GAAG,mBACHD,UAAU,qBACVE,QAAS,kBAAM,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEP,UAAWO,EAAUP,cAHtE,yBAMJ,e,GApFYc,IAAMC,WCDrBC,E,4JACjB,WACI,MAIIf,KAAKvE,MAHLiB,EADJ,EACIA,OACAsE,EAFJ,EAEIA,UACAxE,EAHJ,EAGIA,YAGJ,OAAO,qBAAK0D,UAAU,YAAf,SACFc,EAAUT,KAAI,SAACC,EAAOzB,GACnB,IAAM0B,EAAU,WAAOvG,EAAOkB,MAAMoF,IACpC,OAAO,qBACHN,UAAU,OACVE,QAAS,WACL5D,EAAY,CAAEC,SAAS,EAAMkE,cAAeF,IAC5CvG,EAAOmC,OAAOU,QAAQ,CAClBL,OAAQA,EACRI,KAAM0D,EACN3C,MAAOkB,EACPvC,YAAaA,KARlB,SAYH,mBAAG0D,UAAU,aAAb,SAA2BM,KAZdzB,Y,GAXE8B,IAAMC,WC6CzC,SAASG,EAAYxF,GACjB,OAAO,sBAAKyE,UAAU,aAAf,UACH,gCACI,wBACIA,UAAU,kBACVE,QAAS,WACL3E,EAAMe,YAAY,CAAEsB,aAAc,IAClCrC,EAAMyF,eAAe,CAAEC,YAAa,KAExCC,SAAU3F,EAAM0F,aAAe,EANnC,mBAQA,wBACIjB,UAAU,kBACVE,QAAS,WACL3E,EAAMe,YAAY,CAAEsB,aAAcrC,EAAMqC,aAAerC,EAAMmF,eAC7DnF,EAAMyF,eAAe,CAAEC,YAAa1F,EAAM0F,YAAc,KAE5DC,SAAU3F,EAAM0F,aAAe,EANnC,qBASJ,qBAAKjB,UAAU,kBAAf,SACI,wBAAOA,UAAU,eAAjB,UACI,uBACIA,UAAU,eACVmB,KAAK,OACLC,MAAO7F,EAAM0F,YACbI,SAAU,SAAAC,GAAK,OAAI/F,EAAMyF,eAAe,CAAEC,YAAaK,EAAMC,OAAOH,SACpEI,WAAY,SAAAF,GACR,GAAkB,UAAdA,EAAMG,IAAiB,CACvB,GAAIlG,EAAM0F,aAAe,EAErB,OADA1F,EAAMe,YAAY,CAAEsB,aAAc,IAC3BrC,EAAMyF,eAAe,CAAEC,YAAa,IAE/C,GAAI1F,EAAM0F,aAAe1F,EAAMmG,MAE3B,OADAnG,EAAMe,YAAY,CAAEsB,aAAcrC,EAAMmB,OAAOiF,OAASpG,EAAMmF,eACvDnF,EAAMyF,eAAe,CAAEC,YAAa1F,EAAMmG,QAErDnG,EAAMe,YAAY,CAAEsB,aAAcrC,EAAMmF,cAAgBnF,EAAM0F,YAAc,SAhB5F,WAoBS1F,EAAMmG,YAGnB,gCACI,wBACI1B,UAAU,kBACVE,QAAS,WACL3E,EAAMe,YAAY,CAAEsB,aAAcrC,EAAMqC,aAAerC,EAAMmF,eAC7DnF,EAAMyF,eAAe,CAAEC,YAAa1F,EAAM0F,YAAc,KAE5DC,SAAU3F,EAAM0F,aAAe1F,EAAMmG,MANzC,kBAQA,wBACI1B,UAAU,kBACVE,QAAS,WACL3E,EAAMe,YAAY,CAAEsB,aAAcrC,EAAMmF,cAAgBnF,EAAMmG,MAAQ,KACtEnG,EAAMyF,eAAe,CAAEC,YAAa1F,EAAMmG,SAE9CR,SAAU3F,EAAM0F,aAAe1F,EAAMmG,MANzC,wBAYGE,MA/GD,SAACrG,GACX,IAAMsG,EAAU,GACZC,EAAO,KACPJ,EAAQK,KAAKC,KAAKzG,EAAMmB,OAAOiF,OAASpG,EAAMmF,cAE9CnF,EAAMmB,OAAO,GAAGC,eAAcmF,EAAOvG,EAAMmB,OAAO,GAAGC,aAAatB,eAItE,IAAK,IAAI4G,EAAI,EAAGA,EAAI1G,EAAMmB,OAAOiF,QAAUE,EAAQF,OAASpG,EAAMmF,aAAcuB,IACxEA,GAAK1G,EAAMqC,cAAciE,EAAQpE,KAAKlC,EAAMmB,OAAOuF,IAQ3D,OALIJ,EAAQF,OAAS,GAAG3F,QAAQkG,IAAI,YAAaL,GAC7CH,EAAQ,GAAG1F,QAAQkG,IAAR,gCAAqC3G,EAAM0F,YAA3C,YAA0DS,IACrEA,EAAQ,GAAG1F,QAAQkG,IAAR,gCAAqC3G,EAAMqC,aAA3C,YAA2DrC,EAAMmB,OAAOiF,SACnFD,EAAQ,GAAG1F,QAAQkG,IAAR,wBAA6B3G,EAAMmF,eAE3C,sBAAKV,UAAU,QAAf,UACH,kCACI,gCACKhG,EAAO8D,MAAMgE,OAElB,gCACKD,EAAQxB,KAAI,SAAClG,EAAO0E,GACjB,OAAO7E,EAAOoE,MAAM0D,GAAM,CACtBjD,MAAOA,EACP1E,MAAOA,YAKtBuH,EAAQ,EACL,cAACX,EAAD,CACIrE,OAAQnB,EAAMmB,OACdgF,MAAOA,EACPhB,aAAcnF,EAAMmF,aACpB9C,aAAcrC,EAAMqC,aACpBqD,YAAa1F,EAAM0F,YACnB3E,YAAaf,EAAMe,YACnB0E,eAAgBzF,EAAMyF,iBAE1B,SCxCSmB,E,kDACnB,WAAY5G,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXmE,YAAa,GAEf,EAAKmB,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,gDAQnB,SAAaf,GACXxB,KAAKK,SAASmB,K,+BAGhB,WACE,MAA8DxB,KAAKvE,MAA3DiB,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQqD,EAAxB,EAAwBA,UAAWrC,EAAnC,EAAmCA,UAAWpB,EAA9C,EAA8CA,YAC1CI,GACF1C,EAAOmC,OAAOM,YAAY,CACxBD,OAAQA,EACRE,OAAQA,EACRE,KAAMmD,EAAUrC,GAChBC,MAAOD,EACPpB,YAAaA,EACb8F,aAActC,KAAKsC,iB,oBAKzB,WAAU,IAAD,OACP,EAKItC,KAAKvE,MAJPmB,EADF,EACEA,OACAgE,EAFF,EAEEA,aACA9C,EAHF,EAGEA,aACAtB,EAJF,EAIEA,YAEA2E,EACEnB,KAAKhD,MADPmE,YAGF,OAAO,sBAAKjB,UAAU,WAAf,UACL,qBAAIA,UAAU,gBAAd,UACE,oBACEA,UAAU,qBACVE,QAAS,kBAAM5D,EAAY,CAAEmE,cAAe,IAAK/D,OAAQ,QAF3D,kBAIA,oBAAIsD,UAAU,qBAAd,SACE,wBAAOA,UAAU,kBAAjB,mBAEE,yBACEA,UAAU,mBACVoB,MAAOV,EACPW,SAAU,SAAAC,GACRhF,EAAY,CAAEoE,aAAc4B,SAAShB,EAAMC,OAAOH,OAAQxD,aAAc,IACxE,EAAKwE,aAAa,CAAEnB,YAAa,KALrC,UAQE,wBAAQG,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,IAAf,4BAKP1E,EACC,cAAC,EAAD,CACEA,OAAQA,EACRgE,aAAcA,EACd9C,aAAcA,EACdqD,YAAaA,EACb3E,YAAaA,EACb8F,aAActC,KAAKsC,eAEnB,Y,GAtEwBzB,IAAMC,WCSzB2B,EAFWC,aARV,WAGZ,OADAxI,EAAOsB,UACA,qBAAK0E,UAAU,aAAf,SACH,qDCMOyC,EAFYD,aARV,WAGb,OADAxI,EAAOkC,WACA,qBAAK8D,UAAU,aAAf,SACH,qDCQa0C,G,yDACnB,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXP,SAAS,EACTC,OAAQ,KACRE,OAAQ,KACRqD,UAAW,CAAC,cAAe,YAAa,sBAAuB,qBAAsB,UAAW,SAAU,gBAAiB,YAC3HrC,UAAW,EACXgD,aAAc,GACd9C,aAAc,EACd+E,aAAc,MAEhB,EAAKrG,YAAc,EAAKA,YAAY+F,KAAjB,gBAZF,E,+CAenB,SAAYf,GACVxB,KAAKK,SAASmB,K,+BAGhB,WACE,MAAkCxB,KAAKhD,MAA/BJ,EAAR,EAAQA,OAAR,EAAgB+D,eACGX,KAAKxD,YAAY,CAAEmE,cAAe,OAChD/D,IACH1C,EAAOmC,OAAOC,MAAM,CAClBE,YAAawD,KAAKxD,cAEpBwD,KAAKK,SAAS,CAAE5D,SAAS,O,oBAI7B,WAAU,IAAD,OACP,EASIuD,KAAKhD,MARPP,EADF,EACEA,QACAC,EAFF,EAEEA,OACAE,EAHF,EAGEA,OACAqD,EAJF,EAIEA,UACArC,EALF,EAKEA,UACAgD,EANF,EAMEA,aACA9C,EAPF,EAOEA,aACA6C,EARF,EAQEA,cAKF,OAFI/D,GAAQV,QAAQkG,IAAI,UAAWxF,GAE5B,qBAAKsD,UAAU,MAAf,SACL,eAAC,IAAD,CAAQ4C,SAAS,UAAjB,UACGrG,EAAU,KACT,cAAC,EAAD,CACEC,OAAQA,EACRuD,UAAWA,EACXzD,YAAawD,KAAKxD,cAGtB,eAAC,IAAD,WACE,eAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,IAAlB,UACGrC,EAAgB,cAAC,IAAD,CAAUoC,OAAK,EAACE,KAAK,IAAItF,MAAI,EAACwC,GAAIQ,IAAmB,KACrElE,EACC,qBAAKyD,UAAU,cAAf,SACE,kDAGDxD,EAKC,cAAC,EAAD,CACEsE,UAAWf,EACXvD,OAAQA,EACRF,YAAawD,KAAKxD,cAPpB,qBAAK0D,UAAU,YAAf,SACE,2EAWHxD,EACCuD,EAAUM,KAAI,SAACC,EAAO2B,GACpB,IAAM1B,EAAU,WAAOvG,EAAOkB,MAAMoF,IACpC,OAAO,eAAC,IAAD,CAAewC,KAAMvC,EAArB,UACJE,EAAgB,cAAC,IAAD,CAAUoC,OAAK,EAACE,KAAMxC,EAAY9C,MAAI,EAACwC,GAAIQ,IAAmB,KAC9ElE,EACC,qBAAKyD,UAAU,cAAf,SACE,kDAGF,cAAC,EAAD,CACExD,OAAQA,EACRE,OAAQA,EACRqD,UAAWA,EACXrC,UAAWA,EACXgD,aAAcA,EACd9C,aAAcA,EACdtB,YAAa,EAAKA,gBAdL2F,MAoBrB,qCACE,cAAC,IAAD,CAAOa,KAAK,kBAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,mBAAZ,SACE,cAACG,EAAD,qB,GAvGatC,IAAMC,YCHxBsC,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/G,MAAK,YAAkD,IAA/CgH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ddcd487.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// String to Route\nEvents.route = (string) => {\n    let str = string.match(/[A-Z][a-z]+/g);\n    str = str.join('-');\n    return str.toLowerCase();\n}\n\n// Launch Events\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => props.SetAppState({ Loading: false, Oauth2: client }))\n        .catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    if (props.Cerner[0].resourceType !== props.Page) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, MainIndex: props.Value, DisplayIndex: 0 });\n        }).catch(err => {\n            props.SetAppState({ Loading: false, MainIndex: props.Value, DisplayIndex: 0 });\n        });\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Subject</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = \"N/A\";\n        // getSystemValue(getPath(props.entry, \"code.coding\") || getPath(props.entry, \"code\"), \"http://snomed.info/sct\", props.entry.code.text || \"Report Unavailable\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{report || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosageInstruction.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Events from '../Events';\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdown: false\n        }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            MainArray,\n            SetAppState\n        } = this.props, {\n            dropdown\n        } = this.state;\n\n        return <header className=\"App-Header\">\n            <NavLink \n                to=\"/\" \n                className=\"Header-Link\"\n                onClick={() => SetAppState({ Cerner: null })}\n            >UMX-DX App</NavLink>\n            {Oauth2 ? (\n                <div className=\"Header-Navbar\">\n                    <button\n                        className=\"Header-Navbar-Button\"\n                        onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                    >Menu</button>\n                    {dropdown ? (\n                        <div className=\"Header-Navbar-List\">\n                            {MainArray.map((title, index) => {\n                                const titleRoute = `/${Events.route(title)}`;\n                                return <NavLink key={index}\n                                    to={`/${Events.route(title)}`} \n                                    className=\"Header-Navbar-Link\"\n                                    activeClassName=\"Header-Navbar-Link-Active\"\n                                    onClick={() => {\n                                        this.setState(prevState => ({ Loading: true, RedirectRoute: titleRoute, dropdown: !prevState.dropdown }));\n                                        Events.client.request({\n                                            Oauth2: Oauth2,\n                                            Page: title,\n                                            Value: index,\n                                            SetAppState: SetAppState\n                                        });\n                                    }}\n                                >{title}</NavLink>\n                            })}\n                            <NavLink \n                                to=\"/\" \n                                className=\"Header-Navbar-Link\"\n                                onClick={() => {\n                                    this.setState(prevState => ({ dropdown: !prevState.dropdown }))\n                                    SetAppState({\n                                        Oauth2: null,\n                                        Cerner: null,\n                                        MainIndex: 0,\n                                        DisplayCount: 25,\n                                        DisplayIndex: 0\n                                    });\n                                }}\n                            >Log Out</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            ) : (\n                <div className=\"Header-Navbar\">\n                    <button\n                        className=\"Header-Navbar-Button\"\n                        onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                    >Launch</button>\n                    {dropdown ? (\n                        <div className=\"Header-Navbar-List\">\n                            <NavLink \n                                to=\"/launch-patient\" \n                                className=\"Header-Navbar-Link\"\n                                onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                            >Patient</NavLink>\n                            <NavLink \n                                to=\"/launch-provider\" \n                                className=\"Header-Navbar-Link\"\n                                onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                            >Provider</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            )}\n        </header>\n    }\n};","import React from 'react';\nimport Events from '../Events';\n\nexport default class Cards extends React.Component {\n    render() {\n        const {\n            Oauth2,\n            CardArray,\n            SetAppState\n        } = this.props;\n\n        return <div className=\"App-Cards\">\n            {CardArray.map((title, index) => {\n                const titleRoute = `/${Events.route(title)}`;\n                return <div key={index} \n                    className=\"Card\"\n                    onClick={() => {\n                        SetAppState({ Loading: true, RedirectRoute: titleRoute });\n                        Events.client.request({\n                            Oauth2: Oauth2,\n                            Page: title,\n                            Value: index,\n                            SetAppState: SetAppState\n                        });\n                    }}\n                >\n                    <a className=\"Card-Title\">{title}</a>\n                </div>\n            })}\n        </div>\n    }\n}","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n    if (Pages > 0) console.log(`Pages(Current/Total): ${props.CurrentPage}/${Pages}`);\n    if (Pages > 0) console.log(`Index(Current/Total): ${props.DisplayIndex}/${props.Cerner.length}`);\n    if (Pages > 0) console.log(`DisplayCount: ${props.DisplayCount}`);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: 0 });\n                    props.SetParentState({ CurrentPage: 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex - props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage - 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetParentState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetParentState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetParentState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex + props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage + 1 });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayCount * (props.Pages - 1) });\n                    props.SetParentState({ CurrentPage: props.Pages });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPage: 1\n    }\n    this.SetMainState = this.SetMainState.bind(this);\n  }\n\n  SetMainState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Oauth2, Cerner, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        Page: MainArray[MainIndex],\n        Value: MainIndex,\n        SetAppState: SetAppState,\n        SetMainState: this.SetMainState\n      });\n    }\n  }\n\n  render() {\n    const {\n      Cerner,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props, {\n      CurrentPage\n    } = this.state;\n\n    return <div className=\"App-Main\">\n      <ul className=\"Subheader-Nav\">\n        <li \n          className=\"Subheader-Nav-Link\"\n          onClick={() => SetAppState({ RedirectRoute: \"/\", Cerner: null })}\n        >Back</li>\n        <li className=\"Subheader-Nav-Link\">\n          <label className=\"Subheader-Label\">\n            Count:\n            <select \n              className=\"Subheader-Select\"\n              value={DisplayCount} \n              onChange={event => {\n                SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                this.SetMainState({ CurrentPage: 1 });\n              }}\n            >\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n            </select>\n          </label>\n        </li>\n      </ul>\n      {Cerner ? (\n        <Table\n          Cerner={Cerner}\n          DisplayCount={DisplayCount}\n          DisplayIndex={DisplayIndex}\n          CurrentPage={CurrentPage}\n          SetAppState={SetAppState}\n          SetMainState={this.SetMainState}\n        />\n      ) : null }\n    </div>\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\", \"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      MainIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0,\n      HomeRedirect: null\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner, RedirectRoute } = this.state;\n    if (RedirectRoute) this.SetAppState({ RedirectRoute: null });\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      RedirectRoute\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            MainArray={MainArray}\n            SetAppState={this.SetAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {RedirectRoute ? <Redirect exact from='/' push to={RedirectRoute}/> : null }\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please select account type to Log-In</h1>\n                </div>\n              ) : (\n                <Cards \n                  CardArray={MainArray}\n                  Oauth2={Oauth2}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n          </Route>\n              {Oauth2 ? (\n                MainArray.map((title, i) => {\n                  const titleRoute = `/${Events.route(title)}`;\n                  return <Route key={i} path={titleRoute}>\n                    {RedirectRoute ? <Redirect exact from={titleRoute} push to={RedirectRoute}/> : null }\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                })\n              ) : (\n                <>\n                  <Route path=\"/launch-patient\">\n                    <LaunchPatient />\n                  </Route>\n                  <Route path=\"/launch-provider\">\n                    <LaunchProvider />\n                  </Route> \n                </>\n              )}\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}