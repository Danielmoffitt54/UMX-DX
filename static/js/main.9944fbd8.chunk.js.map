{"version":3,"sources":["Component/Header.js","Events.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Oauth2","activeClassName","onClick","SetAppState","Cerner","MainIndex","AccountIndex","DisplayCount","DisplayIndex","Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","patient","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","request","Page","pageLimit","flat","res","Loading","err","routeChange","newPage","forEach","PrevScope","includes","resourceType","state","State","Value","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","report","getPath","subject","reference","split","toDateString","category","text","status","index","code","verificationStatus","onset","onsetDateTime","abatement","clinicalStatus","medication","taken","allergy","substance","criticality","maritalStatus","birthDate","id","gender","Table","Display","Pages","Type","toLowerCase","i","length","push","log","map","page","Main","this","AccountArray","MainArray","item","value","onChange","event","target","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Account","App","setAppState","bind","setState","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9944fbd8.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Account</NavLink>\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Oauth2: null,\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Log Out</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(props.Page, {\n                pageLimit: 0,\n                flat: true\n            })\n                .then(res => props.SetAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(err => props.SetAppState({ Loading: false, Oauth2: client, Cerner: err }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) Events.client.request(props);\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(res => props.SetAppState({ Cerner: res, [props.State]: props.Value, DisplayIndex: 0 }))\n        .catch(err => props.SetAppState({ Cerner: err, [props.State]: props.Value, DisplayIndex: 0 }));\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Subject</th>\n        <th>Issued Date</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = getPath(props.entry, \"code.coding[0].display\") || getPath(props.entry, \"dataAbsentReason.text\");\n\n    return <tr key={props.index}>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{report}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    if (props.entry.code.text === \"Entered In Error\" || props.entry.verificationStatus === \"entered-in-error\") return\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosageInstruction.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [],\n        Pages = [],\n        Keys = [],\n        KeysUsed = [\"subject\", \"issued\", \"status\", \"category\", \"code\", \"patient\", \"clinicalStatus\", \"verificationStatus\", \"abatementDateTime\", \"abatementBoolean\", \"onsetDateTime\", \"medicationCodeableConcept\", \"dosage\", \"wasNotTaken\", \"substance\", \"criticality\", \"name\", \"birthDate\", \"gender\", \"maritalStatus\", \"active\"];\n    let Type = null;\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // props.Cerner.map((entry, index) => {\n    //     const AllKeys = Object.keys(entry);\n    //     AllKeys.map(key => {\n    //         switch(true) {\n    //             case (Keys.includes(key)):\n    //                 return\n    //             case (!isNaN(key)):\n    //                 return Keys.push(key);\n    //             case (!KeysUsed.includes(key)):\n    //                 return \n    //             default:\n    //                 return Keys.push(key);\n    //         }\n    //     });\n    //     // if (index < props.DisplayIndex || index > props.DisplayIndex + props.DisplayCount) return\n    //     // return Display.push(entry);\n    // });\n\n    for (let i = 0; i < props.Cerner.length; i++) {\n        if (i % props.DisplayCount === 0) Pages.push(Pages.length);\n        if (i >= props.DisplayIndex && i < (props.DisplayIndex + props.DisplayCount)) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n                {/* <tr>\n                    {Keys.map((key, index) => {\n                        switch (key) {\n                            case \"wasNotTaken\":\n                                return <th key={index}>Taken</th>\n                            default:\n                                return <th key={index}>{key}</th>\n                        }\n                    })}\n                </tr> */}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    })\n                    /* return <tr key={index}>\n                        {Keys.map((key, i) => {\n                            if (!entry[key]) return <td key={i}></td>\n                            let string = '';\n                            switch (true) {\n                                // case (key === \"name\"):\n                                //     if (entry.resourceType === \"RelatedPerson\") {\n                                //         return <td key={i}>{entry[key].text}</td>\n                                //     } \n                                //     entry[key].forEach(name => {\n                                //         if (name.use === 'official') string = name.text;\n                                //     });\n                                //     return <td key={i}>{string}</td>\n                                // case (key === \"dosage\"):\n                                //     entry[key].forEach((dose, num) => {\n                                //         if (num === entry[key].length - 1) {\n                                //             string += dose.text;\n                                //         } else string += dose.text + '/n';\n                                //     });\n                                //     return <td key={i}>{string}</td>\n                                case (key === \"birthDate\"):\n                                case (key === \"issued\"):\n                                    string = new Date(entry[key]);\n                                    return <td key={i}>{string.toDateString()}</td>\n                                case (key === \"subject\"):\n                                    if (!entry[key].reference) return <td key={i}></td>\n                                    return <td key={i}>{entry[key].reference.split('/')[1]}</td>\n                                case (key === \"maritalStatus\"):\n                                case (key === \"substance\"):\n                                case (key === \"medicationCodeableConcept\"):\n                                case (key === \"code\"):\n                                case (key === \"category\"):\n                                    switch (true) {\n                                        case (typeof entry[key] === 'string'):\n                                            return <td key={i}>{entry[key]}</td>\n                                        case (entry.resourceType === \"Patient\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"AllergyIntolerance\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"MedicationStatement\" && entry[key] !== undefined):\n                                        case (entry.resourceType === \"Observation\" && entry[key] !== undefined):\n                                            return <td key={i}>{entry[key].text}</td>\n                                        default:\n                                            return <td key={i}></td>\n                                    }\n                                case (key === \"patient\"):\n                                    if (!entry[key].display) return <td key={i}></td>\n                                    return <td key={i}>{entry[key].display}</td>\n                                case (key === \"wasNotTaken\"):\n                                    if (entry[key]) {\n                                        string = \"Not Taken\";\n                                    } else string = \"Taken\";\n                                    return <td key={i}>{string}</td>\n                                // case (key === \"active\"):\n                                // case (key === \"gender\"):\n                                // case (key === \"criticality\"):\n                                // case (key === \"onsetDateTime\"):\n                                // case (key === \"abatementBoolean\"):\n                                // case (key === \"abatementDateTime\"):\n                                // case (key === \"verificationStatus\"):\n                                // case (key === \"clinicalStatus\"):\n                                // case (key === \"status\"):\n                                default:\n                                    if (typeof entry[key] !== 'string') return <td key={i}>NonString</td>\n                                    return <td key={i}>{entry[key]}</td>\n                            }\n                        })}\n                    </tr> */\n                })}\n            </tbody>\n        </table>\n        {Pages.length > 1 ? (\n            <ul className=\"Footer-Nav\">\n                {Pages.map((page, index) => {\n                    if (props.DisplayIndex === props.DisplayCount * page) return <li \n                        key={index}\n                        className=\"Footer-Nav-Link Footer-Nav-Link-Active\"\n                        onClick={() => props.SetAppState({ DisplayIndex: props.DisplayCount * page })}\n                    >{page + 1}</li>\n                    return <li \n                        key={index}\n                        className=\"Footer-Nav-Link\"\n                        onClick={() => props.SetAppState({ DisplayIndex: props.DisplayCount * page })}\n                    >{page + 1}</li>\n                })}\n            </ul>\n        ) : null}\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n\n  componentDidMount() {\n    const { Oauth2, Cerner, AccountArray, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        PrevScope: AccountArray,\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        SetAppState: SetAppState,\n        Page: MainArray[MainIndex],\n        State: \"MainIndex\",\n        Value: MainIndex\n      });\n    }\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props;\n\n    return Oauth2 ? (\n      Cerner ? (\n        <div className=\"App-Main\">\n          <ul className=\"Subheader-Nav\">\n            {MainArray.map((item, i) => {\n              if (MainIndex === i) return <li key={i} \n                className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  SetAppState: SetAppState,\n                  Page: item,\n                  State: \"MainIndex\",\n                  Value: i\n                })}\n              >{item}</li>\n              return <li key={i} \n                className=\"Subheader-Nav-Link\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  SetAppState: SetAppState,\n                  Page: item,\n                  State: \"MainIndex\",\n                  Value: i\n                })}\n              >{item}</li>\n            })}\n            <li className=\"Subheader-Nav-Link\">\n              <label className=\"Subheader-Count\">\n                Count:\n                <select \n                  value={DisplayCount} \n                  onChange={event => SetAppState({ \n                    DisplayCount: event.target.value,\n                    DisplayIndex: 0\n                  })}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n              </label>\n            </li>\n          </ul>\n          <Table\n           Cerner={Cerner}\n           DisplayCount={DisplayCount}\n           DisplayIndex={DisplayIndex}\n           SetAppState={SetAppState}\n          />\n        </div>\n      ) : (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport Events from '../Events';\nimport Table from './Table';\n\nexport default class Account extends React.Component {\n\n    componentDidMount() {\n      const { Oauth2, Cerner, MainArray, AccountArray, AccountIndex, SetAppState } = this.props;\n      if (Cerner) {\n        Events.client.routeChange({\n          PrevScope: MainArray,\n          Oauth2: Oauth2,\n          Cerner: Cerner,\n          SetAppState: SetAppState,\n          Page: AccountArray[AccountIndex],\n          State: \"AccountIndex\",\n          Value: AccountIndex\n        });\n      }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            DisplayCount,\n            DisplayIndex,\n            SetAppState\n        } = this.props;\n\n        return <div className=\"App-Account\">\n            <ul className=\"Subheader-Nav\">\n                {AccountArray.map((item, i) => {\n                    if (AccountIndex === i) return <li key={i} \n                        className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                        onClick={() => Events.client.request({\n                            Oauth2: Oauth2,\n                            SetAppState: SetAppState,\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                    return <li key={i} \n                        className=\"Subheader-Nav-Link\" \n                        onClick={() => Events.client.request({\n                            Oauth2: Oauth2,\n                            SetAppState: SetAppState,\n                            Page: item,\n                            State: \"AccountIndex\",\n                            Value: i\n                        })}\n                    >{item}</li>\n                })}\n                <li className=\"Subheader-Nav-Link\">\n                    <label className=\"Subheader-Count\">\n                        Count:\n                        <select \n                            value={DisplayCount} \n                            onChange={event => SetAppState({ \n                                DisplayCount: event.target.value,\n                                DisplayIndex: 0\n                            })}\n                        >\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={100}>100</option>\n                        </select>\n                    </label>\n                </li>\n            </ul>\n            <Table\n                Cerner={Cerner}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={SetAppState}\n            />\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      MainIndex: 0,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      AccountIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner, MainArray, MainIndex } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        Page: MainArray[MainIndex],\n        SetAppState: this.setAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      AccountArray,\n      AccountIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            SetAppState={this.setAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Main\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                Cerner={Cerner}\n                AccountArray={AccountArray}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={this.setAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Oauth2={Oauth2}\n              Cerner={Cerner}\n              MainArray={MainArray}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              DisplayCount={DisplayCount}\n              DisplayIndex={DisplayIndex}\n              SetAppState={this.setAppState}\n            />\n          </Route>\n          <Route path=\"/launch-patient\">\n            <LaunchPatient />\n          </Route>\n          <Route path=\"/launch-provider\">\n            <LaunchProvider />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}