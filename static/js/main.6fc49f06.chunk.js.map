{"version":3,"sources":["Component/Header.js","Component/Main.js","Events.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Table/MiniTable.js","Component/Table/Table.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Cerner","activeClassName","Main","state","Loading","Display","Data","setMainState","bind","event","this","setState","TabArray","TabIndex","SetAppState","console","log","map","item","i","onClick","React","Component","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","error","ready","setAppState","then","client","request","res","Oauth2","provider","refresh","setComponentState","refreshIfNeeded","param","PatientWithRouter","withRouter","ProviderWithRouter","Table","FormatTitle","string","charAt","toUpperCase","slice","replace","trim","keyNames","row","Object","keys","forEach","key","includes","push","index","text","Title","isNaN","parseInt","Account","account","entry","personalTable","resource","resourceType","gender","birthDate","address","language","communication","coding","display","maritalStatus","length","careProvider","telecom","contact","App","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAkCeA,EAhCA,SAACC,GAEZ,OAAO,yBAAQC,UAAU,aAAlB,UACH,cAAC,IAAD,CACIC,GAAG,IACHD,UAAU,cAFd,wBAICD,EAAMG,OACH,qBAAKF,UAAU,gBAAf,SACI,cAAC,IAAD,CACIC,GAAG,WACHD,UAAU,cACVG,gBAAgB,uBAHpB,uBAOJ,sBAAKH,UAAU,gBAAf,UACI,cAAC,IAAD,CACIC,GAAG,kBACHD,UAAU,cACVG,gBAAgB,uBAHpB,qBAKA,cAAC,IAAD,CACIF,GAAG,mBACHD,UAAU,cACVG,gBAAgB,uBAHpB,6BCtBKC,E,kDACnB,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,SAAS,EACTC,QAAS,cACTC,KAAM,MAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPH,E,gDAUnB,SAAaC,GACXC,KAAKC,SAASF,K,oBAGhB,WACE,MAKIC,KAAKb,MAJPG,EADF,EACEA,OACAY,EAFF,EAEEA,SACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,YAJF,EASIJ,KAAKP,MAHPC,EANF,EAMEA,QACAC,EAPF,EAOEA,QACAC,EARF,EAQEA,KAQF,OALIA,IACFS,QAAQC,IAAI,WAAYX,GACxBU,QAAQC,IAAI,QAASV,IAGhBN,EACLI,EACE,qBAAKN,UAAU,WAAf,SACE,kDAGF,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,WAAd,SACGc,EAASK,KAAI,SAACC,EAAMC,GACnB,OAAIN,IAAaM,EAAU,oBACzBrB,UAAU,qCACVsB,QAAS,kBAAMN,EAAY,CAAED,SAAUM,KAFd,SAGzBD,GAHkCC,GAI7B,oBACLrB,UAAU,gBACVsB,QAAS,kBAAMN,EAAY,CAAED,SAAUM,KAFlC,SAGLD,GAHcC,QAMpB,qBAAKrB,UAAU,kBAKnB,qBAAKA,UAAU,WAAf,SACE,4E,GAzD0BuB,IAAMC,W,iBCAlCC,EAAS,CAGfA,QAAiB,IAEjBA,EAAOC,QAAQC,OAAS,SAAC5B,GACrB6B,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,2UACPC,IAAK,8EACLC,YAAa,8CACdC,MAAMlB,QAAQmB,QAGrBX,EAAOC,QAAQW,MAAQ,SAACC,GACpBV,IAAKC,OAAOQ,QACPE,MAAK,SAAAC,GACFA,EAAOC,QAAQ,WACVF,MAAK,SAAAG,GAAG,OAAIJ,EAAY,CAAEhC,SAAS,EAAOqC,OAAQH,EAAQtC,OAAQwC,OAClEP,OAAM,kBAAMG,EAAY,CAAEhC,SAAS,UACzC6B,OAAM,kBAAMG,EAAY,CAAEhC,SAAS,QAI9CmB,EAAOmB,SAAW,GAElBnB,EAAOmB,SAASjB,OAAS,SAAC5B,GACtB6B,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,oFACPE,YAAa,8CACdK,KAAKtB,QAAQC,KAAKiB,MAAMlB,QAAQmB,QAGvCX,EAAOmB,SAASP,MAAQ,SAACC,GACrBV,IAAKC,OAAOQ,QACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,QAAQ,eAC9BF,MAAK,SAAAG,GAAG,OAAKJ,EAAY,CAAEhC,SAAS,EAAOJ,OAAQwC,OACnDP,OAAM,kBAAMG,EAAY,CAAEhC,SAAS,QAI5CmB,EAAOe,OAAS,GAEhBf,EAAOe,OAAOK,QAAU,SAACF,EAAQG,GACdlB,IAAKY,OAAOG,EAAOtC,OAE3B0C,kBACFR,KAAKtB,QAAQC,IAAKD,QAAQmB,QAGnCX,EAAOe,OAAOC,QAAU,SAACE,EAAQG,EAAmBE,GACjCpB,IAAKY,OAAOG,EAAOtC,OAE3BoC,QAAQO,GACVT,KAAKtB,QAAQC,IAAKD,QAAQmB,QAGpBX,QC/CAwB,EAFWC,aARV,WAGZ,OADAzB,EAAOC,QAAQC,SACR,qBAAK3B,UAAU,aAAf,SACH,qDCMOmD,EAFYD,aARV,WAGb,OADAzB,EAAOmB,SAASjB,SACT,qBAAK3B,UAAU,aAAf,SACH,qDCLaoD,E,4MAEjBC,YAAc,SAACC,GAEX,OADcA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,IAC/CC,QAAQ,WAAY,OAAOC,Q,4CAG5C,WACU,IACFnD,EACAI,KAAKb,MADLS,KAEAoD,EAAW,GAmBf,OAjBApD,EAAKW,KAAI,SAAC0C,GAEN,OADgBC,OAAOC,KAAKF,GACbG,SAAQ,SAAAC,GACnB,QAAO,GACH,IAAc,UAARA,EACN,IAAc,WAARA,EACN,IAAc,WAARA,EACN,IAAc,cAARA,EACN,IAAc,WAARA,EACN,KAAML,EAASM,SAASD,GACpB,OACJ,QACI,OAAOL,EAASO,KAAKF,UAK9B,uBAAOjE,UAAU,YAAjB,SAaH,uBAAOA,UAAU,iBAAjB,SACKQ,EAAKW,KAAI,SAAC0C,EAAKO,GACZ,OAAO,oBAAgBpE,UAAU,qBAA1B,SACF4D,EAASzC,KAAI,SAAC8C,EAAK5C,GAChB,QAAO,GACH,IAAc,iBAAR4C,EACF,OAAO,6BAAaJ,EAAII,GAAK,GAAGI,MAAhBhD,GACpB,IAAc,SAAR4C,EACN,IAAc,YAARA,EACF,OAAO,6BAAaJ,EAAII,GAAKI,MAAbhD,GACpB,IAA0B,kBAAbwC,EAAII,GACb,OAAO,6BAAaJ,EAAII,IAAR5C,GACpB,QACI,OAAO,UAXP+C,c,GA7CD7C,IAAMC,WCCpB4B,E,4MAEjBC,YAAc,SAACC,GAEX,OADcA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,IAC/CC,QAAQ,WAAY,OAAOC,Q,4CAG5C,WAAU,IAAD,OACL,EAGI/C,KAAKb,MAFLuE,EADJ,EACIA,MACA9D,EAFJ,EAEIA,KAEAoD,EAAW,GAmBf,OAjBApD,EAAKW,KAAI,SAAC0C,GAEN,OADgBC,OAAOC,KAAKF,GACbG,SAAQ,SAAAC,GACnB,QAAO,GACH,IAAc,UAARA,EACN,IAAc,WAARA,EACN,IAAc,WAARA,EACN,IAAc,cAARA,EACN,IAAc,WAARA,EACN,KAAML,EAASM,SAASD,GACpB,OACJ,QACI,OAAOL,EAASO,KAAKF,UAK9B,wBAAOjE,UAAU,QAAjB,UACH,wBAAOA,UAAU,aAAjB,UACKsE,EACG,6BACI,oBAAItE,UAAU,cAAd,SAA6BY,KAAKyC,YAAYiB,OAElD,KACJ,oBAAItE,UAAU,iBAAd,SACK4D,EAASzC,KAAI,SAAC8C,EAAK5C,GAChB,QAAO,GACH,IAAc,YAAR4C,EACF,OAAO,oBAAYjE,UAAU,mBAAbqB,GACpB,KAAOkD,MAAMN,GACT,OAAO,oBAAYjE,UAAU,kBAAtB,mBAA4CwE,SAASP,GAAO,EAA5D,OAAS5C,GACpB,QACI,OAAO,oBAAYrB,UAAU,kBAAtB,SAAyC,EAAKqD,YAAYY,IAAjD5C,YAKpC,uBAAOrB,UAAU,aAAjB,SACKQ,EAAKW,KAAI,SAAC0C,EAAKO,GACZ,OAAO,oBAAgBpE,UAAU,iBAA1B,SACF4D,EAASzC,KAAI,SAAC8C,EAAK5C,GAChB,QAAO,GACH,IAAc,YAAR4C,EACF,OAAO,oBAAYjE,UAAU,kBAAtB,mBAA4CoE,EAAQ,EAApD,cAA2DP,EAAII,KAAtD5C,GACpB,IAAc,iBAAR4C,EACF,OAAO,oBAAYjE,UAAU,kBAAtB,SAAyC6D,EAAII,GAAK,GAAGI,MAA5ChD,GACpB,IAAc,SAAR4C,EACN,IAAc,YAARA,EACF,OAAO,oBAAYjE,UAAU,kBAAtB,SAAyC6D,EAAII,GAAKI,MAAzChD,GACpB,IAA0B,kBAAbwC,EAAII,GACb,OAAO,oBAAYjE,UAAU,kBAAtB,SAAyC6D,EAAII,IAApC5C,GACpB,IAA0B,kBAAbwC,EAAII,GACb,OAAO,oBAAYjE,UAAU,kBAAtB,SACH,cAAC,EAAD,CAAWQ,KAAMqD,EAAII,MADT5C,GAGpB,QACI,OAAO,UAjBP+C,e,GArDD7C,IAAMC,WCApBiD,E,4JAKjB,WACU,IAGFC,EADA9D,KAAKb,MADLG,OAEiByE,MAAM,GACvBC,EAAgB,CACZ,CACIF,QAASA,EAAQG,SAASC,aAC1BC,OAAQL,EAAQG,SAASE,OACzBC,UAAWN,EAAQG,SAASG,UAC5BC,QAASP,EAAQG,SAASI,QAAQ,GAAGZ,KACrCa,SAAUR,EAAQG,SAASM,cAAc,GAAGD,SAASE,OAAO,GAAGC,QAC/DC,cAAeZ,EAAQG,SAASS,cAAcjB,OAI1D,OAAO,sBAAKrE,UAAU,cAAf,UACF0E,EAAQG,SAASI,QAAQM,OAAS,EAC/B,cAAC,EAAD,CACIjB,MAAM,WACN9D,KAAMoE,IAEV,KACHF,EAAQG,SAASW,aAAaD,OAAS,EACpC,cAAC,EAAD,CACIjB,MAAM,gBACN9D,KAAMkE,EAAQG,SAASW,eAE3B,KACHd,EAAQG,SAASY,QAAQF,OAAS,EAC/B,cAAC,EAAD,CACIjB,MAAM,gBACN9D,KAAMkE,EAAQG,SAASY,UAE3B,KACHf,EAAQG,SAASa,QAAQH,OAAS,EAC/B,cAAC,EAAD,CACIjB,MAAM,UACN9D,KAAMkE,EAAQG,SAASa,UAE3B,Y,GA7CqBnE,IAAMC,WCWtBmE,G,yDACnB,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,SAAS,EACTqC,OAAQ,KACRzC,OAAQ,KACRY,SAAU,CAAC,cAAe,OAAQ,QAClCC,SAAU,GAEZ,EAAKuB,YAAc,EAAKA,YAAY5B,KAAjB,gBATF,E,+CAYnB,SAAYC,GACVC,KAAKC,SAASF,K,+BAGhB,WACOC,KAAKP,MAAMH,SACduB,EAAOC,QAAQW,MAAMzB,KAAK0B,aAC1Bb,EAAOmB,SAASP,MAAMzB,KAAK0B,aAC3B1B,KAAKC,SAAS,CAAEP,SAAS,O,oBAI7B,WACE,MAMIM,KAAKP,MALPC,EADF,EACEA,QACAqC,EAFF,EAEEA,OACAzC,EAHF,EAGEA,OACAY,EAJF,EAIEA,SACAC,EALF,EAKEA,SAMF,OAHI4B,GAAQ1B,QAAQC,IAAI,UAAWyB,GAC/BzC,GAAQe,QAAQC,IAAI,UAAWhB,GAE5B,qBAAKF,UAAU,MAAf,SACL,eAAC,IAAD,CAAQ4F,SAAS,UAAjB,UACGtF,EACC,wBAAQN,UAAU,eAElB,cAAC,EAAD,CACEE,OAAQA,IAGZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,IAAlB,SACGxF,EACC,qBAAKN,UAAU,WAAf,SACE,kDAGF,cAAC,EAAD,CACEE,OAAQA,EACRY,SAAUA,EACVC,SAAUA,EACVC,YAAaJ,KAAK0B,gBAIxB,cAAC,IAAD,CAAOwD,KAAK,kBAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,WAAZ,SACE,cAAC,EAAD,CACE5F,OAAQA,kB,GArEWqB,IAAMC,YCFxByE,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6fc49f06.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Cerner ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Account</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import React from 'react';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Display: \"Observation\",\n      Data: null\n    }\n    this.setMainState = this.setMainState.bind(this);\n  }\n\n  setMainState(event) {\n    this.setState(event);\n  }\n\n  render() {\n    const {\n      Cerner,\n      TabArray,\n      TabIndex,\n      SetAppState\n    } = this.props, {\n      Loading,\n      Display,\n      Data\n    } = this.state;\n\n    if (Data) {\n      console.log(\"Display:\", Display);\n      console.log(\"Data:\", Data);\n    }\n\n    return Cerner ? (\n      Loading ? (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      ) : (\n        <div className=\"App-Main\">\n          <ul className=\"Main-Nav\">\n            {TabArray.map((item, i) => {\n              if (TabIndex === i) return <li key={i} \n                className=\"Main-Nav-Link Main-Nav-Link-Active\" \n                onClick={() => SetAppState({ TabIndex: i })}\n              >{item}</li>\n              return <li key={i} \n                className=\"Main-Nav-Link\" \n                onClick={() => SetAppState({ TabIndex: i })}\n              >{item}</li>\n            })}\n          </ul>\n          <div className=\"Main-Table\">\n          </div>\n        </div>\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.request(\"Patient\")\n                .then(res => setAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(() => setAppState({ Loading: false }));\n        }).catch(() => setAppState({ Loading: false }));\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(console.log).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => client.request(\"Provider\"))\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(() => setAppState({ Loading: false }));\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.refresh = (Oauth2, setComponentState) => {\n    const client = FHIR.client(Oauth2.state);\n\n    client.refreshIfNeeded()\n        .then(console.log, console.error);\n}\n\nEvents.client.request = (Oauth2, setComponentState, param) => {\n    const client = FHIR.client(Oauth2.state);\n\n    client.request(param)\n        .then(console.log, console.error);\n}\n\nexport default Events;","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from \"react\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"MiniTable\">\n            {/* <thead className=\"MiniTable-Head\">\n                <tr className=\"MiniTable-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (!isNaN(key)):\n                                return <th key={i}>{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i}>{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead> */}\n            <tbody className=\"MiniTable-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"MiniTable-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"relationship\"):\n                                    return <td key={i}>{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i}>{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i}>{row[key]}</td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from \"react\";\nimport MiniTable from \"./MiniTable\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Title,\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"Table\">\n            <thead className=\"Table-Head\">\n                {Title ? (\n                    <tr>\n                        <th className=\"Table-Title\">{this.FormatTitle(Title)}</th>\n                    </tr>\n                ) : null}\n                <tr className=\"Table-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (key === \"display\"):\n                                return <th key={i} className=\"Table-Head-Data\"></th>\n                            case (!isNaN(key)):\n                                return <th key={i} className=\"Table-Head-Data\">{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i} className=\"Table-Head-Data\">{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead>\n            <tbody className=\"Table-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"Table-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"display\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{`${index + 1}.) ${row[key]}`}</td>\n                                case (key === \"relationship\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key]}</td>\n                                case (typeof row[key] === \"object\"):\n                                    return <td key={i} className=\"Table-Body-Data\">\n                                        <MiniTable Data={row[key]}/>\n                                    </td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from 'react';\nimport Table from './Table/Table';\n\nexport default class Account extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        const {\n            Cerner\n        } = this.props,\n            account = Cerner.entry[0],\n            personalTable = [\n                {\n                    account: account.resource.resourceType,\n                    gender: account.resource.gender,\n                    birthDate: account.resource.birthDate,\n                    address: account.resource.address[0].text,\n                    language: account.resource.communication[0].language.coding[0].display,\n                    maritalStatus: account.resource.maritalStatus.text,\n                }\n            ];\n\n        return <div className=\"App-Account\">\n            {account.resource.address.length > 0 ? (\n                <Table \n                    Title=\"Personal\"\n                    Data={personalTable}\n                />\n            ) : null }\n            {account.resource.careProvider.length > 0 ? (\n                <Table \n                    Title=\"Care Provider\"\n                    Data={account.resource.careProvider}\n                />\n            ) : null }\n            {account.resource.telecom.length > 0 ? (\n                <Table \n                    Title=\"Communication\"\n                    Data={account.resource.telecom}\n                />\n            ) : null }\n            {account.resource.contact.length > 0 ? (\n                <Table \n                    Title=\"Contact\"\n                    Data={account.resource.contact}\n                />\n            ) : null }\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      TabArray: [\"Observation\", \"Tab2\", \"Tab3\"],\n      TabIndex: 0\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    if (!this.state.Cerner) {\n      Events.patient.ready(this.setAppState);\n      Events.provider.ready(this.setAppState);\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      TabArray,\n      TabIndex\n    } = this.state;\n\n    if (Oauth2) console.log(\"Oauth2:\", Oauth2);\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? (\n          <header className=\"App-Header\"></header>\n        ) : (\n          <Header \n            Cerner={Cerner}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Main\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Cerner={Cerner}\n                TabArray={TabArray}\n                TabIndex={TabIndex}\n                SetAppState={this.setAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/launch-patient\">\n            <LaunchPatient />\n          </Route>\n          <Route path=\"/launch-provider\">\n            <LaunchProvider />\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Cerner={Cerner}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}