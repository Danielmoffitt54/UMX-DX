{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","patient","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","SetAppState","Loading","Oauth2","routeChange","newPage","Cerner","forEach","PrevScope","includes","resourceType","request","state","Page","pageLimit","flat","response","newRes","addEntry","res","verificationStatus","code","text","push","State","Value","SetParentState","CurrentPage","err","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","toDateString","subject","reference","split","category","status","index","onset","onsetDateTime","abatement","clinicalStatus","medication","getPath","taken","allergy","substance","criticality","maritalStatus","birthDate","id","gender","Header","dropdown","this","className","to","onClick","setState","prevState","activeClassName","MainIndex","AccountIndex","DisplayCount","DisplayIndex","React","Component","Cards","CardArray","map","title","TableFooter","disabled","type","value","onChange","event","target","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","toLowerCase","i","log","Main","SetMainState","bind","AccountArray","MainArray","parseInt","PatientWithRouter","withRouter","ProviderWithRouter","App","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92976382.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => props.SetAppState({ Loading: false, Oauth2: client }))\n        .catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.State]: props.Value, DisplayIndex: 0 });\n            if (props.SetParentState) props.SetParentState({ CurrentPage: 1 });\n        }).catch(err => {\n            props.SetAppState({ Loading: false, [props.State]: props.Value, DisplayIndex: 0 });\n            if (props.SetParentState) props.SetParentState({ CurrentPage: 1 });\n        });\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Subject</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = \"N/A\";\n        // getSystemValue(getPath(props.entry, \"code.coding\") || getPath(props.entry, \"code\"), \"http://snomed.info/sct\", props.entry.code.text || \"Report Unavailable\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{report || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosageInstruction.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdown: false\n        }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            SetAppState\n        } = this.props, {\n            dropdown\n        } = this.state;\n\n        return <header id=\"Header\" className=\"App-Header\">\n            <NavLink \n                to=\"/\" \n                className=\"Header-Link\"\n                onClick={() => SetAppState({ Cerner: null })}\n            >UMX-DX App</NavLink>\n            {Oauth2 ? (\n                <div className=\"Header-Navbar\">\n                    <button\n                        className=\"Header-Navbar-Button\"\n                        onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                    >Pages</button>\n                    {dropdown ? (\n                        <div className=\"Header-Navbar-List\">\n                            <NavLink \n                                to=\"/\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/account\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                                onClick={() => SetAppState({ Cerner: null })}\n                            >Account</NavLink>\n                            <NavLink \n                                to=\"/\" \n                                className=\"Header-Link\"\n                                onClick={() => SetAppState({\n                                    Oauth2: null,\n                                    Cerner: null,\n                                    MainIndex: 0,\n                                    AccountIndex: 0,\n                                    DisplayCount: 25,\n                                    DisplayIndex: 0\n                                })}\n                            >Log Out</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            ) : (\n                <div className=\"Header-Navbar\">\n                    <button\n                        className=\"Header-Navbar-Button\"\n                        onClick={() => this.setState(prevState => ({ dropdown: !prevState.dropdown }))}\n                    >Platform</button>\n                    {dropdown ? (\n                        <div className=\"Header-Navbar-List\">\n                            <NavLink \n                                to=\"/launch-patient\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                            >Patient</NavLink>\n                            <NavLink \n                                to=\"/launch-provider\" \n                                className=\"Header-Link\"\n                                activeClassName=\"Header-Link-Active\"\n                            >Provider</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            )}\n        </header>\n    }\n};","import Events from '../Events';\n\nconst Cards = (props) => {\n\n    return <div className=\"App-Cards\">\n        {props.CardArray.map((title, index) => {\n            return <div key={index} \n                className=\"Card\"\n                onClick={() => {\n                    props.SetAppState({ Loading: true });\n                    Events.client.request({\n                        Oauth2: props.Oauth2,\n                        Page: title,\n                        State: props.State,\n                        Value: index,\n                        SetAppState: props.SetAppState,\n                        SetParentState: props.SetParentState\n                    });\n                }}\n            >\n                <a className=\"Card-Title\">{title}</a>\n            </div>\n        })}\n    </div>\n}\n\nexport default Cards;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n    if (Pages > 0) console.log(`Pages(Current/Total): ${props.CurrentPage}/${Pages}`);\n    if (Pages > 0) console.log(`Index(Current/Total): ${props.DisplayIndex}/${props.Cerner.length}`);\n    if (Pages > 0) console.log(`DisplayCount: ${props.DisplayCount}`);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: 0 });\n                    props.SetParentState({ CurrentPage: 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex - props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage - 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetParentState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetParentState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetParentState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex + props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage + 1 });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayCount * (props.Pages - 1) });\n                    props.SetParentState({ CurrentPage: props.Pages });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Cards from './Cards';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPage: 1\n    }\n    this.SetMainState = this.SetMainState.bind(this);\n  }\n\n  SetMainState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Oauth2, Cerner, AccountArray, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        PrevScope: AccountArray,\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        Page: MainArray[MainIndex],\n        State: \"MainIndex\",\n        Value: MainIndex,\n        SetAppState: SetAppState,\n        SetParentState: this.SetMainState\n      });\n    }\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props, {\n      CurrentPage\n    } = this.state;\n\n    return Oauth2 ? (\n      <div className=\"App-Main\">\n        <ul className=\"Subheader-Nav\">\n          {MainArray.map((title, i) => {\n            if (MainIndex === i) return <li key={i} \n              className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n              onClick={() => {\n                SetAppState({ Loading: true });\n                Events.client.request({\n                  Oauth2: Oauth2,\n                  Page: title,\n                  State: \"MainIndex\",\n                  Value: i,\n                  SetAppState: SetAppState,\n                  SetParentState: this.SetMainState\n                });\n              }}\n            >{title}</li>\n            return <li key={i} \n              className=\"Subheader-Nav-Link\" \n              onClick={() => {\n                SetAppState({ Loading: true });\n                Events.client.request({\n                  Oauth2: Oauth2,\n                  Page: title,\n                  State: \"MainIndex\",\n                  Value: i,\n                  SetAppState: SetAppState,\n                  SetParentState: this.SetMainState\n                });\n              }}\n            >{title}</li>\n          })}\n          <li className=\"Subheader-Nav-Link\">\n            <label className=\"Subheader-Label\">\n              Count:\n              <select \n                className=\"Subheader-Select\"\n                value={DisplayCount} \n                onChange={event => {\n                  SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                  this.SetMainState({ CurrentPage: 1 });\n                }}\n              >\n                <option value={25}>25</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </select>\n            </label>\n          </li>\n        </ul>\n        <Table\n          Cerner={Cerner}\n          DisplayCount={DisplayCount}\n          DisplayIndex={DisplayIndex}\n          CurrentPage={CurrentPage}\n          SetAppState={SetAppState}\n          SetParentState={this.SetMainState}\n          \n        />\n      </div>\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\", \"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      MainIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            SetAppState={this.SetAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Cards \n                CardArray={MainArray}\n                Oauth2={Oauth2}\n                SetAppState={this.SetAppState}\n              />\n            )}\n          </Route>\n              {Oauth2 ? (\n                <>\n                  <Route path=\"/observation\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/condition\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/medication-statement\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/allergy-intolerance\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/patient\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/person\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/related-person\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                  <Route path=\"/care-plan\">\n                    {Loading ? (\n                      <div className=\"App-Loading\">\n                        <h1>Please wait...</h1>\n                      </div>\n                    ) : (\n                      <Main \n                        Oauth2={Oauth2}\n                        Cerner={Cerner}\n                        MainArray={MainArray}\n                        MainIndex={MainIndex}\n                        DisplayCount={DisplayCount}\n                        DisplayIndex={DisplayIndex}\n                        SetAppState={this.SetAppState}\n                      />\n                    )}\n                  </Route>\n                </>\n              ) : (\n                <>\n                  <Route path=\"/launch-patient\">\n                    <LaunchPatient />\n                  </Route>\n                  <Route path=\"/launch-provider\">\n                    <LaunchProvider />\n                  </Route> \n                </>\n              )}\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}