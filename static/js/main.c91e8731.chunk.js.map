{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Main.js","Component/Launch/LaunchPatient.js","App.js","reportWebVitals.js","index.js"],"names":["Events","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","client","ready","then","patient","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","entry","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","push","Property","Value","main","observation","value","capitalize","category","dataType","codeableConcept","effective","multiValue","issued","date","absent","dataAbsentReason","inter","interpretation","note","annotation","bodySite","method","refRange","backbone","referenceRange","component","Card","style","marginBottom","Header","display","justifyContent","alignItems","Text","margin","Body","as","ListGroup","padding","ListGroupItem","textAlign","Footer","index","condition","verStatus","clinStatus","clinicalStatus","recorded","dateRecorded","severity","onset","abatement","summary","getPath","evidence","medicationstatement","medication","medicationCodeableConcept","dosage","taken","wasNotTaken","effperiod","period","effectivePeriod","log","map","dose","i","allergyintolerance","allergy","criticality","address","telecom","com","use","relatedperson","name","gender","birthDate","obj","type","appliesTo","str","toUpperCase","substring","array","length","out","med","officialName","find","arrayRecord","given","join","family","base","keys","key","quantity","ratio","used","phone","system","bool","author","coding","sys","firstEntry","checkSys","c","Date","toDateString","start","end","replaceAll","split","splice","unshift","unit","comparator","numerator","denominator","range","low","high","SubHeader","Container","noGutter","fluid","Title","Subtitle","id","className","flexDirection","border","Nav","Item","Link","NavLink","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","PageIndex","path","PageType","label","NavDropdown","title","CurrentPage","Navbar","Brand","marginLeft","marginRight","AllOptions","Divider","Cards","CardDeck","height","width","RedirectRoute","TableFooter","disabled","onChange","event","target","onKeyPress","Pages","Main","Display","Type","Math","ceil","toLowerCase","SetParentState","App","Dropdown","MainArray","AccountArray","bind","this","setState","MainLabels","AccountLabels","concat","basename","GetHeader","exact","LaunchPatient","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c91e8731.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\nimport { \n    Card, \n    ListGroup,\n    ListGroupItem \n} from 'react-bootstrap';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res[0] });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 });\n        }).catch(() => props.SetAppState({ Loading: false, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 }));\n}\n\n// // Table Head Events\n// Events.thead = {};\n\n// Events.thead.observation = () => {\n//     return <tr>\n//         <th>Issued Date</th>\n//         <th>Category</th>\n//         <th>Report</th>\n//         <th>Context</th>\n//         <th>Status</th>\n//     </tr>\n// }\n\n// Events.thead.condition = () => {\n//     return <tr>\n//         <th>Patient</th>\n//         <th>Category</th>\n//         <th>Report</th>\n//         <th>Verification Status</th>\n//         <th>Clinical Status</th>\n//         <th>Recorded</th>\n//         <th>Dates</th>\n//     </tr>\n// }\n\n// Events.thead.medicationstatement = () => {\n//     return <tr>\n//         <th>Recorder</th>\n//         <th>Patient</th>\n//         <th>Medication</th>\n//         <th>Dosage</th>\n//         <th>Status</th>\n//         <th>Taken</th>\n//         <th>Dates</th>\n//     </tr>\n// }\n\n// Events.thead.allergyintolerance = () => {\n//     return <tr>\n//         <th>Recorder</th>\n//         <th>Patient</th>\n//         <th>Category</th>\n//         <th>Substance</th>\n//         <th>Criticality</th>\n//         <th>Status</th>\n//     </tr>\n// }\n\n// Events.thead.patient = () => {\n//     return <tr>\n//         <th>ID</th>\n//         <th>Name</th>\n//         <th>Gender</th>\n//         <th>Birth Date</th>\n//         <th>Marital Status</th>\n//     </tr>\n// }\n\n// Events.thead.relatedperson = () => {\n//     return <tr>\n//         <th>Patient</th>\n//         <th>Person</th>\n//         <th>Gender</th>\n//         <th>Birth Date</th>\n//     </tr>\n// }\n\n// // Table Body Events\n// Events.tbody = {};\n\n// Events.tbody.observation = (props) => {\n//     const issued = new Date(props.entry.issued),\n//         report = Events.value.system(getPath(props.entry, \"code.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"code.text\") || \"Report Error\"),\n//         addReport = Events.value.system(getPath(props.entry ,\"valueCodeableConcept.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"valueCodeableConcept.text\") || \"N/A\"),\n//         addQty = getPath(props.entry, \"valueQuantity.value\") || \"N/A\",\n//         addUnit = getPath(props.entry, \"valueQuantity.unit\") || \"N/A\",\n//         absentReport = Events.value.system(getPath(props.entry, \"dataAbsentReason.coding\"), \"http://hl7.org/fhir/data-absent-reason\", getPath(props.entry, \"dataAbsentReason.text\") || \"Absent Report\");\n\n//     let context = addReport;\n//     if (addQty !== \"N/A\") context = addQty;\n//     if (addQty !== \"N/A\" && addUnit !== \"N/A\") context = `${addQty} ${addUnit}`;\n\n//     return <tr key={props.index}>\n//         <td>{issued.toDateString() || \"N/A\"}</td>\n//         <td>{props.entry.category.text || \"N/A\"}</td>\n//         <td>{props.entry.absentReport ? absentReport : report }</td>\n//         <td>{context}</td>\n//         <td>{props.entry.status || \"N/A\"}</td>\n//     </tr>\n// }\n\n// Events.tbody.condition = (props) => {\n//     const recorded = new Date(props.entry.dateRecorded),\n//         onset = new Date(props.entry.onsetDateTime),\n//         abatement = new Date(props.entry.onsetDateTime);\n\n//     return <tr key={props.index}>\n//         <td>{props.entry.patient.display || \"N/A\"}</td>\n//         <td>{props.entry.category.text || \"N/A\"}</td>\n//         <td>{props.entry.code.text || \"N/A\"}</td>\n//         <td>{props.entry.verificationStatus || \"N/A\"}</td>\n//         <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n//         <td>{recorded.toDateString() || \"N/A\"}</td>\n//         <td>{abatement === \"Invalid Date\" ? `${onset.toDateString()} - Present` : `${onset.toDateString()} - ${abatement.toDateString()}` || \"N/A\"}</td>\n//     </tr>\n// }\n\n// Events.tbody.medicationstatement = (props) => {\n//     const medication = Events.value.system(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", getPath(props.entry, \"medicationCodeableConcept.text\") || \"Unnamed Medication(TM)\"),\n//         taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\",\n//         start = new Date(getPath(props.entry, \"effectivePeriod.start\")),\n//         end = new Date(getPath(props.entry, \"effectivePeriod.end\"));\n\n//     return <tr key={props.index}>\n//         <td>{getPath(props.entry, \"informationSource.display\") || \"N/A\"}</td>\n//         <td>{props.entry.patient.display || \"N/A\"}</td>\n//         <td>{medication || \"N/A\"}</td>\n//         <td>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</td>\n//         <td>{props.entry.status || \"N/A\"}</td>\n//         <td>{taken || \"N/A\"}</td>\n//         <td>{end === \"Invalid Date\" ? `${start.toDateString()} - Present` : `${start.toDateString()} - ${end.toDateString()}` || \"N/A\"}</td>\n//     </tr>\n// }\n\n// Events.tbody.allergyintolerance = (props) => {\n//     const allergy = Events.value.system(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n//         criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"None\";\n\n//     return <tr>\n//         <td>{getPath(props.entry, \"recorder.display\") || \"N/A\"}</td>\n//         <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n//         <td>{props.entry.category || \"N/A\"}</td>\n//         <td>{allergy || \"N/A\"}</td>\n//         <td>{criticality || \"N/A\"}</td>\n//         <td>{props.entry.status || \"N/A\"}</td>\n//     </tr>\n// }\n\n// Events.tbody.patient = (props) => {\n//     const maritalStatus = Events.value.system(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n//         birthDate = new Date(props.entry.birthDate);\n\n//     return <tr key={props.index}>\n//         <td>{props.entry.id || \"N/A\"}</td>\n//         <td>{Events.value.officialName(props.entry.name)}</td>\n//         <td>{props.entry.gender || \"N/A\"}</td>\n//         <td>{birthDate.toDateString() || \"N/A\"}</td>\n//         <td>{maritalStatus || \"N/A\"}</td>\n//     </tr>\n// }\n\n// Events.tbody.relatedperson = (props) => {\n//     const birthDate = new Date(props.entry.birthDate);\n\n//     return <tr key={props.index}>\n//         <td>{props.entry.patient.display || \"N/A\"}</td>\n//         <td>{props.entry.name.text || \"N/A\"}</td>\n//         <td>{props.entry.gender || \"N/A\"}</td>\n//         <td>{birthDate.toDateString() || \"N/A\"}</td>\n//     </tr>\n// }\n\n\n// Main Events\nEvents.main = {};\n\nEvents.main.observation = (props) => {\n    const status = Events.value.capitalize(props.entry.status),\n        category = Events.dataType.codeableConcept(props.entry.category),\n        code = Events.dataType.codeableConcept(props.entry.code, \"http://snomed.info/sct\"),\n        effective = Events.value.multiValue(props.entry, \"effective\"),\n        issued = Events.dataType.date(props.entry.issued),\n        value = Events.value.multiValue(props.entry, \"value\"),\n        absent = Events.dataType.codeableConcept(props.entry.dataAbsentReason, \"http://hl7.org/fhir/data-absent-reason\"),\n        inter = Events.dataType.codeableConcept(props.entry.interpretation),\n        note = Events.dataType.annotation(props.entry.note),\n        bodySite = Events.dataType.codeableConcept(props.entry.bodySite),\n        method = Events.dataType.codeableConcept(props.entry.method),\n        refRange = Events.value.backbone(props.entry.referenceRange),\n        component = Events.value.backbone(props.entry.component);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            {category ? (\n                <Card.Text style={{ margin: '0' }}>{`Observations: ${category}`}</Card.Text>\n            ) : (\n                <Card.Text style={{ margin: '0' }}>Observations</Card.Text>\n            )}\n            <Card.Text style={{ margin: '0' }}>{`Status: ${status || \"N/A\"}`}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {issued ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Date Recorded: ${issued}`}</Card.Text> : null }\n            {absent ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Incomplete Reason: ${absent}`}</Card.Text> : null }\n            {bodySite ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Location: ${bodySite}`}</Card.Text> : null }\n            {method ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Method: ${method}`}</Card.Text> : null }\n            {code ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Report: ${code}`}</Card.Text> : null }\n            {component ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Report: ${component}`}</Card.Text> : null }\n            {value ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Value: ${value}`}</Card.Text> : null }\n            {effective ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Effective: ${effective}`}</Card.Text> : null }\n            {inter ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Interpretation: ${inter}`}</Card.Text> : null }\n            {refRange ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Reference: ${refRange}`}</Card.Text> : null }\n        </Card.Body>\n        {note ? (\n            <Card.Footer\n                as={ListGroup}\n                style={{ padding: \"0\" }}\n            >\n                <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Side Note: ${note}`}</Card.Text>\n            </Card.Footer>\n        ): null }\n    </Card>\n}\n\nEvents.main.condition = (props) => {\n    const category = Events.dataType.codeableConcept(props.entry.category),\n        verStatus = Events.value.capitalize(props.entry.verificationStatus),\n        clinStatus = Events.value.capitalize(props.entry.clinicalStatus),\n        recorded = Events.dataType.date(props.entry.dateRecorded),\n        code = Events.dataType.codeableConcept(props.entry.code),\n        bodySite = Events.dataType.codeableConcept(props.entry.bodySite),\n        severity = Events.dataType.codeableConcept(props.entry.severity),\n        onset = Events.value.multiValue(props.entry, 'onset'),\n        abatement = Events.value.multiValue(props.entry, 'abatement'),\n        summary = Events.dataType.codeableConcept(getPath(props.entry, 'stage.summary')),\n        evidence = Events.dataType.codeableConcept(getPath(props.entry, 'evidence.code'));\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            {category ? (\n                <Card.Text style={{ margin: '0' }}>{`Conditions: ${category}`}</Card.Text>\n            ) : (\n                <Card.Text style={{ margin: '0' }}>Conditions</Card.Text>\n            )}\n            <div style={{ display: 'flex' }}>\n                <Card.Text style={{ margin: '0' }}>{`Verify: ${verStatus || \"N/A\"}`}</Card.Text>\n                <Card.Text style={{ margin: '0 0 0 8px' }}>{`Clinical: ${clinStatus || \"N/A\"}`}</Card.Text>\n            </div>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {recorded ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Date Recorded: ${recorded}`}</Card.Text> : null }\n            {code ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Report: ${code}`}</Card.Text> : null }\n            {bodySite ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Location: ${bodySite}`}</Card.Text> : null }\n            {severity ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Severity: ${severity}`}</Card.Text> : null }\n            {onset ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Start: ${onset}`}</Card.Text> : null }\n            {abatement ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`End: ${abatement}`}</Card.Text> : null }\n        </Card.Body>\n        {summary || evidence ? (\n            <Card.Footer\n                as={ListGroup}\n                style={{ padding: \"0\" }}\n            >\n                {summary ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Summary: ${summary}`}</Card.Text> : null }\n                {evidence ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Symptoms: ${evidence}`}</Card.Text> : null }\n            </Card.Footer>\n        ): null }\n    </Card>\n}\n\nEvents.main.medicationstatement = (props) => {\n    const status = Events.value.capitalize(props.entry.status),\n        medication = Events.dataType.codeableConcept(props.entry.medicationCodeableConcept, \"http://www.nlm.nih.gov/research/umls/rxnorm\"),\n        dosage = Events.value.dosage(props.entry.dosage),\n        taken = Events.value.wasNotTaken(props.entry.wasNotTaken),\n        effperiod = Events.dataType.period(props.entry.effectivePeriod);\n\n    console.log(\"Dosage: \", dosage);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>Medications</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{`Status: ${status || \"N/A\"}`}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {medication ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Name: ${medication}`}</Card.Text> : null }\n            {dosage ? dosage.map((dose, i) => {\n                return <Card.Text key={i} as={ListGroupItem} style={{ textAlign: 'left' }}>{\"Dosage: \" + dose}</Card.Text>\n            }) : null }\n            {taken ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Taken: ${taken}`}</Card.Text> : null }\n            {effperiod ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Period: ${effperiod}`}</Card.Text> : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.allergyintolerance = (props) => {\n    const category = Events.value.capitalize(props.entry.category),\n        status = Events.value.capitalize(props.entry.status),\n        allergy = Events.dataType.codeableConcept(props.entry.substance, \"http://snomed.info/sct\"),\n        criticality = Events.value.criticality(props.entry.criticality);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            {category ? (\n                <Card.Text style={{ margin: '0' }}>{`Allergies: ${category}`}</Card.Text>\n            ) : (\n                <Card.Text style={{ margin: '0' }}>Allergies</Card.Text>\n            )}\n            <Card.Text style={{ margin: '0' }}>{`Status: ${status || \"N/A\"}`}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {allergy ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Allergy: ${allergy}`}</Card.Text> : null }\n            {criticality ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Risk: ${criticality}`}</Card.Text> : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.patient = (props) => {\n    const address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>Patient</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {address ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Address: ${address}`}</Card.Text> : null }\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.relatedperson = (props) => {\n    const name = getPath(props.entry, \"name.text\") || null,\n        gender = Events.value.capitalize(props.entry.gender) || null,\n        birthDate = Events.dataType.date(props.entry.birthDate) || null,\n        address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            {name ? (\n                <Card.Text style={{ margin: '0' }}>{`Relatives: ${name}`}</Card.Text>\n            ) : (\n                <Card.Text style={{ margin: '0' }}>Relatives</Card.Text>\n            )}\n            <div style={{ display: 'flex' }}>\n                <Card.Text style={{ margin: '0' }}>{`Gender: ${gender || \"N/A\"}`}</Card.Text>\n                <Card.Text style={{ margin: '0 0 0 8px' }}>{`DOB: ${birthDate || \"N/A\"}`}</Card.Text>\n            </div>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {address ? <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`Address: ${address || \"N/A\"}`}</Card.Text> : null }\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem} style={{ textAlign: 'left' }}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\n// Value Events\nEvents.value = {};\n\nEvents.value.backbone = (obj) => {\n    if (!obj) return null;\n    const code = Events.dataType.codeableConcept(obj.code),\n        value = Events.value.multiValue(obj.value, 'value'),\n        absent = Events.dataType.codeableConcept(obj.dataAbsentReason),\n        inter = Events.dataType.codeableConcept(obj.interpretation),\n        type = Events.dataType.codeableConcept(obj.type),\n        appliesTo = Events.dataType.codeableConcept(obj.appliesTo),\n        text = obj.text;\n    \n    switch (true) {\n        case code:\n            return code;\n        case value:\n            return value;\n        case absent:\n            return absent;\n        case inter:\n            return inter;\n        case type:\n            return type;\n        case appliesTo:\n            return appliesTo;\n        case text:\n            return text;\n        default:\n            return null;\n    }\n\n}\n\nEvents.value.capitalize = (str) => {\n    if (typeof str !== 'string') return null;\n    return str[0].toUpperCase() + str.substring(1);\n}\n\nEvents.value.criticality = (str) => {\n    if (typeof str !== 'string') return null;\n    switch (str) {\n        // case value:\n        //     return \"Low Risk\";\n        case 'CRITH':\n            return \"High Risk\";\n        case (typeof str === 'string'):\n            return \"Unable to Assess Risk\";\n        default:\n            return null;\n    }\n}\n\nEvents.value.dosage = (array) => {\n    if (!array || array.length === 0) return null;\n    const out = [];\n\n    array.forEach(med => {\n        if (med.text) out.push(med.text);\n    });\n    if (out.length === 0) return null;\n    return out;\n}\n\nEvents.value.officialName = (array) => {\n    let entry = array.find(arrayRecord => arrayRecord.use === \"official\") || array[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return null;\n}\n\nEvents.value.multiValue = (obj, base) => {\n    if (!obj || !base) return null;\n    const keys = [`${base}Quantity`, `${base}Timing`, `${base}Instant`, `${base}CodeableConcept`, `${base}Boolean`, `${base}Integer`, `${base}DateTime`, `${base}Time`, `${base}Age`, `${base}Period`, `${base}Range`, `${base}Ratio`, `${base}SampleData`, `${base}String`];\n    let out = null;\n\n    keys.forEach(key => {\n        if (!obj[key]) return\n\n        switch (key) {\n            case `${base}CodeableConcept`:\n                return out = Events.dataType.codeableConcept(obj[key]);\n            case `${base}Instant`:\n            case `${base}Time`:\n            case `${base}DateTime`:\n                return out = Events.dataType.date(obj[key]);\n            case `${base}Period`:\n                return out = Events.dataType.period(obj[key]);\n            case `${base}Quantity`:\n                return out = Events.dataType.quantity(obj[key]);\n            case `${base}Ratio`:\n                return out = Events.dataType.ratio(obj[key]);\n            case `${base}String`:\n            case `${base}Integer`:\n                return out = obj[key];\n            default:\n                return\n        }\n    });\n    return out\n}\n\nEvents.value.telecom = (array) => {\n    const used = [],\n        out = [];\n    let phone = null;\n    \n    array.forEach(com => {\n        if (!com.system || !com.value) return\n        phone = Events.dataType.phone(com.value);\n        if (used.includes(com.value)) return\n\n        switch (com.system) {\n            case 'phone':\n                used.push(com.value);\n                return out.push({\n                    system: com.system,\n                    use: com.use,\n                    value: phone\n                });\n            case 'email':\n                used.push(com.value);\n                return out.push(com);\n            default:\n                return;\n        }\n    });\n\n    if (out.length === 0) return null;\n    return out\n}\n\nEvents.value.wasNotTaken = (bool) => {\n    if (typeof bool !== 'boolean') return null;\n    if (bool) {\n        return \"Medicaiton has not been taken.\"\n    } else return \"Medicaiton has been taken.\"\n}\n\n// DataType Events\nEvents.dataType = {};\n\nEvents.dataType.annotation = (obj) => {\n    if (!obj) return null;\n    const author = Events.value.multiValue(obj, \"author\"),\n        text = obj.text;\n    if (author && text) return author + \": \" + text;\n    return null;\n}\n\nEvents.dataType.coding = (coding, sys) => {\n    if (!coding) return null;\n    const firstEntry = coding[0],\n        checkSys = sys ? coding.find(c => c.system === sys) : null;\n\n    switch (true) {\n        case (checkSys && checkSys.display):\n            return checkSys.display;\n        case (firstEntry && firstEntry.display):\n            return firstEntry.display;\n        default:\n            return null;\n    }\n}\n\nEvents.dataType.codeableConcept = (obj, sys) => {\n    if (!obj) return null;\n    const text = obj.text || null,\n        coding = Events.dataType.coding(obj.coding, sys);\n\n    switch (true) {\n        case (coding):\n            return coding;\n        default:\n            return text;\n    }\n}\n\nEvents.dataType.date = (str) => {\n    if (typeof str !== 'string') return null;\n    const date = new Date(str).toDateString();\n    if (date !== \"Invalid Date\") return date;\n    return null;\n}\n\nEvents.dataType.period = (obj) => {\n    if (!obj) return null;\n    const start = Events.dataType.date(obj.start),\n        end = Events.dataType.date(obj.end);\n    let out = null;\n\n    if (start) out = start;\n    if (start && end) {\n        out += \" - \" + end;\n        \n    } else if (start && end === null) out += \" - Present\";\n    return out;\n}\n\nEvents.dataType.phone = (str) => {\n    if (typeof str !== 'string') return null;\n    let out = str.replaceAll(\"^[0-9]*$\",\"\");\n    if (out.length < 10 || out.length > 11) return null;\n    out = out.split(\"\");\n    if (out.length === 10) {\n        out.splice(6, 0, \"-\");\n        out.splice(3, 0, \") \");\n        out.unshift(\"(\");\n    } else if (out.length === 11) {\n        out.splice(7, 0, \"-\");\n        out.splice(4, 0, \") \");\n        out.splice(1, 0, \" (\");\n    }\n    console.log(\"Phone: \", out);\n    return out.join(\"\");\n}\n\nEvents.dataType.quantity = (obj) => {\n    if (!obj) return null;\n    let out = null;\n    if (obj.value && obj.unit) out = obj.value + \" \" + obj.unit;\n    if (obj.comparator) out = obj.comparator;\n    return out;\n}\n\nEvents.dataType.ratio = (obj) => {\n    if (!obj) return null;\n    const numerator = obj.numerator,\n        denominator = obj.denominator;\n    let out = null;\n\n    if (numerator && denominator) out = numerator + ' / ' + denominator;\n    return out;\n}\n\nEvents.dataType.range = (obj) => {\n    // Temporary copy and paste from period.\n    if (!obj) return null;\n    const low = obj.low,\n        high = obj.high;\n    let out = null;\n\n    if (low) out = low;\n    if (low && high) {\n        out += \" - \" + high;\n        \n    } else if (low && high === null) out += \" - Present\";\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport {\n    Navbar,\n    Nav,\n    NavDropdown,\n    Container,\n    Card,\n    ListGroup,\n    ListGroupItem\n} from 'react-bootstrap';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <Container fluid>\n        {!props.Oauth2 ? (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    style={{ marginLeft: '12vw' }}\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    style={{ marginRight: '12vw' }}\n                    title=\"Login\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    <NavDropdown.Item as={NavLink} to=\"/launch-patient\">Patient</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        ) : (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    style={{ marginLeft: '12vw' }}\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    style={{ marginRight: '12vw' }}\n                    title=\"Menu\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    {props.AllOptions.map((option, i) => {\n                        return <NavDropdown.Item \n                            key={i}\n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</NavDropdown.Item>\n                    })}\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item\n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Oauth2: null,\n                            Patient: null,\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Log Out</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        )}\n        {SubHeader(props)}\n    </Container>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    if (props.Patient) console.log('Patient: ', props.Patient);\n\n    return <Container \n        noGutter\n        fluid\n    >\n        {props.Patient ? (\n            <Card style={{ margin: '0 0 5px 0' }}>\n                <Card.Body  style={{ \n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center' \n                }}>\n                    <div>\n                        <Card.Title style={{ margin: '0' }}>{Events.value.officialName(props.Patient.name)}</Card.Title>\n                        <Card.Subtitle style={{ margin: '0' }}>{`ID: ${props.Patient.id}`}</Card.Subtitle>\n                    </div>\n                    <ListGroup \n                        className=\"list-group-flush\"\n                        style={{ flexDirection: \"row\" }}>\n                        <ListGroupItem style={{ border: 'none' }}>{`Gender: ${Events.value.capitalize(props.Patient.gender)}`}</ListGroupItem>\n                        <ListGroupItem>{`DOB: ${Events.dataType.date(props.Patient.birthDate)}`}</ListGroupItem>\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        ) : null }\n        {props.Cerner ? (\n            <Nav style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                <Nav.Item>\n                    <Nav.Link \n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Back</Nav.Link>\n                </Nav.Item>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                    return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                })}\n                <Nav.Item>\n                    <Nav.Link\n                        as={NavDropdown}\n                        title={`Count: ${props.DisplayCount}`}\n                        id=\"navbarScrollingDropdown\"\n                    >\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 25, CurrentPage: 1, DisplayIndex: 0 })}\n                        >25</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 50, CurrentPage: 1, DisplayIndex: 0 })}\n                        >50</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 100, CurrentPage: 1, DisplayIndex: 0 })}\n                        >100</NavDropdown.Item>\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n        ) : null }\n    </Container>\n\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\nimport {\n    CardDeck,\n    Card\n} from 'react-bootstrap';\n\nconst Cards = (props) => {\n\n    return <CardDeck className=\"d-flex justify-content-around align-items-center flex-wrap m-4\">\n        {props.AllOptions.map((option, i) => {\n            return <Card border=\"primary\" className=\"text-center p-4\" style={{height: '75px', width: '200px'}} >\n                <NavLink key={i} \n                    to={option.path}\n                    onClick={() => props.RedirectRoute({\n                        option: option,\n                        index: i\n                    })}\n                >{option.label}</NavLink>\n            </Card>\n        })}\n    </CardDeck>\n}\n\nexport default Cards;","import {\n  Container\n} from 'react-bootstrap';\nimport Events from \"../Events\";\n\nconst Main = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <Container\n        style={{ padding: '0' }}\n        fluid\n    >\n      <Container>\n        {Display.map((entry, index) => {\n          return Events.main[Type]({\n            index: index,\n            entry: entry\n          });\n        })}\n      </Container>\n      {Pages > 1 ? (\n        <TableFooter \n          Cerner={props.Cerner}\n          Pages={Pages}\n          DisplayCount={props.DisplayCount}\n          DisplayIndex={props.DisplayIndex}\n          CurrentPage={props.CurrentPage}\n          SetAppState={props.SetAppState}\n          SetParentState={props.SetParentState}\n        />\n      ) : null}\n    </Container>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: 1, DisplayIndex: 0 })}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage - 1, DisplayIndex: props.DisplayIndex - props.DisplayCount })}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetAppState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetAppState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetAppState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage + 1, DisplayIndex: props.DisplayIndex + props.DisplayCount })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.Pages, DisplayIndex: props.DisplayCount * (props.Pages - 1) })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Main;","import Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\n\nexport default Patient;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\n// import Spinner from 'react-bootstrap/Spinner'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        {\n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        }, {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        }, {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        }, {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        {\n          label: \"Patient\",\n          value: \"Patient\",\n          path: \"/patient\"\n        }, {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n    this.RedirectRoute = this.RedirectRoute.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  RedirectRoute(props) {\n    const MainLabels = [],\n      AccountLabels = [],\n      { Oauth2, MainArray, AccountArray } = this.state;\n\n    MainArray.forEach(option => MainLabels.push(option.label));\n    AccountArray.forEach(option => AccountLabels.push(option.label));\n\n    this.setState({ Loading: true });\n    if (AccountLabels.includes(props.option.label)) {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"AccountIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    } else {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"MainIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    }\n    <Redirect to={props.option.path} />\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllOptions = MainArray.concat(AccountArray);\n\n    if (Cerner) console.log(\"Cerner: \", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader\n          AllOptions={AllOptions}\n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Cerner}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n                {/* <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner> */}\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please Login to Continue</h1>\n                </div>\n              ) : null\n            )}\n          </Route>\n          {AllOptions.map((option, index) => {\n            return <Route key={index} path={option.path}>\n              {Loading ? (\n                <div className=\"App-Loading\">\n                  <h1>Please wait...</h1>\n                  {/* <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </Spinner> */}\n                </div>\n              ) : (\n                !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n                ) : (\n                  <Main\n                    Cerner={Cerner}\n                    DisplayCount={DisplayCount}\n                    DisplayIndex={DisplayIndex}\n                    CurrentPage={CurrentPage}\n                    SetAppState={this.SetAppState}\n                  />\n                )\n              )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n            </>\n          ) : null}\n        </Switch>\n        {!Loading && Oauth2 ? (\n          <Cards\n            AllOptions={AllOptions}\n            RedirectRoute={this.RedirectRoute}\n          />\n        ) : null}\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  const MainLabels = [],\n    AccountLabels = [];\n  let includedAccount = false;\n\n  props.MainArray.forEach(option => MainLabels.push(option.label));\n  props.AccountArray.forEach(option => {\n    if (props.Cerner && option.value === props.Cerner[0].resourceType) includedAccount = true;\n    AccountLabels.push(option.label)\n  });\n\n  switch (true) {\n    case includedAccount:\n      return <Header\n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header\n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('./index.scss');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}