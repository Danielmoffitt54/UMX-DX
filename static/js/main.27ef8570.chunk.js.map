{"version":3,"sources":["Component/Header.js","Component/Main.js","Events.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Table/MiniTable.js","Component/Table/Table.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Cerner","activeClassName","Main","state","Loading","Display","Data","setMainState","bind","event","this","setState","console","log","React","Component","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","error","ready","setAppState","then","client","request","provider","res","refresh","Oauth2","setComponentState","refreshIfNeeded","param","err","PatientWithRouter","withRouter","ProviderWithRouter","Table","FormatTitle","string","charAt","toUpperCase","slice","replace","trim","keyNames","map","row","Object","keys","forEach","key","includes","push","index","i","text","Title","isNaN","parseInt","Account","account","entry","personalTable","resource","resourceType","gender","birthDate","address","language","communication","coding","display","maritalStatus","length","careProvider","telecom","contact","RouterSwitch","exact","path","SetAppState","LaunchPatient","LaunchProvider","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27ef8570.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Cerner ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Account</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import React from 'react';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: true,\n      Display: \"Observation\",\n      Data: null\n    }\n    this.setMainState = this.setMainState.bind(this);\n  }\n\n  setMainState(event) {\n    this.setState(event);\n  }\n\n  render() {\n    const {\n      Cerner\n    } = this.props, {\n      Loading,\n      Display,\n      Data\n    } = this.state;\n\n    if (Data) {\n      console.log(\"Display:\", Display);\n      console.log(\"Data:\", Data);\n    }\n\n    return Cerner ? (\n      Loading ? (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      ) : (\n        <div className=\"App-Main\">\n          <ul className=\"Main-Nav\">\n            <li className=\"Main-Nav-Link\">Observation</li>\n          </ul>\n          <div className=\"Main-Table\">\n          </div>\n        </div>\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            Events.client.request(client.state, setAppState, \"Patient\");\n        }).catch(() => setAppState({ Loading: false }));\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(console.log).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => client.request(\"Provider\"))\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(() => setAppState({ Loading: false }));\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.refresh = (Oauth2, setComponentState) => {\n    const client = FHIR.client(Oauth2.state);\n\n    client.refreshIfNeeded()\n        .then(console.log, console.error);\n}\n\nEvents.client.request = (Oauth2, setComponentState, param) => {\n    const client = FHIR.client(Oauth2.state);\n\n    client.request(param)\n        .then(res => {\n            console.log(res);\n            setComponentState({ Loading: false, Oauth2: Oauth2, Cerner: res })\n        })\n        .catch(err => {\n            console.log(err);\n            setComponentState({ Loading: false })\n        });\n}\n\nexport default Events;","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from \"react\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"MiniTable\">\n            {/* <thead className=\"MiniTable-Head\">\n                <tr className=\"MiniTable-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (!isNaN(key)):\n                                return <th key={i}>{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i}>{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead> */}\n            <tbody className=\"MiniTable-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"MiniTable-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"relationship\"):\n                                    return <td key={i}>{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i}>{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i}>{row[key]}</td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from \"react\";\nimport MiniTable from \"./MiniTable\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Title,\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"Table\">\n            <thead className=\"Table-Head\">\n                {Title ? (\n                    <tr>\n                        <th className=\"Table-Title\">{this.FormatTitle(Title)}</th>\n                    </tr>\n                ) : null}\n                <tr className=\"Table-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (key === \"display\"):\n                                return <th key={i} className=\"Table-Head-Data\"></th>\n                            case (!isNaN(key)):\n                                return <th key={i} className=\"Table-Head-Data\">{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i} className=\"Table-Head-Data\">{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead>\n            <tbody className=\"Table-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"Table-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"display\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{`${index + 1}.) ${row[key]}`}</td>\n                                case (key === \"relationship\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key]}</td>\n                                case (typeof row[key] === \"object\"):\n                                    return <td key={i} className=\"Table-Body-Data\">\n                                        <MiniTable Data={row[key]}/>\n                                    </td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from 'react';\nimport Table from './Table/Table';\n\nexport default class Account extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        const {\n            Cerner\n        } = this.props,\n            account = Cerner.entry[0],\n            personalTable = [\n                {\n                    account: account.resource.resourceType,\n                    gender: account.resource.gender,\n                    birthDate: account.resource.birthDate,\n                    address: account.resource.address[0].text,\n                    language: account.resource.communication[0].language.coding[0].display,\n                    maritalStatus: account.resource.maritalStatus.text,\n                }\n            ];\n\n        return <div className=\"App-Account\">\n            {account.resource.address.length > 0 ? (\n                <Table \n                    Title=\"Personal\"\n                    Data={personalTable}\n                />\n            ) : null }\n            {account.resource.careProvider.length > 0 ? (\n                <Table \n                    Title=\"Care Provider\"\n                    Data={account.resource.careProvider}\n                />\n            ) : null }\n            {account.resource.telecom.length > 0 ? (\n                <Table \n                    Title=\"Communication\"\n                    Data={account.resource.telecom}\n                />\n            ) : null }\n            {account.resource.contact.length > 0 ? (\n                <Table \n                    Title=\"Contact\"\n                    Data={account.resource.contact}\n                />\n            ) : null }\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nfunction RouterSwitch(props) {\n\n  return <Switch>\n    <Route exact path='/'>\n      {props.Loading ? (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      ) : (\n        <Main \n          Cerner={props.Cerner}\n          SetAppState={props.SetAppState}\n        />\n      )}\n    </Route>\n    <Route path=\"/launch-patient\">\n      <LaunchPatient />\n    </Route>\n    <Route path=\"/launch-provider\">\n      <LaunchProvider />\n    </Route>\n    <Route path=\"/account\">\n      <Account \n        Cerner={props.Cerner}/>\n    </Route>\n  </Switch>\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    if (!this.state.Cerner) {\n      Events.patient.ready(this.setAppState);\n      Events.provider.ready(this.setAppState);\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner\n    } = this.state;\n\n    if (Oauth2) console.log(\"Oauth2:\", Oauth2);\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? (\n          <header className=\"App-Header\"></header>\n        ) : (\n          <Header \n            Cerner={Cerner}\n          />\n        )}\n        <RouterSwitch \n          Loading={Loading}\n          Cerner={Cerner}\n          SetAppState={this.setAppState}\n        />\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}