{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Main.js","Component/Launch/LaunchPatient.js","App.js","reportWebVitals.js","index.js"],"names":["Events","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","client","ready","then","patient","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","entry","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","push","Property","Value","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","report","value","system","getPath","addReport","addQty","addUnit","absentReport","context","toDateString","category","index","recorded","dateRecorded","onset","onsetDateTime","abatement","display","clinicalStatus","medication","taken","start","end","allergy","criticality","maritalStatus","birthDate","id","officialName","name","gender","main","dataType","codeableConcept","effective","multiValue","date","absent","dataAbsentReason","inter","interpretation","note","annotation","bodySite","method","refRange","backbone","referenceRange","component","Card","style","marginBottom","Header","justifyContent","alignItems","Text","margin","Body","as","ListGroup","padding","ListGroupItem","Footer","verStatus","clinStatus","severity","summary","evidence","medicationCodeableConcept","dosage","wasNotTaken","effperiod","period","effectivePeriod","log","map","dose","i","address","telecom","com","use","capitalize","obj","type","appliesTo","str","toUpperCase","substring","array","length","out","med","find","arrayRecord","given","join","family","base","keys","key","quantity","ratio","used","phone","bool","author","coding","sys","firstEntry","checkSys","c","replace","split","splice","unit","comparator","numerator","denominator","range","low","high","SubHeader","Container","noGutter","fluid","Title","Subtitle","className","flexDirection","border","Nav","Item","Link","NavLink","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","PageIndex","path","PageType","label","NavDropdown","title","CurrentPage","Navbar","Brand","AllOptions","Divider","Cards","CardDeck","height","width","RedirectRoute","TableFooter","disabled","onChange","event","target","onKeyPress","Pages","Main","Display","Type","Math","ceil","toLowerCase","SetParentState","App","Dropdown","MainArray","AccountArray","bind","this","setState","MainLabels","AccountLabels","concat","basename","GetHeader","exact","LaunchPatient","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.190bd2ee.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\nimport { \n    Card, \n    ListGroup,\n    ListGroupItem \n} from 'react-bootstrap';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res[0] });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 });\n        }).catch(() => props.SetAppState({ Loading: false, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 }));\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Context</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Recorded</th>\n        <th>Dates</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Recorder</th>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n        <th>Dates</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Recorder</th>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = Events.value.system(getPath(props.entry, \"code.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"code.text\") || \"Report Error\"),\n        addReport = Events.value.system(getPath(props.entry ,\"valueCodeableConcept.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"valueCodeableConcept.text\") || \"N/A\"),\n        addQty = getPath(props.entry, \"valueQuantity.value\") || \"N/A\",\n        addUnit = getPath(props.entry, \"valueQuantity.unit\") || \"N/A\",\n        absentReport = Events.value.system(getPath(props.entry, \"dataAbsentReason.coding\"), \"http://hl7.org/fhir/data-absent-reason\", getPath(props.entry, \"dataAbsentReason.text\") || \"Absent Report\");\n\n    let context = addReport;\n    if (addQty !== \"N/A\") context = addQty;\n    if (addQty !== \"N/A\" && addUnit !== \"N/A\") context = `${addQty} ${addUnit}`;\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.absentReport ? absentReport : report }</td>\n        <td>{context}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const recorded = new Date(props.entry.dateRecorded),\n        onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{recorded.toDateString() || \"N/A\"}</td>\n        <td>{abatement === \"Invalid Date\" ? `${onset.toDateString()} - Present` : `${onset.toDateString()} - ${abatement.toDateString()}` || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = Events.value.system(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", getPath(props.entry, \"medicationCodeableConcept.text\") || \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\",\n        start = new Date(getPath(props.entry, \"effectivePeriod.start\")),\n        end = new Date(getPath(props.entry, \"effectivePeriod.end\"));\n\n    return <tr key={props.index}>\n        <td>{getPath(props.entry, \"informationSource.display\") || \"N/A\"}</td>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n        <td>{end === \"Invalid Date\" ? `${start.toDateString()} - Present` : `${start.toDateString()} - ${end.toDateString()}` || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = Events.value.system(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"None\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"recorder.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{props.entry.category || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = Events.value.system(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{Events.value.officialName(props.entry.name)}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n\n// Main Events\nEvents.main = {};\n\nEvents.main.observation = (props) => {\n    const category = Events.dataType.codeableConcept(props.entry.category),\n        code = Events.dataType.codeableConcept(props.entry.code, \"http://snomed.info/sct\"),\n        effective = Events.value.multiValue(props.entry, \"effective\"),\n        issued = Events.dataType.date(props.entry.issued),\n        value = Events.value.multiValue(props.entry, \"value\"),\n        absent = Events.dataType.codeableConcept(props.entry.dataAbsentReason, \"http://hl7.org/fhir/data-absent-reason\"),\n        inter = Events.dataType.codeableConcept(props.entry.interpretation),\n        note = Events.dataType.annotation(props.entry.note),\n        bodySite = Events.dataType.codeableConcept(props.entry.bodySite),\n        method = Events.dataType.codeableConcept(props.entry.method),\n        refRange = Events.value.backbone(props.entry.referenceRange),\n        component = Events.value.backbone(props.entry.component);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{category || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {issued ? <Card.Text as={ListGroupItem}>{`Date Recorded: ${issued}`}</Card.Text> : null }\n            {absent ? <Card.Text as={ListGroupItem}>{`Incomplete Reason: ${absent}`}</Card.Text> : null }\n            {bodySite ? <Card.Text as={ListGroupItem}>{`Location: ${bodySite}`}</Card.Text> : null }\n            {method ? <Card.Text as={ListGroupItem}>{`Method: ${method}`}</Card.Text> : null }\n            {code ? <Card.Text as={ListGroupItem}>{`Report: ${code}`}</Card.Text> : null }\n            {component ? <Card.Text as={ListGroupItem}>{`Report: ${component}`}</Card.Text> : null }\n            {value ? <Card.Text as={ListGroupItem}>{`Value: ${value}`}</Card.Text> : null }\n            {effective ? <Card.Text as={ListGroupItem}>{`Effective: ${effective}`}</Card.Text> : null }\n            {inter ? <Card.Text as={ListGroupItem}>{`Interpretation: ${inter}`}</Card.Text> : null }\n            {refRange ? <Card.Text as={ListGroupItem}>{`Reference: ${refRange}`}</Card.Text> : null }\n        </Card.Body>\n        {note ? (\n            <Card.Footer\n                as={ListGroup}\n                style={{ padding: \"0\" }}\n            >\n                <Card.Text as={ListGroupItem}>{`Side Note: ${note}`}</Card.Text>\n            </Card.Footer>\n        ): null }\n    </Card>\n}\n\nEvents.main.condition = (props) => {\n    const category = Events.dataType.codeableConcept(props.entry.category),\n        verStatus = Events.dataType.codeableConcept(props.entry.verificationStatus),\n        clinStatus = Events.dataType.codeableConcept(props.entry.clinicalStatus),\n        recorded = Events.dataType.date(props.entry.dateRecorded),\n        code = Events.dataType.codeableConcept(props.entry.code),\n        bodySite = Events.dataType.codeableConcept(props.entry.bodySite),\n        severity = Events.dataType.codeableConcept(props.entry.severity),\n        onset = Events.value.multiValue(props.entry, 'onset'),\n        abatement = Events.value.multiValue(props.entry, 'abatement'),\n        summary = Events.dataType.codeableConcept(getPath(props.entry, 'stage.summary')),\n        evidence = Events.dataType.codeableConcept(getPath(props.entry, 'evidence.code'));\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{category || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{verStatus || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{clinStatus || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {recorded ? <Card.Text as={ListGroupItem}>{`Date Recorded: ${recorded}`}</Card.Text> : null }\n            {code ? <Card.Text as={ListGroupItem}>{`Report: ${code}`}</Card.Text> : null }\n            {bodySite ? <Card.Text as={ListGroupItem}>{`Location: ${bodySite}`}</Card.Text> : null }\n            {severity ? <Card.Text as={ListGroupItem}>{`Severity: ${severity}`}</Card.Text> : null }\n            {onset ? <Card.Text as={ListGroupItem}>{`Start: ${onset}`}</Card.Text> : null }\n            {abatement ? <Card.Text as={ListGroupItem}>{`End: ${abatement}`}</Card.Text> : null }\n        </Card.Body>\n        {summary || evidence ? (\n            <Card.Footer\n                as={ListGroup}\n                style={{ padding: \"0\" }}\n            >\n                {summary ? <Card.Text as={ListGroupItem}>{`Summary: ${summary}`}</Card.Text> : null }\n                {evidence ? <Card.Text as={ListGroupItem}>{`Symptoms: ${evidence}`}</Card.Text> : null }\n            </Card.Footer>\n        ): null }\n    </Card>\n}\n\nEvents.main.medicationstatement = (props) => {\n    const medication = Events.dataType.codeableConcept(props.entry.medicationCodeableConcept, \"http://www.nlm.nih.gov/research/umls/rxnorm\"),\n        dosage = Events.value.dosage(props.entry.dosage),\n        taken = Events.value.wasNotTaken(props.entry.wasNotTaken),\n        effperiod = Events.dataType.period(props.entry.effectivePeriod);\n\n    console.log(\"Dosage: \", dosage);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {medication ? <Card.Text as={ListGroupItem}>{`Medication: ${medication}`}</Card.Text> : null }\n            {dosage ? dosage.map((dose, i) => {\n                return <Card.Text key={i} as={ListGroupItem}>{\"Dosage: \" + dose}</Card.Text>\n            }) : null }\n            {taken ? <Card.Text as={ListGroupItem}>{`Taken: ${taken}`}</Card.Text> : null }\n            {effperiod ? <Card.Text as={ListGroupItem}>{`Period: ${effperiod}`}</Card.Text> : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.allergyintolerance = (props) => {\n    const allergy = Events.dataType.codeableConcept(props.entry.substance, \"http://snomed.info/sct\"),\n        criticality = Events.value.criticality(props.entry.criticality);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{props.entry.category || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {allergy ? <Card.Text as={ListGroupItem}>{`Allergy: ${allergy}`}</Card.Text> : null }\n            {criticality ? <Card.Text as={ListGroupItem}>{`Risk: ${criticality}`}</Card.Text> : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.patient = (props) => {\n    const address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {address ? <Card.Text as={ListGroupItem}>{`Address: ${address}`}</Card.Text> : null }\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.relatedperson = (props) => {\n    const name = getPath(props.entry, \"name.text\") || null,\n        gender = Events.value.capitalize(props.entry.gender) || null,\n        birthDate = Events.dataType.date(props.entry.birthDate) || null,\n        address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header\n            style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }}>\n            <Card.Text style={{ margin: '0' }}>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{`Name: ${name || \"N/A\"}`}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{`Gender: ${gender || \"N/A\"}`}</Card.Text>\n            <Card.Text style={{ margin: '0' }}>{`DoB: ${birthDate || \"N/A\"}`}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            {address ? <Card.Text as={ListGroupItem}>{`Address: ${address || \"N/A\"}`}</Card.Text> : null }\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\n// Value Events\nEvents.value = {};\n\nEvents.value.backbone = (obj) => {\n    if (!obj) return null;\n    const code = Events.dataType.codeableConcept(obj.code),\n        value = Events.dataType.multiValue(obj.value, 'value'),\n        absent = Events.dataType.codeableConcept(obj.dataAbsentReason),\n        inter = Events.dataType.codeableConcept(obj.interpretation),\n        type = Events.dataType.codeableConcept(obj.type),\n        appliesTo = Events.dataType.codeableConcept(obj.appliesTo),\n        text = obj.text;\n    \n    switch (true) {\n        case code:\n            return code;\n        case value:\n            return value;\n        case absent:\n            return absent;\n        case inter:\n            return inter;\n        case type:\n            return type;\n        case appliesTo:\n            return appliesTo;\n        case text:\n            return text;\n        default:\n            return null;\n    }\n\n}\n\nEvents.value.capitalize = (str) => {\n    if (typeof str !== 'string') return null;\n    return str[0].toUpperCase() + str.substring(1);\n}\n\nEvents.value.criticality = (str) => {\n    if (typeof str !== 'string') return null;\n    switch (str) {\n        // case value:\n        //     return \"Low Risk\";\n        case 'CRITH':\n            return \"High Risk\";\n        case (typeof str === 'string'):\n            return \"Unable to Assess Risk\";\n        default:\n            return null;\n    }\n}\n\nEvents.value.dosage = (array) => {\n    if (!array || array.length === 0) return null;\n    const out = [];\n\n    array.forEach(med => {\n        if (med.text) out.push(med.text);\n    });\n    if (out.length === 0) return null;\n    return out;\n}\n\nEvents.value.officialName = (array) => {\n    let entry = array.find(arrayRecord => arrayRecord.use === \"official\") || array[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return null;\n}\n\nEvents.value.multiValue = (obj, base) => {\n    if (!obj || !base) return null;\n    const keys = [`${base}Quantity`, `${base}Timing`, `${base}Instant`, `${base}CodeableConcept`, `${base}Boolean`, `${base}Integer`, `${base}DateTime`, `${base}Time`, `${base}Age`, `${base}Period`, `${base}Range`, `${base}Ratio`, `${base}SampleData`, `${base}String`];\n    let out = null;\n\n    keys.forEach(key => {\n        if (!obj[key]) return\n\n        switch (key) {\n            case `${base}CodeableConcept`:\n                return out = Events.dataType.codeableConcept(obj[key]);\n            case `${base}Instant`:\n            case `${base}Time`:\n            case `${base}DateTime`:\n                return out = Events.dataType.date(obj[key]);\n            case `${base}Period`:\n                return out = Events.dataType.period(obj[key]);\n            case `${base}Quantity`:\n                return out = Events.dataType.quantity(obj[key]);\n            case `${base}Ratio`:\n                return out = Events.dataType.ratio(obj[key]);\n            case `${base}String`:\n            case `${base}Integer`:\n                return out = obj[key];\n            default:\n                return\n        }\n    });\n    return out\n}\n\nEvents.value.telecom = (array) => {\n    const used = [],\n        out = [];\n    let phone = null;\n    \n    array.forEach(com => {\n        if (!com.system || !com.value) return\n        phone = Events.value.phone(com.value);\n        if (used.includes(phone) || used.includes(com.value)) return\n\n        switch (com.system) {\n            case 'phone':\n                used.push(phone);\n                return out.push(com);\n            case 'email':\n                used.push(com.value);\n                return out.push(com);\n            default:\n                return;\n        }\n    });\n\n    if (out.length === 0) return null;\n    return out\n}\n\nEvents.value.wasNotTaken = (bool) => {\n    if (typeof bool !== 'boolean') return null;\n    if (bool) {\n        return \"Medicaiton has not been taken.\"\n    } else return \"Medicaiton has been taken.\"\n}\n\n// DataType Events\nEvents.dataType = {};\n\nEvents.dataType.annotation = (obj) => {\n    if (!obj) return null;\n    const author = Events.value.multiValue(obj, \"author\"),\n        text = obj.text;\n    if (author && text) return author + \": \" + text;\n    return null;\n}\n\nEvents.dataType.coding = (coding, sys) => {\n    if (!coding) return null;\n    const firstEntry = coding[0],\n        checkSys = sys ? coding.find(c => c.system === sys) : null;\n\n    switch (true) {\n        case (checkSys && checkSys.display):\n            return checkSys.display;\n        case (firstEntry && firstEntry.display):\n            return firstEntry.display;\n        default:\n            return null;\n    }\n}\n\nEvents.dataType.codeableConcept = (obj, sys) => {\n    if (!obj) return null;\n    const text = obj.text || null,\n        coding = Events.dataType.coding(obj.coding, sys);\n\n    switch (true) {\n        case (coding):\n            return coding;\n        default:\n            return text;\n    }\n}\n\nEvents.dataType.date = (str) => {\n    if (typeof str !== 'string') return null;\n    const date = new Date(str).toDateString();\n    if (date !== \"Invalid Date\") return date;\n    return null;\n}\n\nEvents.dataType.period = (obj) => {\n    if (!obj) return null;\n    const start = Events.dataType.date(obj.start),\n        end = Events.dataType.date(obj.end);\n    let out = null;\n\n    if (start) out = start;\n    if (start && end) {\n        out += \" - \" + end;\n        \n    } else if (start && end === null) out += \" - Present\";\n    return out;\n}\n\nEvents.dataType.phone = (str) => {\n    if (typeof str !== 'string') return null\n    const regex = /^[0-9]/;\n    let out = str.replace(regex, \"\");\n    str.split(\"\");\n    out.splice(6, 0, \".\");\n    out.splice(3, 0, \".\");\n    return out.join(\"\");\n}\n\nEvents.dataType.quantity = (obj) => {\n    if (!obj) return null;\n    let out = null;\n    if (obj.value && obj.unit) out = obj.value + \" \" + obj.unit;\n    if (obj.comparator) out = obj.comparator;\n    return out;\n}\n\nEvents.dataType.ratio = (obj) => {\n    if (!obj) return null;\n    const numerator = obj.numerator,\n        denominator = obj.denominator;\n    let out = null;\n\n    if (numerator && denominator) out = numerator + ' / ' + denominator;\n    return out;\n}\n\nEvents.dataType.range = (obj) => {\n    // Temporary copy and paste from period.\n    if (!obj) return null;\n    const low = obj.low,\n        high = obj.high;\n    let out = null;\n\n    if (low) out = low;\n    if (low && high) {\n        out += \" - \" + high;\n        \n    } else if (low && high === null) out += \" - Present\";\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport {\n    Navbar,\n    Nav,\n    NavDropdown,\n    Container,\n    Card,\n    ListGroup,\n    ListGroupItem\n} from 'react-bootstrap';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <Container fluid>\n        {!props.Oauth2 ? (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Login\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    <NavDropdown.Item as={NavLink} to=\"/launch-patient\">Patient</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        ) : (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Menu\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    {props.AllOptions.map((option, i) => {\n                        return <NavDropdown.Item \n                            key={i}\n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</NavDropdown.Item>\n                    })}\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item\n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Oauth2: null,\n                            Patient: null,\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Log Out</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        )}\n        {SubHeader(props)}\n    </Container>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    if (props.Patient) console.log('Patient: ', props.Patient);\n\n    return <Container \n        noGutter\n        fluid\n    >\n        {props.Patient ? (\n            <Card style={{ margin: '0 0 5px 0' }}>\n                <Card.Body  style={{ \n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center' \n                }}>\n                    <div>\n                        <Card.Title style={{ margin: '0' }}>{Events.value.officialName(props.Patient.name)}</Card.Title>\n                        <Card.Subtitle style={{ margin: '0' }}>{`ID: ${props.Patient.id}`}</Card.Subtitle>\n                    </div>\n                    <ListGroup \n                        className=\"list-group-flush\"\n                        style={{ flexDirection: \"row\" }}>\n                        <ListGroupItem style={{ border: 'none' }}>{`Gender: ${Events.value.capitalize(props.Patient.gender)}`}</ListGroupItem>\n                        <ListGroupItem>{`DoB: ${Events.dataType.date(props.Patient.birthDate)}`}</ListGroupItem>\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        ) : null }\n        {props.Cerner ? (\n            <Nav style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                <Nav.Item>\n                    <Nav.Link \n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Back</Nav.Link>\n                </Nav.Item>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                    return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                })}\n                <Nav.Item>\n                    <Nav.Link\n                        as={NavDropdown}\n                        title={`Count: ${props.DisplayCount}`}\n                        id=\"navbarScrollingDropdown\"\n                    >\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 25, CurrentPage: 1, DisplayIndex: 0 })}\n                        >25</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 50, CurrentPage: 1, DisplayIndex: 0 })}\n                        >50</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 100, CurrentPage: 1, DisplayIndex: 0 })}\n                        >100</NavDropdown.Item>\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n        ) : null }\n    </Container>\n\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\nimport {\n    CardDeck,\n    Card\n} from 'react-bootstrap';\n\nconst Cards = (props) => {\n\n    return <CardDeck className=\"d-flex justify-content-around align-items-center flex-wrap m-4\">\n        {props.AllOptions.map((option, i) => {\n            return <Card border=\"primary\" className=\"text-center p-4\" style={{height: '75px', width: '200px'}} >\n                <NavLink key={i} \n                    to={option.path}\n                    onClick={() => props.RedirectRoute({\n                        option: option,\n                        index: i\n                    })}\n                >{option.label}</NavLink>\n            </Card>\n        })}\n    </CardDeck>\n}\n\nexport default Cards;","import {\n  Container\n} from 'react-bootstrap';\nimport Events from \"../Events\";\n\nconst Main = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <Container>\n      <Container>\n        {Display.map((entry, index) => {\n          return Events.main[Type]({\n            index: index,\n            entry: entry\n          });\n        })}\n      </Container>\n      {Pages > 1 ? (\n        <TableFooter \n          Cerner={props.Cerner}\n          Pages={Pages}\n          DisplayCount={props.DisplayCount}\n          DisplayIndex={props.DisplayIndex}\n          CurrentPage={props.CurrentPage}\n          SetAppState={props.SetAppState}\n          SetParentState={props.SetParentState}\n        />\n      ) : null}\n    </Container>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: 1, DisplayIndex: 0 })}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage - 1, DisplayIndex: props.DisplayIndex - props.DisplayCount })}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetAppState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetAppState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetAppState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage + 1, DisplayIndex: props.DisplayIndex + props.DisplayCount })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.Pages, DisplayIndex: props.DisplayCount * (props.Pages - 1) })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Main;","import Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\n\nexport default Patient;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        { \n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        } , {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        } , {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        } , {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        { \n          label: \"Account\",\n          value: \"Patient\",\n          path: \"/account\"\n        } , {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n    this.RedirectRoute = this.RedirectRoute.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  RedirectRoute(props) {\n    const MainLabels = [],\n      AccountLabels = [],\n      { Oauth2, MainArray, AccountArray } = this.state;\n\n    MainArray.forEach(option => MainLabels.push(option.label));\n    AccountArray.forEach(option => AccountLabels.push(option.label));\n\n    this.setState({ Loading: true });\n    if (AccountLabels.includes(props.option.label)) {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"AccountIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    } else {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"MainIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    }\n    <Redirect to={props.option.path}/>\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllOptions = MainArray.concat(AccountArray);\n\n    if (Cerner) console.log(\"Cerner: \", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader \n          AllOptions={AllOptions}\n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Cerner}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please Login to Continue</h1>\n                </div>\n              ) : null\n            )}\n          </Route>\n          {AllOptions.map((option, index) => {\n            return <Route key={index} path={option.path}>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n              ) : (\n                <Main\n                  Cerner={Cerner}\n                  DisplayCount={DisplayCount}\n                  DisplayIndex={DisplayIndex}\n                  CurrentPage={CurrentPage}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n            </>\n          ) : null }\n        </Switch>\n        {!Loading && Oauth2 ? (\n          <Cards \n            AllOptions={AllOptions}\n            RedirectRoute={this.RedirectRoute}\n          />\n        ) : null }\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  const MainLabels = [],\n    AccountLabels = [];\n  let includedAccount = false;\n\n  props.MainArray.forEach(option => MainLabels.push(option.label));\n  props.AccountArray.forEach(option => {\n    if (props.Cerner && option.value === props.Cerner[0].resourceType) includedAccount = true;\n    AccountLabels.push(option.label)\n  });\n\n  switch (true) {\n    case includedAccount:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('./index.scss');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}