{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Table.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","patient","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","push","Property","Value","SetParentState","CurrentPage","err","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","toDateString","subject","reference","split","category","index","onset","onsetDateTime","abatement","clinicalStatus","medication","getPath","taken","allergy","criticality","maritalStatus","birthDate","id","gender","SubHeader","className","map","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","i","PageIndex","path","activeClassName","value","PageType","label","onChange","event","parseInt","target","SetMainState","Header","Dropdown","onMouseOver","onMouseOut","Cards","CardArray","State","TableFooter","disabled","type","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","toLowerCase","log","PatientWithRouter","withRouter","ProviderWithRouter","App","MainArray","AccountArray","bind","this","setState","AllCards","concat","basename","GetHeader","exact","LaunchPatient","LaunchProvider","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27aeb52c.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        }).catch(err => {\n            props.SetAppState({ Loading: false, [props.Property]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        });\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Subject</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = \"N/A\";\n        // getSystemValue(getPath(props.entry, \"code.coding\") || getPath(props.entry, \"code\"), \"http://snomed.info/sct\", props.entry.code.text || \"Report Unavailable\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{report || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <header id=\"Header\" className=\"App-Header\">\n        {!props.Oauth2 ? (\n            <div className=\"Header-Main\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</NavLink>\n                <div className=\"Header-Nav\">\n                    <button\n                        className=\"Header-Link\"\n                        onClick={() => props.SetAppState({ Dropdown: null })}\n                        onMouseOver={() => props.SetAppState({ Dropdown: 'Header-Nav' })}\n                    >Menu</button>\n                    {props.Dropdown === 'Header-Nav' ? (\n                        <div \n                            className=\"Header-Nav-Dropdown\"\n                            onMouseOut={() => props.SetAppState({ Dropdown: null })}\n                        >\n                            <NavLink \n                                to=\"/launch-patient\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                activeClassName=\"Header-Nav-Dropdown-Link-Active\"\n                                onClick={() => props.SetAppState({ Dropdown: null })}\n                            >Patient</NavLink>\n                            <NavLink \n                                to=\"/launch-provider\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                activeClassName=\"Header-Nav-Dropdown-Link-Active\"\n                                onClick={() => props.SetAppState({ Dropdown: null })}\n                            >Provider</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            </div>\n        ) : (\n            <div className=\"Header-Main\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</NavLink>\n                <div className=\"Header-Nav\">\n                    <button\n                        className=\"Header-Link\"\n                        onClick={() => props.SetAppState({ Dropdown: null })}\n                        onMouseOver={() => props.SetAppState({ Dropdown: 'Header-Nav' })}\n                    >Menu</button>\n                    {props.Dropdown === 'Header-Nav' ? (\n                        <div \n                            className=\"Header-Nav-Dropdown\"\n                            onMouseOut={() => props.SetAppState({ Dropdown: null })}\n                        >\n                            <NavLink \n                                to=\"/\" \n                                className=\"Header-Nav-Dropdown-Link\"\n                                onClick={() => props.SetAppState({\n                                    Dropdown: null,\n                                    Oauth2: null,\n                                    Patient: null,\n                                    Cerner: null,\n                                    MainIndex: 0,\n                                    AccountIndex: 0,\n                                    DisplayCount: 25,\n                                    DisplayIndex: 0\n                                })}\n                            >Log Out</NavLink>\n                        </div>\n                    ) : null }\n                </div>\n            </div>\n        )}\n        {SubHeader(props)}\n    </header>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    return <div className=\"Header-Subheader\">\n        {props.Patient ? (\n            <table>\n                <thead>\n                    {Events.thead.patient()}\n                </thead>\n                <tbody>\n                    {props.Patient.map((entry, index) => {\n                        return Events.tbody.patient({\n                            index: index,\n                            entry: entry\n                        });\n                    })}\n                </tbody>\n            </table>\n        ) : null }\n        {props.Cerner ? (\n            <div className=\"Subheader-Nav\">\n                <NavLink \n                    to=\"/\" \n                    className=\"Subheader-Nav-Link\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Back</NavLink>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <NavLink key={i} \n                        to={option.path}\n                        className=\"Subheader-Nav-Link\"\n                        activeClassName=\"Subheader-Nav-Link-Active\"\n                        onClick={() => {\n                            props.SetAppState({ Loading: true });\n                            Events.client.request({\n                                Oauth2: props.Oauth2,\n                                Page: option.value,\n                                Property: `${props.PageType}Index`,\n                                Value: i,\n                                SetAppState: props.SetAppState\n                            });\n                        }}\n                    >{option.label}</NavLink>\n                    return <NavLink key={i} \n                        to={option.path}\n                        className=\"Subheader-Nav-Link\"\n                        activeClassName=\"Subheader-Nav-Link-Active\"\n                        onClick={() => {\n                            props.SetAppState({ Loading: true });\n                            Events.client.request({\n                                Oauth2: props.Oauth2,\n                                Page: option.value,\n                                Property: `${props.PageType}Index`,\n                                Value: i,\n                                SetAppState: props.SetAppState\n                            });\n                        }}\n                    >{option.label}</NavLink>\n                })}\n                <div className=\"Subheader-Nav-Link\">\n                    <label className=\"Subheader-Label\">\n                        Count:\n                        <select \n                            className=\"Subheader-Select\"\n                            value={props.DisplayCount} \n                            onChange={event => {\n                                props.SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                                this.SetMainState({ CurrentPage: 1 });\n                            }}\n                        >\n                            <option value={25}>25</option>\n                            <option value={50}>50</option>\n                            <option value={100}>100</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n        ) : null }\n    </div>\n\n}\n\nexport default Header;","import Events from '../Events';\n\nconst Cards = (props) => {\n\n    return <div className=\"App-Cards\">\n        {props.CardArray.map((option, i) => {\n            return <div key={i} \n                className=\"Card\"\n                onClick={() => {\n                    props.SetAppState({ Loading: true });\n                    Events.client.request({\n                        Oauth2: props.Oauth2,\n                        Page: option.value,\n                        Property: props.State,\n                        Value: i,\n                        SetAppState: props.SetAppState\n                    });\n                }}\n            >\n                <a className=\"Card-Title\">{option.label}</a>\n            </div>\n        })}\n    </div>\n}\n\nexport default Cards;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n    if (Pages > 0) console.log(`Pages(Current/Total): ${props.CurrentPage}/${Pages}`);\n    if (Pages > 0) console.log(`Index(Current/Total): ${props.DisplayIndex}/${props.Cerner.length}`);\n    if (Pages > 0) console.log(`DisplayCount: ${props.DisplayCount}`);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: 0 });\n                    props.SetParentState({ CurrentPage: 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex - props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage - 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetParentState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetParentState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetParentState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex + props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage + 1 });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayCount * (props.Pages - 1) });\n                    props.SetParentState({ CurrentPage: props.Pages });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Table from './Component/Table';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        { \n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        } , {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        } , {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        } , {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        { \n          label: \"Account\",\n          value: \"Patient\",\n          path: \"/account\"\n        } , {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        } , {\n          label: \"Care Plan\",\n          value: \"CarePlan\",\n          path: \"/care-plan\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllCards = MainArray.concat(AccountArray);\n\n    console.log(\"AllCards:\", AllCards);\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader \n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Patient}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Cards \n                CardArray={AllCards}\n                Oauth2={Oauth2}\n                SetAppState={this.SetAppState}\n              />\n            )}\n          </Route>\n          {AllCards.map((option, index) => {\n            return <Route key={index} path={option.path}>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n              ) : (\n                <Table\n                  Cerner={Cerner}\n                  DisplayCount={DisplayCount}\n                  DisplayIndex={DisplayIndex}\n                  CurrentPage={CurrentPage}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n              <Route path=\"/launch-provider\">\n                <LaunchProvider />\n              </Route> \n            </>\n          ) : null }\n        </Switch>\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  let includedAccount = false;\n  \n  for (let i = 0; i < props.AccountArray.length; i++) {\n    if (props.Cerner && props.AccountArray[i].value === props.Cerner[0].resourceType) includedAccount = true;\n  }\n\n  switch (true) {\n    case includedAccount:\n      return <Header \n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header \n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}