{"version":3,"sources":["Component/Header.js","Component/Main.js","Events.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Cerner","activeClassName","entry","resource","name","text","Main","state","setMainState","bind","event","this","setState","React","Component","MainWithRouter","withRouter","Events","patient","launch","setAppState","FHIR","oauth2","authorize","target","client_id","scope","iss","redirectUri","then","Type","catch","console","error","ready","client","Loading","err","log","provider","request","res","Patient","Provider","Account","RouterSwitch","exact","path","SetAppState","LaunchPatient","LaunchProvider","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.072d8bf5.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Cerner ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >{props.Cerner.entry[0].resource.name[0].text}</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Selected\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.setMainState = this.setMainState.bind(this);\n  }\n\n  setMainState(event) {\n    this.setState(event);\n  }\n\n  render() {\n    const {\n      Cerner\n    } = this.props;\n\n    return <div className=\"App-Main\">\n      {Cerner ? (\n          <h1>Authorized</h1>\n        ) : (\n          <h1>Please select account type to Log-In</h1>\n        )}\n    </div>\n  }\n}\n\nconst MainWithRouter = withRouter(Main);\n\nexport default MainWithRouter","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (setAppState) => {\n    FHIR.oauth2.authorize({\n        target: \"popup\",\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/AllergyIntolerance.read user/CarePlan.read user/Condition.read user/MedicationStatement.read user/Observation.read user/Patient.read user/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(() => setAppState({ Type: \"patient\" })).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client =>  setAppState({ Loading: false, Cerner: client }))\n        .catch(err => {\n            setAppState({ Loading: false });\n            console.log(err);\n        });\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (setAppState) => {\n    FHIR.oauth2.authorize({\n        target: \"popup\",\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(() => setAppState({ Type: \"provider\" })).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => client.request(\"Provider\"))\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(err => {\n            console.log(err);\n            setAppState({ Loading: false });\n        });\n}\n\nexport default Events;","import Events from '../../Events';\n\nconst Patient = (props) => {\n\n    Events.patient.launch(props.setAppState);\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nexport default Patient;","import Events from '../../Events';\n\nconst Provider = (props) => {\n\n    Events.provider.launch(props.setAppState);\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nexport default Provider;","import React from 'react';\n// import Table from './Table/Table';\n\nexport default class Account extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {\n            Cerner\n        } = this.props;\n            // account = Cerner.entry[0],\n            // personalTable = [\n            //     {\n            //         account: account.resource.resourceType,\n            //         gender: account.resource.gender,\n            //         birthDate: account.resource.birthDate,\n            //         address: account.resource.address[0].text,\n            //         language: account.resource.communication[0].language.coding[0].display,\n            //         maritalStatus: account.resource.maritalStatus.text,\n            //     }\n            // ];\n\n        return <div className=\"App-Account\">\n            {/* {account.resource.address.length > 0 ? (\n                <Table \n                    Title=\"Personal\"\n                    Data={personalTable}\n                />\n            ) : null }\n            {account.resource.careProvider.length > 0 ? (\n                <Table \n                    Title=\"Care Provider\"\n                    Data={account.resource.careProvider}\n                />\n            ) : null }\n            {account.resource.telecom.length > 0 ? (\n                <Table \n                    Title=\"Communication\"\n                    Data={account.resource.telecom}\n                />\n            ) : null }\n            {account.resource.contact.length > 0 ? (\n                <Table \n                    Title=\"Contact\"\n                    Data={account.resource.contact}\n                />\n            ) : null } */}\n        </div>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nfunction RouterSwitch(props) {\n\n  return <Switch>\n    <Route exact path='/'>\n      {props.Loading ? (\n        <div className=\"App-Main\">\n          <h1>Please wait...</h1>\n        </div>\n      ) : (\n        <Main \n          Cerner={props.Cerner}\n          SetAppState={props.SetAppState}\n        />\n      )}\n    </Route>\n    <Route path=\"/launch-patient\">\n      <LaunchPatient\n        SetAppState={props.SetAppState}\n      />\n    </Route>\n    <Route path=\"/launch-provider\">\n      <LaunchProvider\n        SetAppState={props.SetAppState}\n      />\n    </Route>\n    <Route path=\"/account\">\n      <Account \n        Cerner={props.Cerner}/>\n    </Route>\n  </Switch>\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Type: null, \n      Cerner: null\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Type } = this.state;\n    if (Type !== null) {\n      Events[Type].ready(this.setAppState)\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Cerner\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? (\n          <header className=\"App-Header\"></header>\n        ) : (\n          <Header \n            Cerner={Cerner}\n          />\n        )}\n        <RouterSwitch \n          Loading={Loading}\n          Cerner={Cerner}\n          SetAppState={this.setAppState}\n        />\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}