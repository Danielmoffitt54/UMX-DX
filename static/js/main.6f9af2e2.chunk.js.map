{"version":3,"sources":["Component/Header.js","Events.js","Component/Cards.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","id","className","to","onClick","SetAppState","Cerner","Oauth2","activeClassName","MainIndex","AccountIndex","DisplayCount","DisplayIndex","Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","patient","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","Loading","routeChange","newPage","forEach","PrevScope","includes","resourceType","request","state","Page","pageLimit","flat","response","newRes","addEntry","res","status","verificationStatus","substance","code","text","push","State","Value","SetParentState","CurrentPage","err","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","toDateString","subject","reference","split","category","index","onset","onsetDateTime","abatement","clinicalStatus","medication","getPath","taken","allergy","criticality","maritalStatus","birthDate","gender","Cards","CardArray","map","title","TableFooter","disabled","type","value","onChange","event","target","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","toLowerCase","i","log","Main","SetMainState","bind","this","setState","AccountArray","MainArray","parseInt","SetAccountState","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Account","App","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f9af2e2.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header id=\"Header\" className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n            onClick={() => props.SetAppState({ Cerner: null })}\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                    onClick={() => props.SetAppState({ Cerner: null })}\n                >Account</NavLink>\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Oauth2: null,\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Log Out</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => props.SetAppState({ Loading: false, Oauth2: client }))\n        .catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.State]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        }).catch(err => {\n            props.SetAppState({ Loading: false, [props.State]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        });\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Subject</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = \"N/A\";\n        // getSystemValue(getPath(props.entry, \"code.coding\") || getPath(props.entry, \"code\"), \"http://snomed.info/sct\", props.entry.code.text || \"Report Unavailable\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{report || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import Events from '../Events';\n\nconst Cards = (props) => {\n\n    return <div className=\"App-Cards\">\n        {props.CardArray.map((title, index) => {\n            return <div key={index} \n                className=\"Card\"\n                onClick={() => {\n                    props.SetAppState({ Loading: true });\n                    Events.client.request({\n                        Oauth2: props.Oauth2,\n                        Page: title,\n                        State: props.State,\n                        Value: index,\n                        SetAppState: props.SetAppState,\n                        SetParentState: props.SetParentState\n                    });\n                }}\n            >\n                <a className=\"Card-Title\">{title}</a>\n            </div>\n        })}\n    </div>\n}\n\nexport default Cards;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n    if (Pages > 0) console.log(`Pages(Current/Total): ${props.CurrentPage}/${Pages}`);\n    if (Pages > 0) console.log(`Index(Current/Total): ${props.DisplayIndex}/${props.Cerner.length}`);\n    if (Pages > 0) console.log(`DisplayCount: ${props.DisplayCount}`);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: 0 });\n                    props.SetParentState({ CurrentPage: 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex - props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage - 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetParentState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetParentState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetParentState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex + props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage + 1 });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayCount * (props.Pages - 1) });\n                    props.SetParentState({ CurrentPage: props.Pages });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Cards from './Cards';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPage: 1\n    }\n    this.SetMainState = this.SetMainState.bind(this);\n  }\n\n  SetMainState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Oauth2, Cerner, AccountArray, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        PrevScope: AccountArray,\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        Page: MainArray[MainIndex],\n        State: \"MainIndex\",\n        Value: MainIndex,\n        SetAppState: SetAppState,\n        SetParentState: this.SetMainState\n      });\n    }\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props, {\n      CurrentPage\n    } = this.state;\n\n    return Oauth2 ? (\n      Cerner ? (\n        <div className=\"App-Main\">\n          <ul className=\"Subheader-Nav\">\n            {MainArray.map((title, i) => {\n              if (MainIndex === i) return <li key={i} \n                className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                onClick={() => {\n                  SetAppState({ Loading: true });\n                  Events.client.request({\n                    Oauth2: Oauth2,\n                    Page: title,\n                    State: \"MainIndex\",\n                    Value: i,\n                    SetAppState: SetAppState,\n                    SetParentState: this.SetMainState\n                  });\n                }}\n              >{title}</li>\n              return <li key={i} \n                className=\"Subheader-Nav-Link\" \n                onClick={() => {\n                  SetAppState({ Loading: true });\n                  Events.client.request({\n                    Oauth2: Oauth2,\n                    Page: title,\n                    State: \"MainIndex\",\n                    Value: i,\n                    SetAppState: SetAppState,\n                    SetParentState: this.SetMainState\n                  });\n                }}\n              >{title}</li>\n            })}\n            <li className=\"Subheader-Nav-Link\">\n              <label className=\"Subheader-Label\">\n                Count:\n                <select \n                  className=\"Subheader-Select\"\n                  value={DisplayCount} \n                  onChange={event => {\n                    SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                    this.SetMainState({ CurrentPage: 1 });\n                  }}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n              </label>\n            </li>\n          </ul>\n          <Table\n           Cerner={Cerner}\n           DisplayCount={DisplayCount}\n           DisplayIndex={DisplayIndex}\n           CurrentPage={CurrentPage}\n           SetAppState={SetAppState}\n           SetParentState={this.SetMainState}\n           \n          />\n        </div>\n      ) : (\n        <Cards \n          CardArray={MainArray}\n          Oauth2={Oauth2}\n          State=\"MainIndex\"\n          SetAppState={SetAppState}\n          SetParentState={this.SetAccountState}\n        />\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport Events from '../Events';\nimport Cards from './Cards';\nimport Table from './Table';\n\nexport default class Account extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        CurrentPage: 1\n      }\n      this.SetAccountState = this.SetAccountState.bind(this);\n    }\n  \n    SetAccountState(event) {\n      this.setState(event);\n    }\n\n    componentDidMount() {\n      const { Oauth2, Cerner, MainArray, AccountArray, AccountIndex, SetAppState } = this.props;\n      if (Cerner) {\n        Events.client.routeChange({\n          PrevScope: MainArray,\n          Oauth2: Oauth2,\n          Cerner: Cerner,\n          Page: AccountArray[AccountIndex],\n          State: \"AccountIndex\",\n          Value: AccountIndex,\n          SetAppState: SetAppState,\n          SetParentState: this.SetAccountState\n        });\n      }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            DisplayCount,\n            DisplayIndex,\n            SetAppState\n        } = this.props, {\n            CurrentPage\n        } = this.state;\n\n        return Cerner ? (\n            <div className=\"App-Account\">\n                <ul className=\"Subheader-Nav\">\n                    {AccountArray.map((title, i) => {\n                        if (AccountIndex === i) return <li key={i} \n                            className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                            onClick={() => {\n                                SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: Oauth2,\n                                    Page: title,\n                                    State: \"AccountIndex\",\n                                    Value: i,\n                                    SetAppState: SetAppState,\n                                    SetParentState: this.SetAccountState\n                                });\n                            }}\n                        >{title}</li>\n                        return <li key={i} \n                            className=\"Subheader-Nav-Link\" \n                            onClick={() => {\n                                SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: Oauth2,\n                                    Page: title,\n                                    State: \"AccountIndex\",\n                                    Value: i,\n                                    SetAppState: SetAppState,\n                                    SetParentState: this.SetAccountState\n                                });\n                            }}\n                        >{title}</li>\n                    })}\n                    <li className=\"Subheader-Nav-Link\">\n                        <label className=\"Subheader-Label\">\n                            Count:\n                            <select \n                                className=\"Subheader-Select\"\n                                value={DisplayCount} \n                                onChange={event => {\n                                    SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                                    this.SetAccountState({ CurrentPage: 1 });\n                                }}\n                            >\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={100}>100</option>\n                            </select>\n                        </label>\n                    </li>\n                </ul>\n                <Table\n                    Cerner={Cerner}\n                    DisplayCount={DisplayCount}\n                    DisplayIndex={DisplayIndex}\n                    CurrentPage={CurrentPage}\n                    SetAppState={SetAppState}\n                    SetParentState={this.SetAccountState}\n                />\n            </div>\n        ) : (\n            <Cards \n                CardArray={AccountArray}\n                Oauth2={Oauth2}\n                State=\"AccountIndex\"\n                SetAppState={SetAppState}\n                SetParentState={this.SetAccountState}\n            />\n        )\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      MainIndex: 0,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      AccountIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      AccountArray,\n      AccountIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            SetAppState={this.SetAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                Cerner={Cerner}\n                AccountArray={AccountArray}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={this.SetAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Oauth2={Oauth2}\n              Cerner={Cerner}\n              MainArray={MainArray}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              DisplayCount={DisplayCount}\n              DisplayIndex={DisplayIndex}\n              SetAppState={this.SetAppState}\n            />\n          </Route>\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n              <Route path=\"/launch-provider\">\n                <LaunchProvider />\n              </Route> \n            </>\n          ) : null }\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}