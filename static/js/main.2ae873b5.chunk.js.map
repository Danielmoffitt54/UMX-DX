{"version":3,"sources":["Component/Header.js","Events.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Table/MiniTable.js","Component/Account.js","Component/Table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Cerner","activeClassName","Events","patient","launch","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","ready","setAppState","param","then","client","request","res","Loading","Oauth2","provider","log","state","Main","this","MainArray","MainIndex","SetAppState","map","item","i","onClick","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Table","FormatTitle","string","charAt","toUpperCase","slice","replace","trim","Data","keyNames","row","Object","keys","forEach","key","includes","push","index","text","Account","RenderTable","Title","account","resource","resourceType","gender","birthDate","address","communication","language","coding","display","maritalStatus","AccountArray","AccountIndex","entry","App","bind","event","setState","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae873b5.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Cerner ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Account</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\n\nconst Events = {};\n\n// Patient events\nEvents.patient = {};\n\nEvents.patient.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.patient.ready = (setAppState, param) => {\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(param)\n                .then(res => setAppState({ Loading: false, Oauth2: client, Cerner: res }))\n                .catch(() => setAppState({ Loading: false }));\n        }).catch(() => setAppState({ Loading: false }));\n}\n\n// Provider events\nEvents.provider = {};\n\nEvents.provider.launch = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).then(console.log).catch(console.error);\n}\n\nEvents.provider.ready = (setAppState) => {\n    FHIR.oauth2.ready()\n        .then(client => client.request(\"Provider\"))\n        .then(res =>  setAppState({ Loading: false, Cerner: res }))\n        .catch(() => setAppState({ Loading: false }));\n}\n\n// Client Events\nEvents.client = {};\n\n// Events.client.refresh = (Oauth2, setComponentState) => {\n//     const client = FHIR.client(Oauth2.state);\n\n//     client.refreshIfNeeded()\n//         .then(console.log, console.error);\n// }\n\nEvents.client.request = (Oauth2, setAppState, param) => {\n    const client = FHIR.client(Oauth2.state);\n\n    console.log(\"Param:\", param);\n    client.patient.request(param)\n        .then(res => {\n            console.log(res);\n            setAppState({ Cerner: res });\n        })\n        .catch(console.error);\n}\n\nexport default Events;","import React from 'react';\nimport Events from '../Events';\n\nexport default class Main extends React.Component {\n\n  componentDidMount() {\n    const { Oauth2, MainArray, MainIndex, SetAppState } = this.props;\n    if (Oauth2) Events.client.request(Oauth2, SetAppState, MainArray[MainIndex]);\n  }\n\n  render() {\n    const {\n      Oauth2,\n      MainArray,\n      MainIndex,\n      SetAppState\n    } = this.props;\n\n    return Oauth2 ? (\n      <div className=\"App-Main\">\n        <ul className=\"Main-Nav\">\n          {MainArray.map((item, i) => {\n            if (MainIndex === i) return <li key={i} \n              className=\"Main-Nav-Link Main-Nav-Link-Active\" \n              onClick={() => SetAppState({ MainIndex: i })}\n            >{item}</li>\n            return <li key={i} \n              className=\"Main-Nav-Link\" \n              onClick={() => SetAppState({ MainIndex: i })}\n            >{item}</li>\n          })}\n        </ul>\n        <div className=\"Main-Table\">\n        </div>\n      </div>\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider.launch();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from \"react\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"MiniTable\">\n            {/* <thead className=\"MiniTable-Head\">\n                <tr className=\"MiniTable-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (!isNaN(key)):\n                                return <th key={i}>{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i}>{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead> */}\n            <tbody className=\"MiniTable-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"MiniTable-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"relationship\"):\n                                    return <td key={i}>{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i}>{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i}>{row[key]}</td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from 'react';\nimport Table from './Table/Table';\n\nexport default class Account extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Loading: false\n        }\n    }\n\n    RenderTable = (Title, account) => {\n        const personalTable = [\n            {\n                account: account.resource.resourceType,\n                gender: account.resource.gender,\n                birthDate: account.resource.birthDate,\n                address: account.resource.address[0].text,\n                language: account.resource.communication[0].language.coding[0].display,\n                maritalStatus: account.resource.maritalStatus.text,\n            }\n        ];\n\n        switch(true) {\n            // case (Title === \"Personal\"):\n            //     return <Table \n            //         Title={Title}\n            //         Data={personalTable}\n            //     />\n            // case (Title === \"Care Provider\" && account.resource.careProvider.length > 0):\n            //     return <Table \n            //         Title={Title}\n            //         Data={account.resource.careProvider}\n            //     />\n            // case (Title === \"Communication\" && account.resource.telecom.length > 0):\n            //     return <Table \n            //         Title={Title}\n            //         Data={account.resource.telecom}\n            //     />\n            // case (Title === \"Contact\" && account.resource.contact.length > 0):\n            //     return <Table \n            //         Title={Title}\n            //         Data={account.resource.contact}\n            //     />\n            default:\n                return <div>\n                    <h1>An error has occured.</h1>\n                </div>\n        }\n    }\n\n    render() {\n        const {\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            SetAppState\n        } = this.props, {\n            Loading\n        } = this.state,\n            account = Cerner.entry[0];\n\n        return Loading ? (\n          <div className=\"App-Account\">\n            <h1>Please wait...</h1>\n          </div>\n        ) : (\n          <div className=\"App-Account\">\n            <ul className=\"Account-Nav\">\n              {AccountArray.map((item, i) => {\n                if (AccountIndex === i) return <li key={i} \n                  className=\"Account-Nav-Link Account-Nav-Link-Active\" \n                  onClick={() => SetAppState({ AccountIndex: i })}\n                >{item}</li>\n                return <li key={i} \n                  className=\"Account-Nav-Link\" \n                  onClick={() => SetAppState({ AccountIndex: i })}\n                >{item}</li>\n              })}\n            </ul>\n            {this.RenderTable(AccountArray[AccountIndex], account)}\n          </div>\n        )\n    }\n}","import React from \"react\";\nimport MiniTable from \"./MiniTable\";\n\nexport default class Table extends React.Component {\n\n    FormatTitle = (string) => {\n        const title = string.charAt(0).toUpperCase() + string.slice(1);\n        return title.replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    render() {\n        const {\n            Title,\n            Data\n        } = this.props,\n            keyNames = [];\n\n        Data.map((row) => {\n            const allKeys = Object.keys(row);\n            return allKeys.forEach(key => {\n                switch(true) {\n                    case (key === \"given\"):\n                    case (key === \"family\"):\n                    case (key === \"period\"):\n                    case (key === \"reference\"):\n                    case (key === \"gender\"):\n                    case (keyNames.includes(key)):\n                        return \n                    default:\n                        return keyNames.push(key);\n                }\n            });\n        });\n\n        return <table className=\"Table\">\n            <thead className=\"Table-Head\">\n                {Title ? (\n                    <tr>\n                        <th className=\"Table-Title\">{this.FormatTitle(Title)}</th>\n                    </tr>\n                ) : null}\n                <tr className=\"Table-Head-Row\">\n                    {keyNames.map((key, i) => {\n                        switch(true) {\n                            case (key === \"display\"):\n                                return <th key={i} className=\"Table-Head-Data\"></th>\n                            case (!isNaN(key)):\n                                return <th key={i} className=\"Table-Head-Data\">{`${parseInt(key) + 1}.)`}</th>\n                            default:\n                                return <th key={i} className=\"Table-Head-Data\">{this.FormatTitle(key)}</th>\n                        }\n                    })}\n                </tr>\n            </thead>\n            <tbody className=\"Table-Body\">\n                {Data.map((row, index) => {\n                    return <tr key={index} className=\"Table-Body-Row\">\n                        {keyNames.map((key, i) => {\n                            switch(true) {\n                                case (key === \"display\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{`${index + 1}.) ${row[key]}`}</td>\n                                case (key === \"relationship\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key][0].text}</td>\n                                case (key === \"name\"):\n                                case (key === \"address\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key].text}</td>\n                                case (typeof row[key] === \"string\"):\n                                    return <td key={i} className=\"Table-Body-Data\">{row[key]}</td>\n                                case (typeof row[key] === \"object\"):\n                                    return <td key={i} className=\"Table-Body-Data\">\n                                        <MiniTable Data={row[key]}/>\n                                    </td>\n                                default:\n                                    return null\n                            }\n                        })}\n                    </tr>\n                })}\n            </tbody>\n        </table>\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      MainArray: [ \"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      AccountIndex: 0,\n      MainIndex: 0\n    }\n    this.setAppState = this.setAppState.bind(this);\n  }\n\n  setAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner, MainArray, MainIndex } = this.state;\n    if (!Cerner) {\n      Events.patient.ready(this.setAppState, MainArray[MainIndex]);\n      Events.provider.ready(this.setAppState);\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      AccountArray,\n      MainArray,\n      AccountIndex,\n      MainIndex\n    } = this.state;\n\n    // if (Oauth2) console.log(\"Oauth2:\", Oauth2);\n    // if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Cerner={Cerner}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Main\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                SetAppState={this.setAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/launch-patient\">\n            <LaunchPatient />\n          </Route>\n          <Route path=\"/launch-provider\">\n            <LaunchProvider />\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Cerner={Cerner}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              SetAppState={this.setAppState}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}