{"version":3,"sources":["Component/Header.js","Events.js","Component/Cards.js","Component/Table.js","Component/Main.js","Component/Launch/LaunchPatient.js","Component/Launch/LaunchProvider.js","Component/Account.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","Oauth2","activeClassName","onClick","SetAppState","Cerner","MainIndex","AccountIndex","DisplayCount","DisplayIndex","Events","getPatientName","name","entry","find","nameRecord","use","given","join","family","getSystemValue","array","system","str","out","checkSys","c","display","patient","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","provider","client","ready","then","Loading","routeChange","newPage","forEach","PrevScope","includes","resourceType","request","state","Page","pageLimit","flat","response","newRes","addEntry","res","verificationStatus","code","text","push","State","Value","SetParentState","CurrentPage","err","thead","observation","condition","medicationstatement","allergyintolerance","relatedperson","tbody","issued","Date","toDateString","subject","reference","split","category","status","index","onset","onsetDateTime","abatement","clinicalStatus","medication","getPath","taken","allergy","substance","criticality","maritalStatus","birthDate","id","gender","Cards","CardArray","map","title","TableFooter","disabled","type","value","onChange","event","target","onKeyPress","key","Pages","length","Table","Display","Type","Math","ceil","toLowerCase","i","log","Main","SetMainState","bind","this","setState","AccountArray","MainArray","parseInt","SetAccountState","React","Component","PatientWithRouter","withRouter","ProviderWithRouter","Account","App","basename","exact","path","LaunchPatient","LaunchProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21c13374.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    \n    return <header className=\"App-Header\">\n        <NavLink \n            to=\"/\" \n            className=\"Header-Link\"\n        >UMX-DX App</NavLink>\n        {props.Oauth2 ? (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/account\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Account</NavLink>\n                <NavLink \n                    to=\"/\" \n                    className=\"Header-Link\"\n                    onClick={() => props.SetAppState({\n                        Oauth2: null,\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >Log Out</NavLink>\n            </div>\n        ) : (\n            <div className=\"Header-Navbar\">\n                <NavLink \n                    to=\"/launch-patient\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Patient</NavLink>\n                <NavLink \n                    to=\"/launch-provider\" \n                    className=\"Header-Link\"\n                    activeClassName=\"Header-Link-Active\"\n                >Provider</NavLink>\n            </div>\n        )}\n    </header>\n};\n\nexport default Header;","import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/CarePlan.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\nEvents.provider = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"4cfb74e7-deb2-4151-9c22-16eba93fd1ec\",\n        scope: \"patient/Patient.read patient/Observation.read launch online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => props.SetAppState({ Loading: false, Oauth2: client }))\n        .catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) Events.client.request(props);\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Cerner: newRes, [props.State]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        }).catch(err => {\n            props.SetAppState({ Loading: false, [props.State]: props.Value, DisplayIndex: 0 });\n            props.SetParentState({ CurrentPage: 1 });\n        });\n}\n\n// Table Head Events\nEvents.thead = {};\n\nEvents.thead.observation = () => {\n    return <tr>\n        <th>Issued Date</th>\n        <th>Subject</th>\n        <th>Report</th>\n        <th>Category</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.condition = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Report</th>\n        <th>Initial Date</th>\n        <th>Verification Status</th>\n        <th>Clinical Status</th>\n        <th>Abatement Date</th>\n    </tr>\n}\n\nEvents.thead.medicationstatement = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Medication</th>\n        <th>Dosage</th>\n        <th>Status</th>\n        <th>Taken</th>\n    </tr>\n}\n\nEvents.thead.allergyintolerance = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Category</th>\n        <th>Substance</th>\n        <th>Criticality</th>\n        <th>Status</th>\n    </tr>\n}\n\nEvents.thead.patient = () => {\n    return <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n        <th>Marital Status</th>\n    </tr>\n}\n\nEvents.thead.relatedperson = () => {\n    return <tr>\n        <th>Patient</th>\n        <th>Person</th>\n        <th>Gender</th>\n        <th>Birth Date</th>\n    </tr>\n}\n\n// Table Body Events\nEvents.tbody = {};\n\nEvents.tbody.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = \"N/A\";\n        // getSystemValue(getPath(props.entry, \"code.coding\") || getPath(props.entry, \"code\"), \"http://snomed.info/sct\", props.entry.code.text || \"Report Unavailable\");\n\n    return <tr key={props.index}>\n        <td>{issued.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.subject.reference.split('/')[1] || \"N/A\"}</td>\n        <td>{report || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.condition = (props) => {\n    const onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.category.text || \"N/A\"}</td>\n        <td>{props.entry.code.text || \"N/A\"}</td>\n        <td>{onset.toDateString() || \"N/A\"}</td>\n        <td>{props.entry.verificationStatus || \"N/A\"}</td>\n        <td>{props.entry.clinicalStatus || \"N/A\"}</td>\n        <td>{abatement.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.medicationstatement = (props) => {\n    const medication = getSystemValue(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"No\" : \"Yes\" ;\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{medication || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"dosageInstruction.0.text\") || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n        <td>{taken || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.allergyintolerance = (props) => {\n    const allergy = getSystemValue(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"-\";\n\n    return <tr>\n        <td>{getPath(props.entry, \"patient.display\") || \"N/A\"}</td>\n        <td>{getPath(props.entry, \"category\") || \"N/A\"}</td>\n        <td>{allergy || \"N/A\"}</td>\n        <td>{criticality || \"N/A\"}</td>\n        <td>{props.entry.status || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.patient = (props) => {\n    const maritalStatus = getSystemValue(getPath(props.entry, \"maritalStatus.coding\") || getPath(props.entry, \"maritalStatus.code.coding\"), \"http://hl7.org/fhir/v3/Marital\", props.entry.maritalStatus.text || \"Unavailable\"),\n        birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.id || \"N/A\"}</td>\n        <td>{getPatientName(props.entry.name) || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n        <td>{maritalStatus || \"N/A\"}</td>\n    </tr>\n}\n\nEvents.tbody.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate);\n\n    return <tr key={props.index}>\n        <td>{props.entry.patient.display || \"N/A\"}</td>\n        <td>{props.entry.name.text || \"N/A\"}</td>\n        <td>{props.entry.gender || \"N/A\"}</td>\n        <td>{birthDate.toDateString() || \"N/A\"}</td>\n    </tr>\n}\n\n// Misc Functions\n\nfunction getPatientName(name = []) {\n    let entry = name.find(nameRecord => nameRecord.use === \"official\") || name[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return undefined;\n}\n\nfunction getSystemValue(array = [], system, str) {\n    let out = str;\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import Events from '../Events';\n\nconst Cards = (props) => {\n\n    return <div className=\"App-Cards\">\n        {props.CardArray.map((title, index) => {\n            return <div key={index} \n                className=\"Card\"\n                onClick={() => Events.client.request({\n                    Oauth2: props.Oauth2,\n                    Page: title,\n                    State: props.State,\n                    Value: index,\n                    SetAppState: props.SetAppState,\n                    SetParentState: props.SetParentState\n                })}\n            >\n                <h1>{title}</h1>\n            </div>\n        })}\n    </div>\n}\n\nexport default Cards;","import Events from \"../Events\";\n\nconst Table = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n    if (Pages > 0) console.log(`Pages(Current/Total): ${props.CurrentPage}/${Pages}`);\n    if (Pages > 0) console.log(`Index(Current/Total): ${props.DisplayIndex}/${props.Cerner.length}`);\n    if (Pages > 0) console.log(`DisplayCount: ${props.DisplayCount}`);\n\n    return <div className=\"Table\">\n        <table>\n            <thead>\n                {Events.thead[Type]()}\n            </thead>\n            <tbody>\n                {Display.map((entry, index) => {\n                    return Events.tbody[Type]({\n                        index: index,\n                        entry: entry\n                    });\n                })}\n            </tbody>\n        </table>\n        {Pages > 1 ? (\n            <TableFooter \n                Cerner={props.Cerner}\n                Pages={Pages}\n                DisplayCount={props.DisplayCount}\n                DisplayIndex={props.DisplayIndex}\n                CurrentPage={props.CurrentPage}\n                SetAppState={props.SetAppState}\n                SetParentState={props.SetParentState}\n            />\n        ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: 0 });\n                    props.SetParentState({ CurrentPage: 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex - props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage - 1 });\n                }}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetParentState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetParentState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetParentState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayIndex + props.DisplayCount });\n                    props.SetParentState({ CurrentPage: props.CurrentPage + 1 });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => {\n                    props.SetAppState({ DisplayIndex: props.DisplayCount * (props.Pages - 1) });\n                    props.SetParentState({ CurrentPage: props.Pages });\n                }}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Table;","import React from 'react';\nimport Events from '../Events';\nimport Cards from './Cards';\nimport Table from './Table';\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentPage: 1\n    }\n    this.SetMainState = this.SetMainState.bind(this);\n  }\n\n  SetMainState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Oauth2, Cerner, AccountArray, MainArray, MainIndex, SetAppState } = this.props;\n    if (Cerner) {\n      Events.client.routeChange({\n        PrevScope: AccountArray,\n        Oauth2: Oauth2,\n        Cerner: Cerner,\n        Page: MainArray[MainIndex],\n        State: \"MainIndex\",\n        Value: MainIndex,\n        SetAppState: SetAppState,\n        SetParentState: this.SetMainState\n      });\n    }\n  }\n\n  render() {\n    const {\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      DisplayCount,\n      DisplayIndex,\n      SetAppState\n    } = this.props, {\n      CurrentPage\n    } = this.state;\n\n    return Oauth2 ? (\n      Cerner ? (\n        <div className=\"App-Main\">\n          <ul className=\"Subheader-Nav\">\n            {MainArray.map((title, i) => {\n              if (MainIndex === i) return <li key={i} \n                className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  Page: title,\n                  State: \"MainIndex\",\n                  Value: i,\n                  SetAppState: SetAppState,\n                  SetParentState: this.SetMainState\n                })}\n              >{title}</li>\n              return <li key={i} \n                className=\"Subheader-Nav-Link\" \n                onClick={() => Events.client.request({\n                  Oauth2: Oauth2,\n                  Page: title,\n                  State: \"MainIndex\",\n                  Value: i,\n                  SetAppState: SetAppState,\n                  SetParentState: this.SetMainState\n                })}\n              >{title}</li>\n            })}\n            <li className=\"Subheader-Nav-Link\">\n              <label className=\"Subheader-Label\">\n                Count:\n                <select \n                  className=\"Subheader-Select\"\n                  value={DisplayCount} \n                  onChange={event => {\n                    SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                    this.SetMainState({ CurrentPage: 1 });\n                  }}\n                >\n                  <option value={25}>25</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n              </label>\n            </li>\n          </ul>\n          <Table\n           Cerner={Cerner}\n           DisplayCount={DisplayCount}\n           DisplayIndex={DisplayIndex}\n           CurrentPage={CurrentPage}\n           SetAppState={SetAppState}\n           SetParentState={this.SetMainState}\n           \n          />\n        </div>\n      ) : (\n        <Cards \n          CardArray={MainArray}\n          Oauth2={Oauth2}\n          State=\"MainIndex\"\n          SetAppState={SetAppState}\n          SetParentState={this.SetAccountState}\n        />\n      )\n    ) : (\n      <div className=\"App-Main\">\n        <h1>Please select account type to Log-In</h1>\n      </div>\n    )\n  }\n}","import { withRouter } from 'react-router';\nimport Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst PatientWithRouter = withRouter(Patient);\n\nexport default PatientWithRouter;","import { withRouter } from 'react-router-dom';\nimport Events from '../../Events';\n\nconst Provider = () => {\n\n    Events.provider();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\nconst ProviderWithRouter = withRouter(Provider);\n\nexport default ProviderWithRouter;","import React from 'react';\nimport Events from '../Events';\nimport Cards from './Cards';\nimport Table from './Table';\n\nexport default class Account extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        CurrentPage: 1\n      }\n      this.SetAccountState = this.SetAccountState.bind(this);\n    }\n  \n    SetAccountState(event) {\n      this.setState(event);\n    }\n\n    componentDidMount() {\n      const { Oauth2, Cerner, MainArray, AccountArray, AccountIndex, SetAppState } = this.props;\n      if (Cerner) {\n        Events.client.routeChange({\n          PrevScope: MainArray,\n          Oauth2: Oauth2,\n          Cerner: Cerner,\n          Page: AccountArray[AccountIndex],\n          State: \"AccountIndex\",\n          Value: AccountIndex,\n          SetAppState: SetAppState,\n          SetParentState: this.SetAccountState\n        });\n      }\n    }\n\n    render() {\n        const {\n            Oauth2,\n            Cerner,\n            AccountArray,\n            AccountIndex,\n            DisplayCount,\n            DisplayIndex,\n            SetAppState\n        } = this.props, {\n            CurrentPage\n        } = this.state;\n\n        return Cerner ? (\n            <div className=\"App-Account\">\n                <ul className=\"Subheader-Nav\">\n                    {AccountArray.map((title, i) => {\n                        if (AccountIndex === i) return <li key={i} \n                            className=\"Subheader-Nav-Link Subheader-Nav-Link-Active\" \n                            onClick={() => Events.client.request({\n                                Oauth2: Oauth2,\n                                Page: title,\n                                State: \"AccountIndex\",\n                                Value: i,\n                                SetAppState: SetAppState,\n                                SetParentState: this.SetAccountState\n                            })}\n                        >{title}</li>\n                        return <li key={i} \n                            className=\"Subheader-Nav-Link\" \n                            onClick={() => Events.client.request({\n                                Oauth2: Oauth2,\n                                Page: title,\n                                State: \"AccountIndex\",\n                                Value: i,\n                                SetAppState: SetAppState,\n                                SetParentState: this.SetAccountState\n                            })}\n                        >{title}</li>\n                    })}\n                    <li className=\"Subheader-Nav-Link\">\n                        <label className=\"Subheader-Label\">\n                            Count:\n                            <select \n                                className=\"Subheader-Select\"\n                                value={DisplayCount} \n                                onChange={event => {\n                                    SetAppState({ DisplayCount: parseInt(event.target.value), DisplayIndex: 0 });\n                                    this.SetAccountState({ CurrentPage: 1 });\n                                }}\n                            >\n                                <option value={25}>25</option>\n                                <option value={50}>50</option>\n                                <option value={100}>100</option>\n                            </select>\n                        </label>\n                    </li>\n                </ul>\n                <Table\n                    Cerner={Cerner}\n                    DisplayCount={DisplayCount}\n                    DisplayIndex={DisplayIndex}\n                    CurrentPage={CurrentPage}\n                    SetAppState={SetAppState}\n                    SetParentState={this.SetAccountState}\n                />\n            </div>\n        ) : (\n            <Cards \n                CardArray={AccountArray}\n                Oauth2={Oauth2}\n                State=\"AccountIndex\"\n                SetAppState={SetAppState}\n                SetParentState={this.SetAccountState}\n            />\n        )\n    }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './Component/Header';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\nimport LaunchProvider from './Component/Launch/LaunchProvider';\nimport Account from './Component/Account';\nimport './App.css';\nimport Events from './Events';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Oauth2: null,\n      Cerner: null,\n      MainArray: [\"Observation\", \"Condition\", \"MedicationStatement\", \"AllergyIntolerance\"],\n      MainIndex: 0,\n      AccountArray: [\"Patient\", \"Person\", \"RelatedPerson\", \"CarePlan\"],\n      AccountIndex: 0,\n      DisplayCount: 25,\n      DisplayIndex: 0\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Oauth2,\n      Cerner,\n      MainArray,\n      MainIndex,\n      AccountArray,\n      AccountIndex,\n      DisplayCount,\n      DisplayIndex\n    } = this.state;\n\n    if (Cerner) console.log(\"Cerner:\", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        {Loading ? null : (\n          <Header \n            Oauth2={Oauth2}\n            SetAppState={this.SetAppState}\n          />\n        )}\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              <Main \n                Oauth2={Oauth2}\n                Cerner={Cerner}\n                AccountArray={AccountArray}\n                MainArray={MainArray}\n                MainIndex={MainIndex}\n                DisplayCount={DisplayCount}\n                DisplayIndex={DisplayIndex}\n                SetAppState={this.SetAppState}\n              />\n            )}\n          </Route>\n          <Route path=\"/account\">\n            <Account \n              Oauth2={Oauth2}\n              Cerner={Cerner}\n              MainArray={MainArray}\n              AccountArray={AccountArray}\n              AccountIndex={AccountIndex}\n              DisplayCount={DisplayCount}\n              DisplayIndex={DisplayIndex}\n              SetAppState={this.SetAppState}\n            />\n          </Route>\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n              <Route path=\"/launch-provider\">\n                <LaunchProvider />\n              </Route> \n            </>\n          ) : null }\n        </Switch>\n      </Router>\n    </div>\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}