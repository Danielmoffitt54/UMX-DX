{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Main.js","Component/Launch/LaunchPatient.js","App.js","reportWebVitals.js","index.js"],"names":["Events","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","client","ready","then","patient","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","entry","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","push","Property","Value","main","observation","issued","Date","report","value","system","getPath","addReport","addQty","addUnit","absentReport","context","Card","style","marginBottom","Header","Text","Body","toDateString","index","condition","recorded","dateRecorded","onset","onsetDateTime","abatement","clinicalStatus","medicationstatement","medication","taken","start","end","allergyintolerance","allergy","criticality","category","address","telecom","as","ListGroup","padding","ListGroupItem","map","com","use","capitalize","relatedperson","name","gender","birthDate","date","str","toUpperCase","substring","officialName","array","find","arrayRecord","given","join","family","used","out","phone","length","replace","split","splice","returnStr","checkSys","c","display","SubHeader","log","Container","noGutter","fluid","margin","justifyContent","alignItems","Title","Subtitle","id","className","flexDirection","border","Nav","Item","Link","NavLink","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","i","PageIndex","path","PageType","label","NavDropdown","title","CurrentPage","Navbar","Brand","AllOptions","Divider","Cards","RedirectRoute","TableFooter","disabled","type","onChange","event","target","onKeyPress","key","Pages","Main","Display","Type","Math","ceil","toLowerCase","SetParentState","App","Dropdown","MainArray","AccountArray","bind","this","setState","MainLabels","AccountLabels","concat","basename","GetHeader","exact","LaunchPatient","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a856e6.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\nimport { \n    Card, \n    ListGroup,\n    ListGroupItem \n} from 'react-bootstrap';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res[0] });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 });\n        }).catch(() => props.SetAppState({ Loading: false, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 }));\n}\n\n// Table Body Events\nEvents.main = {};\n\nEvents.main.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = Events.value.system(getPath(props.entry, \"code.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"code.text\") || \"Report Error\"),\n        addReport = Events.value.system(getPath(props.entry ,\"valueCodeableConcept.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"valueCodeableConcept.text\") || \"N/A\"),\n        addQty = getPath(props.entry, \"valueQuantity.value\") || \"N/A\",\n        addUnit = getPath(props.entry, \"valueQuantity.unit\") || \"N/A\",\n        absentReport = Events.value.system(getPath(props.entry, \"dataAbsentReason.coding\"), \"http://hl7.org/fhir/data-absent-reason\", getPath(props.entry, \"dataAbsentReason.text\") || \"Absent Report\");\n\n    let context = addReport;\n    if (addQty !== \"N/A\") context = addQty;\n    if (addQty !== \"N/A\" && addUnit !== \"N/A\") context = `${addQty} ${addUnit}`;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"category.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{issued.toDateString() || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.absentReport ? absentReport : report }</Card.Text>\n            <Card.Text>{context}</Card.Text>\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.condition = (props) => {\n    const recorded = new Date(props.entry.dateRecorded),\n        onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"category.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.verificationStatus || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.clinicalStatus || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{recorded.toDateString() || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"code.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{abatement === \"Invalid Date\" ? `${onset.toDateString()} - Present` : `${onset.toDateString()} - ${abatement.toDateString()}` || \"N/A\"}</Card.Text>\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.medicationstatement = (props) => {\n    const medication = Events.value.system(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", getPath(props.entry, \"medicationCodeableConcept.text\") || \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"Medicaiton has not been taken.\" : \"Medication has been taken\",\n        start = new Date(getPath(props.entry, \"effectivePeriod.start\")),\n        end = new Date(getPath(props.entry, \"effectivePeriod.end\"));\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{medication || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{taken || \"N/A\"}</Card.Text>\n            <Card.Text>{end === \"Invalid Date\" ? `${start.toDateString()} - Present` : `${start.toDateString()} - ${end.toDateString()}` || \"N/A\"}</Card.Text>\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.allergyintolerance = (props) => {\n    const allergy = Events.value.system(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"None\";\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.category || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{allergy || \"N/A\"}</Card.Text>\n            <Card.Text>{criticality || \"N/A\"}</Card.Text>\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.patient = (props) => {\n    const address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            <Card.Text as={ListGroupItem}>{`Address: ${address || \"N/A\"}`}</Card.Text>\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.relatedperson = (props) => {\n    const name = getPath(props.entry, \"name.text\") || null,\n        gender = Events.value.capitalize(props.entry.gender) || null,\n        birthDate = Events.value.date(props.entry.birthDate) || null,\n        address = getPath(props.entry, \"address.0.text\") || null,\n        telecom = Events.value.telecom(props.entry.telecom) || null;\n\n    return <Card key={props.index} style={{ marginBottom: '10px' }}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{`Name: ${name || \"N/A\"}`}</Card.Text>\n            <Card.Text>{`Gender: ${gender || \"N/A\"}`}</Card.Text>\n            <Card.Text>{`DoB: ${birthDate || \"N/A\"}`}</Card.Text>\n        </Card.Header>\n        <Card.Body \n            as={ListGroup}\n            style={{ padding: \"0\" }}\n        >\n            <Card.Text as={ListGroupItem}>{`Address: ${address || \"N/A\"}`}</Card.Text>\n            {telecom ? telecom.map(com => {\n                const use = Events.value.capitalize(com.use);\n                return <Card.Text as={ListGroupItem}>{`${use}: ${com.value}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\n// Value Events\nEvents.value = {};\n\nEvents.value.capitalize = (str) => {\n    if (typeof str !== 'string') return null\n    return str[0].toUpperCase() + str.substring(1);\n}\n\nEvents.value.officialName = (array) => {\n    let entry = array.find(arrayRecord => arrayRecord.use === \"official\") || array[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return null;\n}\n\nEvents.value.telecom = (array) => {\n    const used = [],\n        out = [];\n    let phone = null;\n    \n    array.map(com => {\n        if (!com.system || !com.value) return\n        phone = Events.value.phone(com.value);\n        if (used.includes(phone) || used.includes(com.value)) return\n\n        switch (com.system) {\n            case 'phone':\n                used.push(phone);\n                return out.push(com);\n            case 'email':\n                used.push(com.value);\n                return out.push(com);\n            default:\n                return;\n        }\n    });\n\n    if (out.length === 0) return null;\n    return out\n}\n\nEvents.value.phone = (str) => {\n    if (typeof str !== 'string') return null\n    const regex = /^[0-9]/;\n    let out = str.replace(regex, \"\");\n    str.split(\"\");\n    out.splice(6, 0, \".\");\n    out.splice(3, 0, \".\");\n    return out.join(\"\");\n}\n\nEvents.value.date = (str) => {\n    const date = new Date(str).toDateString();\n    if (date !== \"Invalid Date\") return date;\n    return null;\n}\n\nEvents.value.system = (array = [], system, returnStr) => {\n    let out = returnStr || 'N/A';\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport {\n    Navbar,\n    Nav,\n    NavDropdown,\n    Container,\n    Card,\n    ListGroup,\n    ListGroupItem\n} from 'react-bootstrap';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <Container fluid>\n        {!props.Oauth2 ? (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Login\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    <NavDropdown.Item as={NavLink} to=\"/launch-patient\">Patient</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        ) : (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Menu\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    {props.AllOptions.map((option, i) => {\n                        return <NavDropdown.Item \n                            key={i}\n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</NavDropdown.Item>\n                    })}\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item\n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Oauth2: null,\n                            Patient: null,\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Log Out</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        )}\n        {SubHeader(props)}\n    </Container>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    if (props.Patient) console.log('Patient: ', props.Patient);\n\n    return <Container \n        noGutter\n        fluid\n    >\n        {props.Patient ? (\n            <Card style={{ margin: '0 0 5px 0' }}>\n                <Card.Body  style={{ \n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center' \n                }}>\n                    <div>\n                        <Card.Title style={{ margin: '0' }}>{Events.value.officialName(props.Patient.name)}</Card.Title>\n                        <Card.Subtitle style={{ margin: '0' }}>{`ID: ${props.Patient.id}`}</Card.Subtitle>\n                    </div>\n                    <ListGroup \n                        className=\"list-group-flush\"\n                        style={{ flexDirection: \"row\" }}>\n                        <ListGroupItem style={{ border: 'none' }}>{`Gender: ${Events.value.capitalize(props.Patient.gender)}`}</ListGroupItem>\n                        <ListGroupItem>{`DoB: ${Events.value.date(props.Patient.birthDate)}`}</ListGroupItem>\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        ) : null }\n        {props.Cerner ? (\n            <Nav style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                <Nav.Item>\n                    <Nav.Link \n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Back</Nav.Link>\n                </Nav.Item>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                    return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                })}\n                <Nav.Item>\n                    <Nav.Link\n                        as={NavDropdown}\n                        title={`Count: ${props.DisplayCount}`}\n                        id=\"navbarScrollingDropdown\"\n                    >\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 25, CurrentPage: 1, DisplayIndex: 0 })}\n                        >25</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 50, CurrentPage: 1, DisplayIndex: 0 })}\n                        >50</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 100, CurrentPage: 1, DisplayIndex: 0 })}\n                        >100</NavDropdown.Item>\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n        ) : null }\n    </Container>\n\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\nimport {\n    Container,\n    Card\n} from 'react-bootstrap';\n\nconst Cards = (props) => {\n\n    return <Container>\n        {props.AllOptions.map((option, i) => {\n            return <Card>\n                <NavLink key={i} \n                    to={option.path}\n                    onClick={() => props.RedirectRoute({\n                        option: option,\n                        index: i\n                    })}\n                >{option.label}</NavLink>\n            </Card>\n        })}\n    </Container>\n}\n\nexport default Cards;","import {\n  Container\n} from 'react-bootstrap';\nimport Events from \"../Events\";\n\nconst Main = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <div className=\"App-Table\">\n      <Container>\n        {Display.map((entry, index) => {\n          return Events.main[Type]({\n            index: index,\n            entry: entry\n          });\n        })}\n      </Container>\n      {Pages > 1 ? (\n        <TableFooter \n          Cerner={props.Cerner}\n          Pages={Pages}\n          DisplayCount={props.DisplayCount}\n          DisplayIndex={props.DisplayIndex}\n          CurrentPage={props.CurrentPage}\n          SetAppState={props.SetAppState}\n          SetParentState={props.SetParentState}\n        />\n      ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: 1, DisplayIndex: 0 })}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage - 1, DisplayIndex: props.DisplayIndex - props.DisplayCount })}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetAppState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetAppState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetAppState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage + 1, DisplayIndex: props.DisplayIndex + props.DisplayCount })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.Pages, DisplayIndex: props.DisplayCount * (props.Pages - 1) })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Main;","import Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\n\nexport default Patient;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        { \n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        } , {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        } , {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        } , {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        { \n          label: \"Account\",\n          value: \"Patient\",\n          path: \"/account\"\n        } , {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n    this.RedirectRoute = this.RedirectRoute.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  RedirectRoute(props) {\n    const MainLabels = [],\n      AccountLabels = [],\n      { Oauth2, MainArray, AccountArray } = this.state;\n\n    MainArray.forEach(option => MainLabels.push(option.label));\n    AccountArray.forEach(option => AccountLabels.push(option.label));\n\n    this.setState({ Loading: true });\n    if (AccountLabels.includes(props.option.label)) {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"AccountIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    } else {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"MainIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    }\n    <Redirect to={props.option.path}/>\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllOptions = MainArray.concat(AccountArray);\n\n    if (Cerner) console.log(\"Cerner: \", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader \n          AllOptions={AllOptions}\n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Cerner}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please Login to Continue</h1>\n                </div>\n              ) : null\n            )}\n          </Route>\n          {AllOptions.map((option, index) => {\n            return <Route key={index} path={option.path}>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n              ) : (\n                <Main\n                  Cerner={Cerner}\n                  DisplayCount={DisplayCount}\n                  DisplayIndex={DisplayIndex}\n                  CurrentPage={CurrentPage}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n            </>\n          ) : null }\n        </Switch>\n        {!Loading && Oauth2 ? (\n          <Cards \n            AllOptions={AllOptions}\n            RedirectRoute={this.RedirectRoute}\n          />\n        ) : null }\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  const MainLabels = [],\n    AccountLabels = [];\n  let includedAccount = false;\n\n  props.MainArray.forEach(option => MainLabels.push(option.label));\n  props.AccountArray.forEach(option => {\n    if (props.Cerner && option.value === props.Cerner[0].resourceType) includedAccount = true;\n    AccountLabels.push(option.label)\n  });\n\n  switch (true) {\n    case includedAccount:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('./index.scss');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}