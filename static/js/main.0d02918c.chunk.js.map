{"version":3,"sources":["Events.js","Component/Header.js","Component/Cards.js","Component/Main.js","Component/Launch/LaunchPatient.js","App.js","reportWebVitals.js","index.js"],"names":["Events","props","FHIR","oauth2","authorize","client_id","scope","iss","redirectUri","catch","console","error","client","ready","then","patient","request","pageLimit","flat","res","SetAppState","Loading","Oauth2","Patient","routeChange","newPage","Cerner","forEach","entry","PrevScope","includes","resourceType","state","Page","response","newRes","addEntry","status","verificationStatus","substance","code","text","push","Property","Value","main","observation","issued","Date","report","value","system","getPath","addReport","addQty","addUnit","absentReport","context","Card","Header","Text","toDateString","Body","Footer","index","condition","recorded","dateRecorded","onset","onsetDateTime","abatement","clinicalStatus","medicationstatement","medication","taken","start","end","allergyintolerance","allergy","criticality","category","address","gender","telecom","map","com","relatedperson","birthDate","name","capitalize","str","toUpperCase","substring","officialName","array","find","arrayRecord","use","given","join","family","obj","out","phone","split","splice","date","returnStr","checkSys","c","display","SubHeader","log","Container","noGutter","fluid","style","margin","padding","justifyContent","alignItems","Title","Subtitle","id","ListGroup","className","flexDirection","ListGroupItem","border","Nav","Item","Link","as","NavLink","to","onClick","MainIndex","AccountIndex","DisplayCount","DisplayIndex","PageArray","option","i","PageIndex","path","PageType","label","NavDropdown","title","CurrentPage","Navbar","Brand","AllOptions","Divider","Cards","RedirectRoute","TableFooter","disabled","type","onChange","event","target","onKeyPress","key","Pages","length","Main","Display","Type","Math","ceil","toLowerCase","SetParentState","App","Dropdown","MainArray","AccountArray","bind","this","setState","MainLabels","AccountLabels","concat","basename","GetHeader","exact","LaunchPatient","React","Component","includedAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIMA,EAAS,CAIfA,QAAiB,SAACC,GACdC,IAAKC,OAAOC,UAAU,CAClBC,UAAW,uCACXC,MAAO,qTACPC,IAAK,8EACLC,YAAa,8CACdC,MAAMC,QAAQC,QAIrBX,OAAgB,IAEhBA,EAAOY,OAAOC,MAAQ,SAACZ,GAGnBC,IAAKC,OAAOU,QACPC,MAAK,SAAAF,GACFA,EAAOG,QAAQC,QAAQ,UAAW,CAC9BC,UAAW,EACXC,MAAM,IACPJ,MAAK,SAAAK,GACJlB,EAAMmB,YAAY,CAAEC,SAAS,EAAOC,OAAQV,EAAQW,QAASJ,EAAI,QAClEV,OAAM,kBAAMR,EAAMmB,YAAY,CAAEC,SAAS,UAC7CZ,OAAM,kBAAMR,EAAMmB,YAAY,CAAEC,SAAS,QAGpDrB,EAAOY,OAAOY,YAAc,SAACvB,GAGzB,IAAIwB,GAAU,EACdxB,EAAMyB,OAAOC,SAAQ,SAAAC,GACb3B,EAAM4B,UAAUC,SAASF,EAAMG,gBAAeN,GAAU,MAE5DA,IACAxB,EAAMmB,YAAY,CAAEC,SAAS,IAC7BrB,EAAOY,OAAOI,QAAQf,KAI9BD,EAAOY,OAAOI,QAAU,SAACf,GAGNC,IAAKU,OAAOX,EAAMqB,OAAOU,OACjCjB,QAAQC,QAAQf,EAAMgC,KAAM,CAC/BhB,UAAW,EACXC,MAAM,IAELJ,MAAK,SAAAoB,GAAa,IAAD,EACRC,EAAS,GACXC,GAAW,EACfF,EAASP,SAAQ,SAAAR,GACb,QAAQ,GACJ,QACIiB,GAAW,EACX,MACJ,KAAMjB,EAAIkB,QAAyB,qBAAflB,EAAIkB,OACxB,KAAMlB,EAAImB,oBAAiD,qBAA3BnB,EAAImB,mBACpC,KAAMnB,EAAIoB,WAA+B,qBAAlBpB,EAAIoB,UAC3B,KAAMpB,EAAIqB,MAA0B,qBAAlBrB,EAAIqB,KAAKC,KACvBL,GAAW,EAGfA,GAAUD,EAAOO,KAAKvB,MAE9BlB,EAAMmB,aAAN,GAAoBC,SAAS,EAAOK,OAAQS,GAA5C,cAAqDlC,EAAM0C,SAAW1C,EAAM2C,OAA5E,4BAAgG,GAAhG,6BAAiH,GAAjH,OACDnC,OAAM,wBAAMR,EAAMmB,aAAN,GAAoBC,SAAS,GAA7B,cAAqCpB,EAAM0C,SAAW1C,EAAM2C,OAA5D,4BAAgF,GAAhF,6BAAiG,GAAjG,QAIvB5C,EAAO6C,KAAO,GAEd7C,EAAO6C,KAAKC,YAAc,SAAC7C,GACvB,IAAM8C,EAAS,IAAIC,KAAK/C,EAAM2B,MAAMmB,QAChCE,EAASjD,EAAOkD,MAAMC,OAAOC,kBAAQnD,EAAM2B,MAAO,eAAgB,yBAA0BwB,kBAAQnD,EAAM2B,MAAO,cAAgB,gBACjIyB,EAAYrD,EAAOkD,MAAMC,OAAOC,kBAAQnD,EAAM2B,MAAO,+BAAgC,yBAA0BwB,kBAAQnD,EAAM2B,MAAO,8BAAgC,OACpK0B,EAASF,kBAAQnD,EAAM2B,MAAO,wBAA0B,MACxD2B,EAAUH,kBAAQnD,EAAM2B,MAAO,uBAAyB,MACxD4B,EAAexD,EAAOkD,MAAMC,OAAOC,kBAAQnD,EAAM2B,MAAO,2BAA4B,yCAA0CwB,kBAAQnD,EAAM2B,MAAO,0BAA4B,iBAE/K6B,EAAUJ,EAId,MAHe,QAAXC,IAAkBG,EAAUH,GACjB,QAAXA,GAAgC,QAAZC,IAAmBE,EAAO,UAAMH,EAAN,YAAgBC,IAE3D,eAACG,EAAA,EAAD,WACH,eAACA,EAAA,EAAKC,OAAN,WACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,QACxC,cAAC2B,EAAA,EAAKE,KAAN,UAAYb,EAAOc,gBAAkB,WAEzC,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKE,KAAN,UAAYR,kBAAQnD,EAAM2B,MAAO,kBAAoB,QACrD,cAAC8B,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAM4B,aAAeA,EAAeP,IACtD,cAACS,EAAA,EAAKE,KAAN,UAAYH,OAEhB,cAACC,EAAA,EAAKK,OAAN,UACI,cAACL,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMS,QAAU,YAXxBpC,EAAM+D,QAgB5BhE,EAAO6C,KAAKoB,UAAY,SAAChE,GACrB,IAAMiE,EAAW,IAAIlB,KAAK/C,EAAM2B,MAAMuC,cAClCC,EAAQ,IAAIpB,KAAK/C,EAAM2B,MAAMyC,eAC7BC,EAAY,IAAItB,KAAK/C,EAAM2B,MAAMyC,eAErC,OAAO,eAACX,EAAA,EAAD,WACH,eAACA,EAAA,EAAKC,OAAN,WACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,QACxC,cAAC2B,EAAA,EAAKE,KAAN,UAAYM,EAASL,gBAAkB,WAE3C,eAACH,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKE,KAAN,UAAYR,kBAAQnD,EAAM2B,MAAO,kBAAoB,QACrD,cAAC8B,EAAA,EAAKE,KAAN,UAAYR,kBAAQnD,EAAM2B,MAAO,cAAgB,QACjD,cAAC8B,EAAA,EAAKE,KAAN,UAA0B,iBAAdU,EAAA,UAAkCF,EAAMP,eAAxC,cAAqE,UAAGO,EAAMP,eAAT,cAA6BS,EAAUT,iBAAoB,WAEhJ,eAACH,EAAA,EAAKK,OAAN,WACI,cAACL,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMU,oBAAsB,QAC9C,cAACoB,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAM2C,gBAAkB,aAZhCtE,EAAM+D,QAiB5BhE,EAAO6C,KAAK2B,oBAAsB,SAACvE,GAC/B,IAAMwE,EAAazE,EAAOkD,MAAMC,OAAOC,kBAAQnD,EAAM2B,MAAO,qCAAuCwB,kBAAQnD,EAAM2B,MAAO,yCAA0C,8CAA+CwB,kBAAQnD,EAAM2B,MAAO,mCAAqC,0BACvQ8C,EAAQtB,kBAAQnD,EAAM2B,MAAO,eAAiB,iCAAmC,4BACjF+C,EAAQ,IAAI3B,KAAKI,kBAAQnD,EAAM2B,MAAO,0BACtCgD,EAAM,IAAI5B,KAAKI,kBAAQnD,EAAM2B,MAAO,wBAExC,OAAO,eAAC8B,EAAA,EAAD,WACH,cAACA,EAAA,EAAKC,OAAN,UACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,UAE5C,eAAC2B,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKE,KAAN,UAAYa,GAAc,QAC1B,cAACf,EAAA,EAAKE,KAAN,UAAYR,kBAAQnD,EAAM2B,MAAO,kBAAoB,QACrD,cAAC8B,EAAA,EAAKE,KAAN,UAAYc,GAAS,QACrB,cAAChB,EAAA,EAAKE,KAAN,UAAoB,iBAARgB,EAAA,UAA4BD,EAAMd,eAAlC,cAA+D,UAAGc,EAAMd,eAAT,cAA6Be,EAAIf,iBAAoB,WAEpI,cAACH,EAAA,EAAKK,OAAN,UACI,cAACL,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMS,QAAU,YAXxBpC,EAAM+D,QAgB5BhE,EAAO6C,KAAKgC,mBAAqB,SAAC5E,GAC9B,IAAM6E,EAAU9E,EAAOkD,MAAMC,OAAOC,kBAAQnD,EAAM2B,MAAO,qBAAuBwB,kBAAQnD,EAAM2B,MAAO,yBAA0B,yBAA0B3B,EAAM2B,MAAMW,UAAUE,MAAQ,mBACnLsC,EAA0C,UAA5B9E,EAAM2B,MAAMmD,YAA0B,YAAc,OAEtE,OAAO,eAACrB,EAAA,EAAD,WACH,cAACA,EAAA,EAAKC,OAAN,UACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,UAE5C,eAAC2B,EAAA,EAAKI,KAAN,WACI,cAACJ,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMoD,UAAY,QACpC,cAACtB,EAAA,EAAKE,KAAN,UAAYkB,GAAW,QACvB,cAACpB,EAAA,EAAKE,KAAN,UAAYmB,GAAe,WAE/B,cAACrB,EAAA,EAAKK,OAAN,UACI,cAACL,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMS,QAAU,YAVxBpC,EAAM+D,QAe5BhE,EAAO6C,KAAK9B,QAAU,SAACd,GACnB,IAAMgF,EAAU7B,kBAAQnD,EAAM2B,MAAO,mBAAqB,KAE1D,OAAO,eAAC8B,EAAA,EAAD,WACH,eAACA,EAAA,EAAKC,OAAN,WACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,QACxC,cAAC2B,EAAA,EAAKE,KAAN,UAAYR,kBAAQnD,EAAM2B,MAAO,cAAgB,QACjD,cAAC8B,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMsD,QAAU,WAEtC,eAACxB,EAAA,EAAKI,KAAN,WACKmB,EAAU,cAACvB,EAAA,EAAKE,KAAN,UAAYqB,IAAuB,KAC7ChF,EAAM2B,MAAMuD,QAAUlF,EAAM2B,MAAMuD,QAAQC,KAAI,SAAAC,GAC3C,IAAMF,EAAUnF,EAAOkD,MAAMiC,QAAQE,GACrC,GAAKF,IAAW/B,kBAAQiC,EAAK,cAC7B,OAAO,cAAC3B,EAAA,EAAKE,KAAN,oBAAeuB,QACrB,UAZKlF,EAAM+D,QAiB5BhE,EAAO6C,KAAKyC,cAAgB,SAACrF,GACzB,IAAMsF,EAAY,IAAIvC,KAAK/C,EAAM2B,MAAM2D,WACnCN,EAAU7B,kBAAQnD,EAAM2B,MAAO,mBAAqB,KAExD,OAAO,eAAC8B,EAAA,EAAD,WACH,eAACA,EAAA,EAAKC,OAAN,WACI,cAACD,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMG,cAAgB,QACxC,cAAC2B,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAM4D,KAAK/C,MAAQ,QACrC,cAACiB,EAAA,EAAKE,KAAN,UAAY3D,EAAM2B,MAAMsD,QAAU,QAClC,cAACxB,EAAA,EAAKE,KAAN,UAAY2B,EAAU1B,gBAAkB,WAE5C,eAACH,EAAA,EAAKI,KAAN,WACKmB,EAAU,cAACvB,EAAA,EAAKE,KAAN,UAAYqB,IAAuB,KAC7ChF,EAAM2B,MAAMuD,QAAUlF,EAAM2B,MAAMuD,QAAQC,KAAI,SAAAC,GAC3C,IAAMF,EAAUnF,EAAOkD,MAAMiC,QAAQE,GACrC,GAAKF,IAAW/B,kBAAQiC,EAAK,cAC7B,OAAO,cAAC3B,EAAA,EAAKE,KAAN,oBAAeuB,QACrB,UAbKlF,EAAM+D,QAmB5BhE,EAAOkD,MAAQ,GAEflD,EAAOkD,MAAMuC,WAAa,SAACC,GACvB,OAAOA,EAAI,GAAGC,cAAgBD,EAAIE,UAAU,IAGhD5F,EAAOkD,MAAM2C,aAAe,WAAiB,IAAhBC,EAAe,uDAAP,GAC7BlE,EAAQkE,EAAMC,MAAK,SAAAC,GAAW,MAAwB,aAApBA,EAAYC,QAAuBH,EAAM,GAC/E,OAAIlE,EAAcA,EAAMsE,MAAMC,KAAK,KAAO,IAAMvE,EAAMwE,OAC/C,OAGXpG,EAAOkD,MAAMiC,QAAU,SAACkB,GACpB,IAAIC,EAAMD,EAAIJ,IAAMjG,EAAOkD,MAAMuC,WAAWY,EAAIJ,KAAO,KACnDM,EAAQF,EAAInD,MAAQlD,EAAOkD,MAAMqD,MAAMF,EAAInD,OAAS,KAExD,IAAKmD,EAAIlD,OAAQ,OAAOkD,EAAInD,OAAS,KACrC,OAAQmD,EAAIlD,QACR,IAAK,QAID,OAHImD,GAAOD,EAAInD,MACXoD,GAAO,IAAMD,EAAInD,MACVmD,EAAInD,QAAOoD,EAAMD,EAAInD,OACzBoD,EACX,QAII,OAHIA,GAAOC,EACPD,GAAO,IAAMC,EACNA,IAAOD,EAAMC,GACjBD,IAInBtG,EAAOkD,MAAMqD,MAAQ,SAACb,GAClB,IAAIY,EAAMZ,EAAIc,MAAM,IAGpB,OAFAF,EAAIG,OAAO,EAAG,EAAG,KACjBH,EAAIG,OAAO,EAAG,EAAG,KACVH,EAAIH,KAAK,KAGpBnG,EAAOkD,MAAMwD,KAAO,SAAChB,GACjB,IAAMgB,EAAO,IAAI1D,KAAK0C,GACtB,OAAIgB,EAAaA,EAAK7C,eACf6B,GAGX1F,EAAOkD,MAAMC,OAAS,WAAoC,IAAnC2C,EAAkC,uDAA1B,GAAI3C,EAAsB,uCAAdwD,EAAc,uCACjDL,EAAMK,GAAa,MACjBC,EAAWd,EAAMC,MAAK,SAAAc,GAAC,OAAIA,EAAE1D,SAAWA,KAI9C,OAHIyD,GAAYA,EAASE,UACrBR,EAAMM,EAASE,SAEZR,GAGItG,Q,qDChLf,SAAS+G,EAAU9G,GAEf,GAAKA,EAAMsB,SAAYtB,EAAMyB,OAG7B,OAFIzB,EAAMsB,SAASb,QAAQsG,IAAI,YAAa/G,EAAMsB,SAE3C,eAAC0F,EAAA,EAAD,CACHC,UAAQ,EACRC,OAAK,EAFF,UAIFlH,EAAMsB,QACH,cAACmC,EAAA,EAAD,CAAM0D,MAAO,CAAEC,OAAQ,aAAvB,SACI,eAAC3D,EAAA,EAAKI,KAAN,CAAYsD,MAAO,CACfE,QAAS,OACTR,QAAS,OACTS,eAAgB,gBAChBC,WAAY,UAJhB,UAMI,gCACI,cAAC9D,EAAA,EAAK+D,MAAN,CAAYL,MAAO,CAAEC,OAAQ,KAA7B,SAAqCrH,EAAOkD,MAAM2C,aAAa5F,EAAMsB,QAAQiE,QAC7E,cAAC9B,EAAA,EAAKgE,SAAN,CAAeN,MAAO,CAAEC,OAAQ,KAAhC,uBAA+CpH,EAAMsB,QAAQoG,SAEjE,eAACC,EAAA,EAAD,CACIC,UAAU,mBACVT,MAAO,CAAEU,cAAe,OAF5B,UAGI,cAACC,EAAA,EAAD,CAAeX,MAAO,CAAEY,OAAQ,QAAhC,2BAAsDhI,EAAOkD,MAAMuC,WAAWxF,EAAMsB,QAAQ2D,WAC5F,cAAC6C,EAAA,EAAD,yBAAwB/H,EAAOkD,MAAMwD,KAAKzG,EAAMsB,QAAQgE,sBAIpE,KACHtF,EAAMyB,OACH,eAACuG,EAAA,EAAD,CAAKb,MAAO,CAAEG,eAAgB,SAAUC,WAAY,UAApD,UACI,cAACS,EAAA,EAAIC,KAAL,UACI,cAACD,EAAA,EAAIE,KAAL,CACIC,GAAIC,IACJC,GAAG,IACHC,QAAS,kBAAMtI,EAAMmB,YAAY,CAC7BM,OAAQ,KACR8G,UAAW,EACXC,aAAc,EACdC,aAAc,GACdC,aAAc,KARtB,oBAYH1I,EAAM2I,UAAUxD,KAAI,SAACyD,EAAQC,GAC1B,OAAI7I,EAAM8I,UAAwB,cAACd,EAAA,EAAIC,KAAL,UAC9B,cAACD,EAAA,EAAIE,KAAL,CACIC,GAAIC,IACJC,GAAIO,EAAOG,KACXT,QAAS,WACLtI,EAAMmB,YAAY,CAAEC,SAAS,IAC7BrB,EAAOY,OAAOI,QAAQ,CAClBM,OAAQrB,EAAMqB,OACdW,KAAM4G,EAAO3F,MACbP,SAAS,GAAD,OAAK1C,EAAMgJ,SAAX,SACRrG,MAAOkG,EACP1H,YAAanB,EAAMmB,eAV/B,SAaEyH,EAAOK,OAbMJ,QAgCvB,cAACb,EAAA,EAAIC,KAAL,UACI,eAACD,EAAA,EAAIE,KAAL,CACIC,GAAIe,IACJC,MAAK,iBAAYnJ,EAAMyI,cACvBf,GAAG,0BAHP,UAKI,cAACwB,EAAA,EAAYjB,KAAb,CACIK,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEsH,aAAc,GAAIW,YAAa,EAAGV,aAAc,KADvF,gBAGA,cAACQ,EAAA,EAAYjB,KAAb,CACIK,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEsH,aAAc,GAAIW,YAAa,EAAGV,aAAc,KADvF,gBAGA,cAACQ,EAAA,EAAYjB,KAAb,CACIK,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEsH,aAAc,IAAKW,YAAa,EAAGV,aAAc,KADxF,yBAMZ,QAKGhF,MApLA,SAAC1D,GAEZ,OAAO,eAACgH,EAAA,EAAD,CAAWE,OAAK,EAAhB,UACDlH,EAAMqB,OAqBJ,eAACgI,EAAA,EAAD,CAAQlC,MAAO,CAAEG,eAAgB,iBAAjC,UACI,cAAC+B,EAAA,EAAOC,MAAR,CACInB,GAAIC,IACJC,GAAG,IACHC,QAAS,kBAAMtI,EAAMmB,YAAY,CAC7BM,OAAQ,KACR8G,UAAW,EACXC,aAAc,EACdC,aAAc,GACdC,aAAc,KARtB,wBAWA,eAACQ,EAAA,EAAD,CACIC,MAAM,OACNzB,GAAG,0BAFP,UAIK1H,EAAMuJ,WAAWpE,KAAI,SAACyD,EAAQC,GAC3B,OAAO,cAACK,EAAA,EAAYjB,KAAb,CAEHE,GAAIC,IACJC,GAAIO,EAAOG,KACXT,QAAS,WACLtI,EAAMmB,YAAY,CAAEC,SAAS,IAC7BrB,EAAOY,OAAOI,QAAQ,CAClBM,OAAQrB,EAAMqB,OACdW,KAAM4G,EAAO3F,MACbP,SAAS,GAAD,OAAK1C,EAAMgJ,SAAX,SACRrG,MAAOkG,EACP1H,YAAanB,EAAMmB,eAXxB,SAcLyH,EAAOK,OAbAJ,MAeb,cAACK,EAAA,EAAYM,QAAb,IACA,cAACN,EAAA,EAAYjB,KAAb,CACIE,GAAIC,IACJC,GAAG,IACHC,QAAS,kBAAMtI,EAAMmB,YAAY,CAC7BE,OAAQ,KACRC,QAAS,KACTG,OAAQ,KACR8G,UAAW,EACXC,aAAc,EACdC,aAAc,GACdC,aAAc,KAVtB,2BAtDR,eAACW,EAAA,EAAD,CAAQlC,MAAO,CAAEG,eAAgB,iBAAjC,UACI,cAAC+B,EAAA,EAAOC,MAAR,CACInB,GAAIC,IACJC,GAAG,IACHC,QAAS,kBAAMtI,EAAMmB,YAAY,CAC7BM,OAAQ,KACR8G,UAAW,EACXC,aAAc,EACdC,aAAc,GACdC,aAAc,KARtB,wBAWA,cAACQ,EAAA,EAAD,CACIC,MAAM,QACNzB,GAAG,0BAFP,SAII,cAACwB,EAAA,EAAYjB,KAAb,CAAkBE,GAAIC,IAASC,GAAG,kBAAlC,0BAsDXvB,EAAU9G,OC/DJyJ,EAjBD,SAACzJ,GAEX,OAAO,cAACgH,EAAA,EAAD,UACFhH,EAAMuJ,WAAWpE,KAAI,SAACyD,EAAQC,GAC3B,OAAO,cAACpF,EAAA,EAAD,UACH,cAAC,IAAD,CACI4E,GAAIO,EAAOG,KACXT,QAAS,kBAAMtI,EAAM0J,cAAc,CAC/Bd,OAAQA,EACR7E,MAAO8E,KAJf,SAMED,EAAOK,OANKJ,WCgC9B,SAASc,EAAY3J,GACjB,OAAO,sBAAK4H,UAAU,aAAf,UACH,gCACI,wBACIA,UAAU,kBACVU,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEiI,YAAa,EAAGV,aAAc,KACjEkB,SAAU5J,EAAMoJ,aAAe,EAHnC,mBAKA,wBACIxB,UAAU,kBACVU,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEiI,YAAapJ,EAAMoJ,YAAc,EAAGV,aAAc1I,EAAM0I,aAAe1I,EAAMyI,gBAChHmB,SAAU5J,EAAMoJ,aAAe,EAHnC,qBAMJ,qBAAKxB,UAAU,kBAAf,SACI,wBAAOA,UAAU,eAAjB,UACI,uBACIA,UAAU,eACViC,KAAK,OACL5G,MAAOjD,EAAMoJ,YACbU,SAAU,SAAAC,GAAK,OAAI/J,EAAMmB,YAAY,CAAEiI,YAAaW,EAAMC,OAAO/G,SACjEgH,WAAY,SAAAF,GACR,GAAkB,UAAdA,EAAMG,IAAiB,CACvB,GAAIlK,EAAMoJ,aAAe,EAErB,OADApJ,EAAMmB,YAAY,CAAEuH,aAAc,IAC3B1I,EAAMmB,YAAY,CAAEiI,YAAa,IAE5C,GAAIpJ,EAAMoJ,aAAepJ,EAAMmK,MAE3B,OADAnK,EAAMmB,YAAY,CAAEuH,aAAc1I,EAAMyB,OAAO2I,OAASpK,EAAMyI,eACvDzI,EAAMmB,YAAY,CAAEiI,YAAapJ,EAAMmK,QAElDnK,EAAMmB,YAAY,CAAEuH,aAAc1I,EAAMyI,cAAgBzI,EAAMoJ,YAAc,SAhB5F,WAoBSpJ,EAAMmK,YAGnB,gCACI,wBACIvC,UAAU,kBACVU,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEiI,YAAapJ,EAAMoJ,YAAc,EAAGV,aAAc1I,EAAM0I,aAAe1I,EAAMyI,gBAChHmB,SAAU5J,EAAMoJ,aAAepJ,EAAMmK,MAHzC,kBAKA,wBACIvC,UAAU,kBACVU,QAAS,kBAAMtI,EAAMmB,YAAY,CAAEiI,YAAapJ,EAAMmK,MAAOzB,aAAc1I,EAAMyI,cAAgBzI,EAAMmK,MAAQ,MAC/GP,SAAU5J,EAAMoJ,aAAepJ,EAAMmK,MAHzC,wBASGE,MA3FF,SAACrK,GACV,IAAMsK,EAAU,GACZC,EAAO,KACPJ,EAAQK,KAAKC,KAAKzK,EAAMyB,OAAO2I,OAASpK,EAAMyI,cAE9CzI,EAAMyB,OAAO,GAAGK,eAAcyI,EAAOvK,EAAMyB,OAAO,GAAGK,aAAa4I,eAItE,IAAK,IAAI7B,EAAI,EAAGA,EAAI7I,EAAMyB,OAAO2I,QAAUE,EAAQF,OAASpK,EAAMyI,aAAcI,IACxEA,GAAK7I,EAAM0I,cAAc4B,EAAQ7H,KAAKzC,EAAMyB,OAAOoH,IAK3D,OAFIyB,EAAQF,OAAS,GAAG3J,QAAQsG,IAAI,YAAauD,GAE1C,sBAAK1C,UAAU,YAAf,UACL,cAACZ,EAAA,EAAD,UACGsD,EAAQnF,KAAI,SAACxD,EAAOoC,GACnB,OAAOhE,EAAO6C,KAAK2H,GAAM,CACvBxG,MAAOA,EACPpC,MAAOA,SAIZwI,EAAQ,EACP,cAACR,EAAD,CACElI,OAAQzB,EAAMyB,OACd0I,MAAOA,EACP1B,aAAczI,EAAMyI,aACpBC,aAAc1I,EAAM0I,aACpBU,YAAapJ,EAAMoJ,YACnBjI,YAAanB,EAAMmB,YACnBwJ,eAAgB3K,EAAM2K,iBAEtB,SC5BKrJ,EATC,WAGZ,OADAvB,EAAOe,UACA,qBAAK8G,UAAU,aAAf,SACH,mDCOagD,E,kDACnB,WAAY5K,GAAQ,IAAD,8BACjB,cAAMA,IACD+B,MAAQ,CACXX,SAAS,EACTyJ,SAAU,KACVxJ,OAAQ,KACRC,QAAS,KACTG,OAAQ,KACR2H,YAAa,EACbV,aAAc,EACdD,aAAc,GACdF,UAAW,EACXuC,UAAW,CACT,CACE7B,MAAO,eACPhG,MAAO,cACP8F,KAAM,iBACJ,CACFE,MAAO,aACPhG,MAAO,YACP8F,KAAM,eACJ,CACFE,MAAO,cACPhG,MAAO,sBACP8F,KAAM,gBACJ,CACFE,MAAO,YACPhG,MAAO,qBACP8F,KAAM,eAGVP,aAAc,EACduC,aAAc,CACZ,CACE9B,MAAO,UACPhG,MAAO,UACP8F,KAAM,YACJ,CACFE,MAAO,YACPhG,MAAO,gBACP8F,KAAM,gBAIZ,EAAK5H,YAAc,EAAKA,YAAY6J,KAAjB,gBACnB,EAAKtB,cAAgB,EAAKA,cAAcsB,KAAnB,gBA7CJ,E,+CAgDnB,SAAYjB,GACVkB,KAAKC,SAASnB,K,2BAGhB,SAAc/J,GACN,IAAAmL,EAAa,GACjBC,EAAgB,GADZ,EAEkCH,KAAKlJ,MAAzCV,EAFE,EAEFA,OAAQyJ,EAFN,EAEMA,UAAWC,EAFjB,EAEiBA,aAEvBD,EAAUpJ,SAAQ,SAAAkH,GAAM,OAAIuC,EAAW1I,KAAKmG,EAAOK,UACnD8B,EAAarJ,SAAQ,SAAAkH,GAAM,OAAIwC,EAAc3I,KAAKmG,EAAOK,UAEzDgC,KAAKC,SAAS,CAAE9J,SAAS,IACrBgK,EAAcvJ,SAAS7B,EAAM4I,OAAOK,OACtClJ,EAAOY,OAAOI,QAAQ,CACpBM,OAAQA,EACRW,KAAMhC,EAAM4I,OAAO3F,MACnBP,SAAU,eACVC,MAAO3C,EAAM+D,MACb5C,YAAa8J,KAAK9J,cAGpBpB,EAAOY,OAAOI,QAAQ,CACpBM,OAAQA,EACRW,KAAMhC,EAAM4I,OAAO3F,MACnBP,SAAU,YACVC,MAAO3C,EAAM+D,MACb5C,YAAa8J,KAAK9J,cAGrB,IAAanB,EAAM4I,OAAOG,O,+BAG7B,WACqBkC,KAAKlJ,MAAhBN,SAEN1B,EAAOY,OAAOC,MAAM,CAClBO,YAAa8J,KAAK9J,cAEpB8J,KAAKC,SAAS,CAAE9J,SAAS,O,oBAI7B,WAAU,IAAD,OACP,EAaI6J,KAAKlJ,MAZPX,EADF,EACEA,QACAyJ,EAFF,EAEEA,SACAxJ,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAG,EALF,EAKEA,OACA2H,EANF,EAMEA,YACAV,EAPF,EAOEA,aACAD,EARF,EAQEA,aACAF,EATF,EASEA,UACAuC,EAVF,EAUEA,UACAtC,EAXF,EAWEA,aACAuC,EAZF,EAYEA,aAEAxB,EAAauB,EAAUO,OAAON,GAIhC,OAFItJ,GAAQhB,QAAQsG,IAAI,WAAYtF,GAE7B,qBAAKmG,UAAU,MAAf,SACL,eAAC,IAAD,CAAQ0D,SAAS,UAAjB,UACE,cAACC,EAAD,CACEhC,WAAYA,EACZsB,SAAUA,EACVxJ,OAAQA,EACRC,QAASA,EACTG,OAAQA,EACR2H,YAAaA,EACbV,aAAcA,EACdD,aAAcA,EACdF,UAAWA,EACXuC,UAAWA,EACXtC,aAAcA,EACduC,aAAcA,EACd5J,YAAa8J,KAAK9J,cAEpB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,OAAK,EAACzC,KAAK,IAAlB,SACG3H,EACC,qBAAKwG,UAAU,cAAf,SACE,kDAGDvG,EAIG,KAHF,qBAAKuG,UAAU,YAAf,SACE,8DAKP2B,EAAWpE,KAAI,SAACyD,EAAQ7E,GACvB,OAAO,cAAC,IAAD,CAAmBgF,KAAMH,EAAOG,KAAhC,SACN3H,EACC,qBAAKwG,UAAU,cAAf,SACE,kDAGDnG,GAA4B,IAAlBA,EAAO2I,OAKhB,cAAC,EAAD,CACE3I,OAAQA,EACRgH,aAAcA,EACdC,aAAcA,EACdU,YAAaA,EACbjI,YAAa,EAAKA,cATlB,qBAAKyG,UAAU,YAAf,SACE,2DARW7D,MAsBnB1C,EAME,KALF,mCACE,cAAC,IAAD,CAAO0H,KAAK,kBAAZ,SACE,cAAC0C,EAAD,YAKNrK,GAAWC,EACX,cAAC,EAAD,CACEkI,WAAYA,EACZG,cAAeuB,KAAKvB,gBAEpB,c,GAlLqBgC,IAAMC,WAwLvC,SAASJ,EAAUvL,GACjB,IAAMmL,EAAa,GACjBC,EAAgB,GACdQ,GAAkB,EAQtB,OANA5L,EAAM8K,UAAUpJ,SAAQ,SAAAkH,GAAM,OAAIuC,EAAW1I,KAAKmG,EAAOK,UACzDjJ,EAAM+K,aAAarJ,SAAQ,SAAAkH,GACrB5I,EAAMyB,QAAUmH,EAAO3F,QAAUjD,EAAMyB,OAAO,GAAGK,eAAc8J,GAAkB,GACrFR,EAAc3I,KAAKmG,EAAOK,WAGpB,GACN,KAAK2C,EACH,OAAO,cAAC,EAAD,CACLrC,WAAYvJ,EAAMuJ,WAClBsB,SAAU7K,EAAM6K,SAChBxJ,OAAQrB,EAAMqB,OACdC,QAAStB,EAAMsB,QACfG,OAAQzB,EAAMyB,OACd2H,YAAapJ,EAAMoJ,YACnBV,aAAc1I,EAAM0I,aACpBD,aAAczI,EAAMyI,aACpB0C,WAAYA,EACZC,cAAeA,EACfpC,SAAS,UACTF,UAAW9I,EAAMwI,aACjBG,UAAW3I,EAAM+K,aACjB5J,YAAanB,EAAMmB,cAEvB,QACE,OAAO,cAAC,EAAD,CACLoI,WAAYvJ,EAAMuJ,WAClBsB,SAAU7K,EAAM6K,SAChBxJ,OAAQrB,EAAMqB,OACdC,QAAStB,EAAMsB,QACfG,OAAQzB,EAAMyB,OACd2H,YAAapJ,EAAMoJ,YACnBV,aAAc1I,EAAM0I,aACpBD,aAAczI,EAAMyI,aACpB0C,WAAYA,EACZC,cAAeA,EACfpC,SAAS,OACTF,UAAW9I,EAAMuI,UACjBI,UAAW3I,EAAM8K,UACjB3J,YAAanB,EAAMmB,e,UCrOZ0K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlL,MAAK,YAAkD,IAA/CmL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,EAAQ,IAERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0d02918c.chunk.js","sourcesContent":["import FHIR from 'fhirclient';\nimport { getPath } from 'fhirclient/lib/lib';\nimport { Card } from 'react-bootstrap';\n\nconst Events = {};\n\n// Launch Events\n\nEvents.patient = (props) => {\n    FHIR.oauth2.authorize({\n        client_id: \"efef2e22-0d52-4bfa-ab53-b44456625f2a\",\n        scope: \"user/Patient.read user/Person.read user/Practitioner.read user/RelatedPerson.read patient/AllergyIntolerance.read patient/Condition.read patient/MedicationStatement.read patient/Observation.read patient/Patient.read patient/Person.read patient/RelatedPerson.read launch/patient online_access openid profile\",\n        iss: \"https://fhir-myrecord.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d\",\n        redirectUri: \"https://danielmoffitt54.github.io/UMX-DX/\"\n    }).catch(console.error);\n}\n\n// Client Events\nEvents.client = {};\n\nEvents.client.ready = (props) => {\n    // Using the values from the authorize return, perform a request using the props Param value.\n    // Then always set loading state to false, and if successful set Oauth2 to the authorize return and Cerner to the request return.\n    FHIR.oauth2.ready()\n        .then(client => {\n            client.patient.request(\"Patient\", {\n                pageLimit: 0,\n                flat: true\n            }).then(res => {\n                props.SetAppState({ Loading: false, Oauth2: client, Patient: res[0] });\n            }).catch(() => props.SetAppState({ Loading: false }));\n        }).catch(() => props.SetAppState({ Loading: false }));\n}\n\nEvents.client.routeChange = (props) => {\n    // Test to see if the current Cerner state has another route's resource type.\n    // If so, update the Cerner state.\n    let newPage = false;\n    props.Cerner.forEach(entry => {\n        if (props.PrevScope.includes(entry.resourceType)) newPage = true;\n    });\n    if (newPage) {\n        props.SetAppState({ Loading: true });\n        Events.client.request(props);\n    }\n}\n\nEvents.client.request = (props) => {\n    // Using the current Oauth2 state, perform a request for the route's array at a certain index.\n    // Then update the Cerner state, the route's index state, and reset the current display back to 0.\n    const client = FHIR.client(props.Oauth2.state);\n    client.patient.request(props.Page, {\n        pageLimit: 0,\n        flat: true\n    })\n        .then(response => {\n            const newRes = [];\n            let addEntry = true;\n            response.forEach(res => {\n                switch (true) {\n                    default:\n                        addEntry = true;\n                        break;\n                    case (res.status && res.status === \"entered-in-error\"):\n                    case (res.verificationStatus && res.verificationStatus === \"entered-in-error\"):\n                    case (res.substance && res.substance === \"Entered In Error\"):\n                    case (res.code && res.code.text === \"Entered In Error\"):\n                        addEntry = false;\n                        break;\n                }\n                if (addEntry) newRes.push(res);\n            });\n            props.SetAppState({ Loading: false, Cerner: newRes, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 });\n        }).catch(() => props.SetAppState({ Loading: false, [props.Property]: props.Value, CurrentPage: 1, DisplayIndex: 0 }));\n}\n\n// Table Body Events\nEvents.main = {};\n\nEvents.main.observation = (props) => {\n    const issued = new Date(props.entry.issued),\n        report = Events.value.system(getPath(props.entry, \"code.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"code.text\") || \"Report Error\"),\n        addReport = Events.value.system(getPath(props.entry ,\"valueCodeableConcept.coding\"), \"http://snomed.info/sct\", getPath(props.entry, \"valueCodeableConcept.text\") || \"N/A\"),\n        addQty = getPath(props.entry, \"valueQuantity.value\") || \"N/A\",\n        addUnit = getPath(props.entry, \"valueQuantity.unit\") || \"N/A\",\n        absentReport = Events.value.system(getPath(props.entry, \"dataAbsentReason.coding\"), \"http://hl7.org/fhir/data-absent-reason\", getPath(props.entry, \"dataAbsentReason.text\") || \"Absent Report\");\n\n    let context = addReport;\n    if (addQty !== \"N/A\") context = addQty;\n    if (addQty !== \"N/A\" && addUnit !== \"N/A\") context = `${addQty} ${addUnit}`;\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{issued.toDateString() || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{getPath(props.entry, \"category.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.absentReport ? absentReport : report }</Card.Text>\n            <Card.Text>{context}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Footer>\n    </Card>\n}\n\nEvents.main.condition = (props) => {\n    const recorded = new Date(props.entry.dateRecorded),\n        onset = new Date(props.entry.onsetDateTime),\n        abatement = new Date(props.entry.onsetDateTime);\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{recorded.toDateString() || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{getPath(props.entry, \"category.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"code.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{abatement === \"Invalid Date\" ? `${onset.toDateString()} - Present` : `${onset.toDateString()} - ${abatement.toDateString()}` || \"N/A\"}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n            <Card.Text>{props.entry.verificationStatus || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.clinicalStatus || \"N/A\"}</Card.Text>\n        </Card.Footer>\n    </Card>\n}\n\nEvents.main.medicationstatement = (props) => {\n    const medication = Events.value.system(getPath(props.entry, \"medicationCodeableConcept.coding\") || getPath(props.entry, \"medicationCodeableConcept.code.coding\"), \"http://www.nlm.nih.gov/research/umls/rxnorm\", getPath(props.entry, \"medicationCodeableConcept.text\") || \"Unnamed Medication(TM)\"),\n        taken = getPath(props.entry, \"wasNotTaken\") ? \"Medicaiton has not been taken.\" : \"Medication has been taken\",\n        start = new Date(getPath(props.entry, \"effectivePeriod.start\")),\n        end = new Date(getPath(props.entry, \"effectivePeriod.end\"));\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{medication || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"dosage.0.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{taken || \"N/A\"}</Card.Text>\n            <Card.Text>{end === \"Invalid Date\" ? `${start.toDateString()} - Present` : `${start.toDateString()} - ${end.toDateString()}` || \"N/A\"}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Footer>\n    </Card>\n}\n\nEvents.main.allergyintolerance = (props) => {\n    const allergy = Events.value.system(getPath(props.entry, \"substance.coding\") || getPath(props.entry, \"substance.code.coding\"), \"http://snomed.info/sct\", props.entry.substance.text || \"Unnamed Allergy\"),\n        criticality = props.entry.criticality === \"CRITH\" ? \"High Risk\" : \"None\";\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            <Card.Text>{props.entry.category || \"N/A\"}</Card.Text>\n            <Card.Text>{allergy || \"N/A\"}</Card.Text>\n            <Card.Text>{criticality || \"N/A\"}</Card.Text>\n        </Card.Body>\n        <Card.Footer>\n            <Card.Text>{props.entry.status || \"N/A\"}</Card.Text>\n        </Card.Footer>\n    </Card>\n}\n\nEvents.main.patient = (props) => {\n    const address = getPath(props.entry, \"address.0.text\") || null;\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{getPath(props.entry, \"name.text\") || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.gender || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            {address ? <Card.Text>{address}</Card.Text> : null }\n            {props.entry.telecom ? props.entry.telecom.map(com => {\n                const telecom = Events.value.telecom(com);\n                if (!telecom || getPath(com, \"period.end\")) return\n                return <Card.Text>{`${telecom}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\nEvents.main.relatedperson = (props) => {\n    const birthDate = new Date(props.entry.birthDate),\n        address = getPath(props.entry, \"address.0.text\") || null;\n\n    return <Card key={props.index}>\n        <Card.Header>\n            <Card.Text>{props.entry.resourceType || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.name.text || \"N/A\"}</Card.Text>\n            <Card.Text>{props.entry.gender || \"N/A\"}</Card.Text>\n            <Card.Text>{birthDate.toDateString() || \"N/A\"}</Card.Text>\n        </Card.Header>\n        <Card.Body>\n            {address ? <Card.Text>{address}</Card.Text> : null }\n            {props.entry.telecom ? props.entry.telecom.map(com => {\n                const telecom = Events.value.telecom(com);\n                if (!telecom || getPath(com, \"period.end\")) return\n                return <Card.Text>{`${telecom}`}</Card.Text>\n            }) : null }\n        </Card.Body>\n    </Card>\n}\n\n// Value Events\nEvents.value = {};\n\nEvents.value.capitalize = (str) => {\n    return str[0].toUpperCase() + str.substring(1);\n}\n\nEvents.value.officialName = (array = []) => {\n    let entry = array.find(arrayRecord => arrayRecord.use === \"official\") || array[0];\n    if (entry) return entry.given.join(\" \") + \" \" + entry.family;\n    return \"N/A\";\n}\n\nEvents.value.telecom = (obj) => {\n    let out = obj.use ? Events.value.capitalize(obj.use) : null,\n        phone = obj.value ? Events.value.phone(obj.value) : null;\n    \n    if (!obj.system) return obj.value || null;\n    switch (obj.system) {\n        case 'email':\n            if (out && obj.value) {\n                out += \" \" + obj.value\n            } else if (obj.value) out = obj.value;\n            return out;\n        default:\n            if (out && phone) {\n                out += \" \" + phone\n            } else if (phone) out = phone;\n            return out;\n    }\n}\n\nEvents.value.phone = (str) => {\n    let out = str.split(\"\");\n    out.splice(6, 0, \".\");\n    out.splice(3, 0, \".\");\n    return out.join(\"\");\n}\n\nEvents.value.date = (str) => {\n    const date = new Date(str);\n    if (date) return date.toDateString();\n    return str;\n}\n\nEvents.value.system = (array = [], system, returnStr) => {\n    let out = returnStr || 'N/A';\n    const checkSys = array.find(c => c.system === system);\n    if (checkSys && checkSys.display) {\n        out = checkSys.display;\n    }\n    return out;\n}\n\nexport default Events;","import { NavLink } from 'react-router-dom';\nimport {\n    Navbar,\n    Nav,\n    NavDropdown,\n    Container,\n    Card,\n    ListGroup,\n    ListGroupItem\n} from 'react-bootstrap';\nimport Events from '../Events';\n\nconst Header = (props) => {\n    \n    return <Container fluid>\n        {!props.Oauth2 ? (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Login\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    <NavDropdown.Item as={NavLink} to=\"/launch-patient\">Patient</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        ) : (\n            <Navbar style={{ justifyContent: 'space-between' }}>\n                <Navbar.Brand\n                    as={NavLink}\n                    to=\"/\"\n                    onClick={() => props.SetAppState({\n                        Cerner: null,\n                        MainIndex: 0,\n                        AccountIndex: 0,\n                        DisplayCount: 25,\n                        DisplayIndex: 0\n                    })}\n                >UMX-DX App</Navbar.Brand>\n                <NavDropdown\n                    title=\"Menu\"\n                    id=\"navbarScrollingDropdown\"\n                >\n                    {props.AllOptions.map((option, i) => {\n                        return <NavDropdown.Item \n                            key={i}\n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</NavDropdown.Item>\n                    })}\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item\n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Oauth2: null,\n                            Patient: null,\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Log Out</NavDropdown.Item>\n                </NavDropdown>\n            </Navbar>\n        )}\n        {SubHeader(props)}\n    </Container>\n};\n\nfunction SubHeader(props) {\n\n    if (!props.Patient && !props.Cerner) return\n    if (props.Patient) console.log('Patient: ', props.Patient);\n\n    return <Container \n        noGutter\n        fluid\n    >\n        {props.Patient ? (\n            <Card style={{ margin: '0 0 5px 0' }}>\n                <Card.Body  style={{ \n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center' \n                }}>\n                    <div>\n                        <Card.Title style={{ margin: '0' }}>{Events.value.officialName(props.Patient.name)}</Card.Title>\n                        <Card.Subtitle style={{ margin: '0' }}>{`ID: ${props.Patient.id}`}</Card.Subtitle>\n                    </div>\n                    <ListGroup \n                        className=\"list-group-flush\"\n                        style={{ flexDirection: \"row\" }}>\n                        <ListGroupItem style={{ border: 'none' }}>{`Gender: ${Events.value.capitalize(props.Patient.gender)}`}</ListGroupItem>\n                        <ListGroupItem>{`DoB: ${Events.value.date(props.Patient.birthDate)}`}</ListGroupItem>\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        ) : null }\n        {props.Cerner ? (\n            <Nav style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                <Nav.Item>\n                    <Nav.Link \n                        as={NavLink}\n                        to=\"/\" \n                        onClick={() => props.SetAppState({\n                            Cerner: null,\n                            MainIndex: 0,\n                            AccountIndex: 0,\n                            DisplayCount: 25,\n                            DisplayIndex: 0\n                        })}\n                    >Back</Nav.Link>\n                </Nav.Item>\n                {props.PageArray.map((option, i) => {\n                    if (props.PageIndex === i) return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                    return <Nav.Item>\n                        <Nav.Link key={i} \n                            as={NavLink}\n                            to={option.path}\n                            onClick={() => {\n                                props.SetAppState({ Loading: true });\n                                Events.client.request({\n                                    Oauth2: props.Oauth2,\n                                    Page: option.value,\n                                    Property: `${props.PageType}Index`,\n                                    Value: i,\n                                    SetAppState: props.SetAppState\n                                });\n                            }}\n                        >{option.label}</Nav.Link>\n                    </Nav.Item>\n                })}\n                <Nav.Item>\n                    <Nav.Link\n                        as={NavDropdown}\n                        title={`Count: ${props.DisplayCount}`}\n                        id=\"navbarScrollingDropdown\"\n                    >\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 25, CurrentPage: 1, DisplayIndex: 0 })}\n                        >25</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 50, CurrentPage: 1, DisplayIndex: 0 })}\n                        >50</NavDropdown.Item>\n                        <NavDropdown.Item\n                            onClick={() => props.SetAppState({ DisplayCount: 100, CurrentPage: 1, DisplayIndex: 0 })}\n                        >100</NavDropdown.Item>\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n        ) : null }\n    </Container>\n\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\nimport {\n    Container,\n    Card\n} from 'react-bootstrap';\n\nconst Cards = (props) => {\n\n    return <Container>\n        {props.AllOptions.map((option, i) => {\n            return <Card>\n                <NavLink key={i} \n                    to={option.path}\n                    onClick={() => props.RedirectRoute({\n                        option: option,\n                        index: i\n                    })}\n                >{option.label}</NavLink>\n            </Card>\n        })}\n    </Container>\n}\n\nexport default Cards;","import {\n  Container\n} from 'react-bootstrap';\nimport Events from \"../Events\";\n\nconst Main = (props) => {\n    const Display = [];\n    let Type = null,\n        Pages = Math.ceil(props.Cerner.length / props.DisplayCount);\n\n    if (props.Cerner[0].resourceType) Type = props.Cerner[0].resourceType.toLowerCase();\n\n    // For each entry, see if value has entered-in-error and if not add entry to display...\n    // then set up pages to be viewed.\n    for (let i = 0; i < props.Cerner.length && Display.length < props.DisplayCount; i++) {\n        if (i >= props.DisplayIndex) Display.push(props.Cerner[i]);\n    }\n\n    if (Display.length > 0) console.log(\"Display: \", Display);\n\n    return <div className=\"App-Table\">\n      <Container>\n        {Display.map((entry, index) => {\n          return Events.main[Type]({\n            index: index,\n            entry: entry\n          });\n        })}\n      </Container>\n      {Pages > 1 ? (\n        <TableFooter \n          Cerner={props.Cerner}\n          Pages={Pages}\n          DisplayCount={props.DisplayCount}\n          DisplayIndex={props.DisplayIndex}\n          CurrentPage={props.CurrentPage}\n          SetAppState={props.SetAppState}\n          SetParentState={props.SetParentState}\n        />\n      ) : null}\n    </div>\n}\n\nfunction TableFooter(props) {\n    return <div className=\"Footer-Nav\">\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: 1, DisplayIndex: 0 })}\n                disabled={props.CurrentPage <= 1}\n            >First</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage - 1, DisplayIndex: props.DisplayIndex - props.DisplayCount })}\n                disabled={props.CurrentPage <= 1}\n            >Prev</button>\n        </div>\n        <div className=\"Footer-Nav-Link\">\n            <label className=\"Footer-Label\">\n                <input \n                    className=\"Footer-Input\"\n                    type=\"text\" \n                    value={props.CurrentPage}\n                    onChange={event => props.SetAppState({ CurrentPage: event.target.value })}\n                    onKeyPress={event => {\n                        if (event.key === \"Enter\") {\n                            if (props.CurrentPage <= 1) {\n                                props.SetAppState({ DisplayIndex: 0 });\n                                return props.SetAppState({ CurrentPage: 1 });\n                            }\n                            if (props.CurrentPage >= props.Pages) {\n                                props.SetAppState({ DisplayIndex: props.Cerner.length - props.DisplayCount });\n                                return props.SetAppState({ CurrentPage: props.Pages });\n                            }\n                            props.SetAppState({ DisplayIndex: props.DisplayCount * (props.CurrentPage - 1) });\n                        }\n                    }}\n                ></input>\n                {`/${props.Pages}`}\n            </label>\n        </div>\n        <div>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.CurrentPage + 1, DisplayIndex: props.DisplayIndex + props.DisplayCount })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Next</button>\n            <button\n                className=\"Footer-Nav-Link\"\n                onClick={() => props.SetAppState({ CurrentPage: props.Pages, DisplayIndex: props.DisplayCount * (props.Pages - 1) })}\n                disabled={props.CurrentPage >= props.Pages}\n            >Last</button>\n        </div>\n    </div>\n}\n\nexport default Main;","import Events from '../../Events';\n\nconst Patient = () => {\n\n    Events.patient();\n    return <div className=\"App-Launch\">\n        <h1>Please wait...</h1>\n    </div>\n};\n\n\nexport default Patient;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Events from './Events';\nimport Header from './Component/Header';\nimport Cards from './Component/Cards';\nimport Main from './Component/Main';\nimport LaunchPatient from './Component/Launch/LaunchPatient';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      Dropdown: null,\n      Oauth2: null,\n      Patient: null,\n      Cerner: null,\n      CurrentPage: 0,\n      DisplayIndex: 0,\n      DisplayCount: 25,\n      MainIndex: 0,\n      MainArray: [\n        { \n          label: \"Observations\",\n          value: \"Observation\",\n          path: \"/observations\"\n        } , {\n          label: \"Conditions\",\n          value: \"Condition\",\n          path: \"/conditions\"\n        } , {\n          label: \"Medications\",\n          value: \"MedicationStatement\",\n          path: \"/medications\"\n        } , {\n          label: \"Allergies\",\n          value: \"AllergyIntolerance\",\n          path: \"/allergies\"\n        }\n      ],\n      AccountIndex: 0,\n      AccountArray: [\n        { \n          label: \"Account\",\n          value: \"Patient\",\n          path: \"/account\"\n        } , {\n          label: \"Relatives\",\n          value: \"RelatedPerson\",\n          path: \"/relatives\"\n        }\n      ]\n    }\n    this.SetAppState = this.SetAppState.bind(this);\n    this.RedirectRoute = this.RedirectRoute.bind(this);\n  }\n\n  SetAppState(event) {\n    this.setState(event);\n  }\n\n  RedirectRoute(props) {\n    const MainLabels = [],\n      AccountLabels = [],\n      { Oauth2, MainArray, AccountArray } = this.state;\n\n    MainArray.forEach(option => MainLabels.push(option.label));\n    AccountArray.forEach(option => AccountLabels.push(option.label));\n\n    this.setState({ Loading: true });\n    if (AccountLabels.includes(props.option.label)) {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"AccountIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    } else {\n      Events.client.request({\n        Oauth2: Oauth2,\n        Page: props.option.value,\n        Property: \"MainIndex\",\n        Value: props.index,\n        SetAppState: this.SetAppState\n      });\n    }\n    <Redirect to={props.option.path}/>\n  }\n\n  componentDidMount() {\n    const { Cerner } = this.state;\n    if (!Cerner) {\n      Events.client.ready({\n        SetAppState: this.SetAppState\n      });\n      this.setState({ Loading: true });\n    }\n  }\n\n  render() {\n    const {\n      Loading,\n      Dropdown,\n      Oauth2,\n      Patient,\n      Cerner,\n      CurrentPage,\n      DisplayIndex,\n      DisplayCount,\n      MainIndex,\n      MainArray,\n      AccountIndex,\n      AccountArray,\n    } = this.state,\n      AllOptions = MainArray.concat(AccountArray);\n\n    if (Cerner) console.log(\"Cerner: \", Cerner);\n\n    return <div className=\"App\">\n      <Router basename=\"/UMX-DX\">\n        <GetHeader \n          AllOptions={AllOptions}\n          Dropdown={Dropdown}\n          Oauth2={Oauth2}\n          Patient={Patient}\n          Cerner={Cerner}\n          CurrentPage={CurrentPage}\n          DisplayIndex={DisplayIndex}\n          DisplayCount={DisplayCount}\n          MainIndex={MainIndex}\n          MainArray={MainArray}\n          AccountIndex={AccountIndex}\n          AccountArray={AccountArray}\n          SetAppState={this.SetAppState}\n        />\n        <Switch>\n          <Route exact path='/'>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Oauth2 ? (\n                <div className=\"App-Login\">\n                  <h1>Please Login to Continue</h1>\n                </div>\n              ) : null\n            )}\n          </Route>\n          {AllOptions.map((option, index) => {\n            return <Route key={index} path={option.path}>\n            {Loading ? (\n              <div className=\"App-Loading\">\n                <h1>Please wait...</h1>\n              </div>\n            ) : (\n              !Cerner || Cerner.length === 0 ? (\n                  <div className=\"App-Error\">\n                    <h1>Error Retrieveing Data</h1>\n                  </div>\n              ) : (\n                <Main\n                  Cerner={Cerner}\n                  DisplayCount={DisplayCount}\n                  DisplayIndex={DisplayIndex}\n                  CurrentPage={CurrentPage}\n                  SetAppState={this.SetAppState}\n                />\n              )\n            )}\n            </Route>\n          })}\n          {!Oauth2 ? (\n            <>\n              <Route path=\"/launch-patient\">\n                <LaunchPatient />\n              </Route>\n            </>\n          ) : null }\n        </Switch>\n        {!Loading && Oauth2 ? (\n          <Cards \n            AllOptions={AllOptions}\n            RedirectRoute={this.RedirectRoute}\n          />\n        ) : null }\n      </Router>\n    </div>\n  }\n};\n\nfunction GetHeader(props) {\n  const MainLabels = [],\n    AccountLabels = [];\n  let includedAccount = false;\n\n  props.MainArray.forEach(option => MainLabels.push(option.label));\n  props.AccountArray.forEach(option => {\n    if (props.Cerner && option.value === props.Cerner[0].resourceType) includedAccount = true;\n    AccountLabels.push(option.label)\n  });\n\n  switch (true) {\n    case includedAccount:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Account\"\n        PageIndex={props.AccountIndex}\n        PageArray={props.AccountArray}\n        SetAppState={props.SetAppState}\n      />\n    default:\n      return <Header \n        AllOptions={props.AllOptions}\n        Dropdown={props.Dropdown}\n        Oauth2={props.Oauth2}\n        Patient={props.Patient}\n        Cerner={props.Cerner}\n        CurrentPage={props.CurrentPage}\n        DisplayIndex={props.DisplayIndex}\n        DisplayCount={props.DisplayCount}\n        MainLabels={MainLabels}\n        AccountLabels={AccountLabels}\n        PageType=\"Main\"\n        PageIndex={props.MainIndex}\n        PageArray={props.MainArray}\n        SetAppState={props.SetAppState}\n      />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('./index.scss');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}